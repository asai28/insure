{"version":3,"sources":["constants/routes.js","utils/API.js","Pages/ServiceRequestForm/ServiceRequestForm.js","Pages/TaskList/TaskList.js","Pages/Admin_IC/Home.js","Pages/Admin_IC/Admin.js","Pages/Admin_ICABOB/Home.js","Pages/Admin_ICABOB/Admin_ICABOB.js","App.js","index.js"],"names":["routes","API","postService","item","axios","post","getEmployees","get","newCompanyLocation","newCompanyContact","newCompany","getLocation","getContact","getCompany","getCompanyDetails","companyName","getCompanyContacts","getCompanyLocations","getCompanyEquipments","postCompanyEquipments","getTopicBasedEquipments","newServiceRequest","getServiceRequests","deleteServiceRequests","delete","deleteService","serviceName","getListOfServices","addTask","getEmployeeTasks","employee","removeService","id","modifyTask","put","completedTasks","allTasks","filterTasks","quotationIssuedBy","quoteApproved","completed","searchParams","URLSearchParams","undefined","append","console","log","toString","deleteTask","modifyEntireTask","incompleteTasks","emp","incompleteNullTasks","window","html2canvas","styles","pdf","padding","height","width","h4","color","logo","float","info","content","clear","quotation","fontFamily","billedTo","quote","FaPlus","FaCheck","FaTimes","note","fontSize","fontWeight","notify","display","removeContactNotification","equipmentsAlwaysOnSite","equipmentIDs","uniqueCompanies","employees","us_states","key","states","push","Example","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","document","getElementById","style","componentWillMount","getCompanies","then","res","setState","topicsVsEquipments","data","catch","err","listOfServices","getPriceAndQuantity","result","state","filter","element","topic","trim","value","serviceUnits","DurationInMin","costOfService","defineProperty","billableService","durationInMin","parseInt","numServiceUnits","parseFloat","costForService","service","Laptop","projectorScreen","Table","trainingKit","forkliftTrainingKit","CPRmannequins","firstAidAEDKit","RespiratorFitTestKit","Handouts","result2","qty","cost","showTopics","description","getAvailableEquipments","i","length","addContact","newCompanyName","newContactName","newContactEmail","newContactOfficePhone","newContactMobilePhone","newContactMobilePhoneAlternate","mainContact","reset","addLocation","newContactStreetAddress","newContactCity","newContactState","newContactZIP","newContactCountry","mainLocation","addService","billable","isNullOrUndefined","alternateName","serviceDescription","requestedServices","saveServices","sum","totalCost","toggleServiceModal","getServices","x","map","index","react_default","a","createElement","toFixed","fa","onClick","removeServices","indexOf","companyNames","saveCompany","newProducer","newAgency","newContractClient","toggleModal","handlePDF","startDate","offsetHeight","offsetWidth","scale","dpi","canvas","wid","hgt","img","toDataURL","hratio","doc","jsPDF","internal","pageSize","addImage","toDate","save","format","handleCompanyName","validCompanyName","companyMobileContacts","contactMobilePhone","companyOfficeContacts","contactOfficePhone","companyLocations","checked","validatePhone","re","RegExp","validPhone","test","contactPhone","isNaN","validateCellPhone","validCellPhone","contactCellPhone","validateEmail","validEmail","String","contactEmail","toLowerCase","validateZIP","zipRegex","validZIP","zip","handleSubmit","e","preventDefault","validThru","paymentBy","paymentForTraining","producer","contactPerson","contactName","contactState","contactStreetAddress","contactCity","contactZip","contactCountry","country","instructions","quotationNumber","quoteNumber","res1","client","res2","moment","add","services","sameLocAsTraining","streetAddress","city","equipmentsSelectedSite","equipmentsSelectedTraining","equipments","active","addOn","error","modal","serviceModal","requestedServiceRows","viewServiceRows","viewServiceModal","popoverOpen","additionalEquipments","handleInputChange","_e$target","target","name","toggleViewServicesModal","bind","assertThisInitialized","handleChange","togglePopOver","EMP_NAME","date","_this2","src","alt","className","reactstrap_es","for","type","onChange","option","isOpen","toggle","placeholder","defaultChecked","es","selected","placement","keys","cities","y","contactZIP","disabled","getInitial","dist_default","React","Component","fastSort","require","TaskList","employee_data","getTasks","split","join","incomplete","tasks","concat","getCompletedTasks","printMap","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","sortParameters","entries","Symbol","iterator","next","done","_ref","_ref2","slicedToArray","return","tooltipOpen","Map","asc","desc","set","by","substring","toUpperCase","dateAssigned","dueDate","defaultValue","dateCompleted","status_notes_comments","tag","check","includes","Date","Home","react","alert","show","success","withAlert","options","timeout","position","Admin_IC","displayAlert","react_alert","assign","template","AlertTemplate","Admin_IC_Home","filterResults","margin","toEmployee","task","details","offset","transition","Admin_ICABOB","Admin_ICABOB_Home","App","light","expand","href","navbar","nav","inNavbar","caret","right","BrowserRouter","basename","Switch","Route","exact","path","component","ServiceRequestForm","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.922b9e55.chunk.js","sourcesContent":["const REGISTER = '/register';\nconst LOGIN = '/login';\nconst SERVICE_FORM = '/';\nconst TASK_LIST = '/tasklist';\nconst ADMIN_IC = '/adminIC';\nconst ADMIN_ICABOB = '/adminICABOB'\n\nexport default {\n    REGISTER: REGISTER,\n    LOGIN: LOGIN,\n    SERVICE_FORM: SERVICE_FORM,\n    TASK_LIST: TASK_LIST,\n    ADMIN_IC: ADMIN_IC,\n    ADMIN_ICABOB: ADMIN_ICABOB\n\n}","import axios from \"axios\";\n\nexport default{\n\n    postService : function(item) {\n        return axios.post(\"/api/services\", item)\n    },\n\n    getEmployees : function(){\n        return axios.get(\"/api/employees\")\n    },\n\n    newCompanyLocation : function(item){\n        return axios.post(\"/api/locations\", item)\n    },\n\n    newCompanyContact : function(item){\n        return axios.post(\"/api/contacts\", item)\n    },\n\n    newCompany : function(item){\n        return axios.post(\"/api/companies\", item)\n    },\n    getLocation : function(){\n        return axios.get(\"/api/locations\")\n    },\n\n    getContact : function(){\n        return axios.get(\"/api/contacts\")\n    },\n\n    getCompany : function(){\n        return axios.get(\"/api/companies\")\n    },\n    getCompanyDetails: function(companyName){\n        return axios.get(\"/api/companies/\" + companyName)\n    },\n    getCompanyContacts: function(companyName){\n        return axios.get(\"/api/contacts/\" + companyName)\n    },\n    getCompanyLocations: function(companyName){\n        return axios.get(\"/api/locations/\" + companyName)\n    },\n    getCompanyEquipments: function(companyName){\n        return axios.get(\"/api/companiesEquipments/\" + companyName)\n    },\n    postCompanyEquipments: function(item){\n        return axios.post(\"/api/companiesEquipments/\", item)\n    },\n    getTopicBasedEquipments: function(){\n        return axios.get(\"/api/topics\")\n    },\n    newServiceRequest: function(item){\n        return axios.post(\"/api/requestedServices\", item)\n    },\n    getServiceRequests: function(){\n        return axios.get(\"/api/requestedServices\")\n    },\n    deleteServiceRequests: function(){\n        return axios.delete(\"/api/requestedServices/\")\n    },\n    deleteService: function(serviceName){\n        return axios.delete(\"/api/requestedServices/\" + serviceName)\n    },\n    getListOfServices: function(){\n        return axios.get(\"/api/listOfServices\")\n    },\n    addTask: function(item){\n        return axios.post(\"/api/taskList\", item)\n    },\n    getEmployeeTasks: function(employee){\n        return axios.get(\"/api/tasklist/\" + employee)\n    },\n    removeService: function(id){\n        return axios.delete(\"/api/requestedServices/\" + id)\n    },\n    modifyTask: function(id, item){\n        return axios.put(\"/api/tasklist/\" + id, item)\n    },\n    completedTasks: function(employee){\n        return axios.get(\"/api/tasklist/\" + employee + \"/completed\")\n    },\n    allTasks: function(){\n        return axios.get(\"/api/tasklist\")\n    },\n    filterTasks: function(quotationIssuedBy,quoteApproved,completed){\n        const searchParams = new URLSearchParams();\n        if(quotationIssuedBy !== undefined){\n            searchParams.append(\"quotationIssuedBy\", quotationIssuedBy);\n        }\n        if(quoteApproved !== undefined){\n            searchParams.append(\"quoteApproved\", quoteApproved);\n        }\n        if(completed !== undefined){\n            searchParams.append(\"completed\", completed);\n        }\n        console.log(searchParams.toString());\n        return axios.get(`/api/tasklist/sortBy?` + searchParams.toString())\n    },\n    deleteTask: function(id){\n        return axios.delete(`/api/tasklist/` + id)\n    },\n    modifyEntireTask: function(id, item){\n        return axios.put(\"/api/tasklist/\" + id, item)\n    },\n    incompleteTasks: function(emp) {\n        return axios.get(\"/api/tasklist/\" + emp + \"/incomplete\")\n    },\n    incompleteNullTasks: function(emp) {\n        return axios.get(\"/api/tasklist/\" + emp + \"/incompleteNull\")\n    }\n}\n\n//https://cors-anywhere.herokuapp.com/\n","import React from \"react\";\n\n/*Imports for modals from reactstrap */\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,Alert } from \"reactstrap\";\n\n/*Imports required for Form Group */\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { Container } from \"reactstrap\";\n\n/*Import tooltip or popover from reactstrap*/\n//import { Tooltip } from \"reactstrap\";\nimport {Popover, PopoverHeader, PopoverBody} from \"reactstrap\";\n\n//Importing CSS for body, logo and table of the pdf generator\nimport \"./style.css\";\n\n//Utils for checking null or undefined field\nimport { isNullOrUndefined } from \"util\";\n\n/*Imports required for React Calendar */\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n//Validation icons\nimport { FaPlus, FaCheckCircle, FaTimesCircle, FaTrash, FaTimes, FaMinusCircle} from \"react-icons/fa\";\n\n//Importing cities and states for countries\nimport cities from \"../../utils/cities.json\";\nimport states from \"../../utils/us-states.json\";\nimport services from \"../../utils/services.json\";\n\n//Connection to backend\nimport API from \"../../utils/API\";\n\n//imports for PDF generation\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nwindow.html2canvas = html2canvas;\n\nconst styles = {\n  pdf: {\n    padding: \"10px 10px\",\n    height: \"180mm\",\n    width: \"200mm\"\n  },\n  h4: {\n    color: \"#000\"\n  },\n  logo: {\n    float: \"right\",\n    height: \"100px\",\n    width: \"300px\"\n  },\n  info: {\n    float: \"left\"\n  },\n  content: {\n    clear: \"both\"\n  },\n  quotation: {\n    fontFamily: \"Andika\",\n    color: \"#009999\"\n  },\n  billedTo: {\n    float: \"left\"\n  },\n  quote: {\n    float: \"right\"\n  },\n  FaPlus: {\n    color: \"#339933\"\n  },\n  FaCheck: {\n    color: \"#339933\"\n  },\n  FaTimes: {\n    color: \"#cc3300\"\n  },\n  note: {\n    fontFamily: \"Palatino Linotype\",\n    fontSize: \"0.75em\",\n    fontWeight: \"500\"\n  },\n  notify: {\n    color: \"#228B22\",\n    display: \"none\",\n    fontWeight: \"700\"\n  },\n  removeContactNotification: {\n    color: \"#E82C0C\",\n    display: \"none\",\n    fontWeight: \"700\"\n  }\n};\n\n//Initialized outside to add new equipments on the fly\nvar equipmentsAlwaysOnSite = [\n  \"Laptop\",\n  \"projectorScreen\",\n  \"Table\",\n  \"trainingKit\",\n  \"forkliftTrainingKit\",\n  \"CPRmannequins\",\n  \"firstAidAEDKit\",\n  \"Handouts\"\n];\nvar equipmentIDs = [\n  \"Laptop\",\n  \"projectorScreen\",\n  \"Table\",\n  \"trainingKit\",\n  \"forkliftTrainingKit\",\n  \"CPRmannequins\",\n  \"firstAidAEDKit\",\n  \"Handouts\"\n];\n\n//Unique Companies\nvar uniqueCompanies = [];\n\n//Get employee names from API.js\nvar employees = [];\n\n//Get company Details, contacts, locations\nvar getCompanyDetails = [];\nvar getCompanyContacts = [];\nvar getCompanyLocations = [];\n\n//Get all US states\nvar us_states = [];\nfor (let key in states) {\n  us_states.push(states[key]);\n}\n\nfunction getInitial(state) {\n  for (let key in states) {\n    if (states[key] === state) {\n      return key;\n    }\n  }\n}\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    //State variables for form elements and their validation\n    this.state = {\n      startDate: moment(),\n      validThru: moment()\n        .add(90, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      newContractClient: false,\n      companyName: \"\",\n      newCompanyName: \"\",\n      companyNames: services.companyName,\n      country: \"United States\",\n      topic: \"\",\n      service: \"\",\n      producer: \"\",\n      sameLocAsTraining: false,\n      validCompanyName: false,\n      validPhone: false,\n      validEmail: false,\n      validCellPhone: false,\n      validZIP: false,\n      contactName: \"\",\n      contactPhone: \"\",\n      contactCellPhone: \"\",\n      contactEmail: \"\",\n      state: \"\",\n      streetAddress: \"\",\n      city: \"\",\n      zip: \"\",\n      contactStreetAddress: \"\",\n      contactZip: \"\",\n      contactCountry: \"United States\",\n      contactState: \"\",\n      contactCity: \"\",\n      //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\n      equipmentsSelectedSite: [],\n      equipmentsSelectedTraining: [],\n      //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\n      equipments: [\n        \"Laptop\",\n        \"Projector Screen\",\n        \"Table\",\n        \"Training Kit (Green Duffle Bag)\",\n        \"Forklift Training Kit (Grey Duffle Bag)\",\n        \"CPR mannequins\",\n        \"First Aid & AED Kit (Red Backpack)\",\n        \"Handouts\"\n      ],\n      Laptop: false,\n      projectorScreen: false,\n      Table: false,\n      trainingKit: false,\n      forkliftTrainingKit: false,\n      CPRmannequins: false,\n      firstAidAEDKit: false,\n      RespiratorFitTestKit: false,\n      Handouts: false,\n      active: true,\n      addOn: \"\",\n      error: {},\n      modal: false,\n      quotationIssuedBy: \"\",\n      instructions: \"\",\n      serviceModal: false,\n      billableService: true,\n      alternateName: \"\",\n      costForService: 0.0,\n      requestedServices: [],\n      requestedServiceRows: [],\n      viewServiceRows: [],\n      totalCost: 0,\n      viewServiceModal: false,\n      showTopics: false,\n      popoverOpen: false,\n      description: \"\",\n      companyMobileContacts: [],\n      companyOfficeContacts: [],\n      companyLocations: [],\n      listOfServices: [],\n      additionalEquipments: [],\n      quotationNumber: \"\"\n    };\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePhone = this.validatePhone.bind(this);\n    this.validateCellPhone = this.validateCellPhone.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateZIP = this.validateZIP.bind(this);\n    this.handleCompanyName = this.handleCompanyName.bind(this);\n    this.handlePDF = this.handlePDF.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.getEmployees = this.getEmployees.bind(this);\n    this.saveCompany = this.saveCompany.bind(this);\n    this.addContact = this.addContact.bind(this);\n    this.addLocation = this.addLocation.bind(this);\n    this.getCompanies = this.getCompanies.bind(this);\n    this.addService = this.addService.bind(this);\n    this.toggleServiceModal = this.toggleServiceModal.bind(this);\n    this.toggleViewServicesModal = this.toggleViewServicesModal.bind(this);\n    this.getPriceAndQuantity = this.getPriceAndQuantity.bind(this);\n    this.getServices = this.getServices.bind(this);\n    this.saveServices = this.saveServices.bind(this);\n    this.removeServices = this.removeServices.bind(this);\n    this.togglePopOver = this.togglePopOver.bind(this);\n  }\n  \n  componentDidMount = () => {\n    document.getElementById('addEquipment').style.display = \"none\";\n  };\n  \n  componentWillMount = () => {\n    this.getEmployees();\n    this.getCompanies();\n    API.getTopicBasedEquipments()\n      .then(res => {\n        this.setState({\n          topicsVsEquipments : res.data\n        });\n        console.log(\"topic vs equipments loaded!\");\n      })\n      .catch(err => console.log(err));\n    API.getListOfServices()\n    .then(res => {\n      console.log(res);\n      this.setState({\n        listOfServices :res.data\n      })\n      \n      console.log(\"services list loaded!\");\n    })\n    .catch(err => console.log(err));\n  };\n\n  getPriceAndQuantity = () => {\n    var result = this.state.topicsVsEquipments.filter(\n      element => element.topic === this.state.topic\n    )[0];\n    if (result !== {} && this.state.topic.trim() !== \"\") {\n      document.getElementById(\"numServiceUnits\").value = result.serviceUnits;\n      document.getElementById(\"durationInMin\").value = result.DurationInMin;\n      document.getElementById(\"costForService\").value = result.costOfService;\n\n      this.setState({\n      billableService: true,\n      durationInMin: parseInt(result.DurationInMin),\n      numServiceUnits: parseFloat(result.serviceUnits),\n      costForService: parseFloat(result.costOfService),\n      service: \"Training - \" + this.state.topic,\n      Laptop: this.state.Laptop || result.Laptop,\n      projectorScreen: this.state.projectorScreen || result.projectorScreen,\n      Table: this.state.Table || result.Table,\n      trainingKit: this.state.trainingKit || result.trainingKit,\n      forkliftTrainingKit: this.state.forkliftTrainingKit || result.forkliftTrainingKit,\n      CPRmannequins: this.state.CPRmannequins || result.CPRmannequins,\n      firstAidAEDKit: this.state.firstAidAEDKit || result.firstAidAEDKit,\n      RespiratorFitTestKit: this.state.RespiratorFitTestKit || result.RespiratorFitTestKit,\n      Handouts: this.state.Handouts || result.Handouts,\n      costForService: result.costOfService\n      });\n    }\n\n    var result2 = this.state.listOfServices\n    .filter(element => element.service === this.state.service)[0];\n    if (result2 !== undefined && this.state.service.trim() !== \"\" && this.state.service !== \"Training\") {\n      document.getElementById(\"numServiceUnits\").value = result2.qty;\n      document.getElementById(\"costForService\").value = result2.cost;\n\n      this.setState({\n        service: this.state.service,\n        showTopics: false,\n        description: result2.description\n      });\n    }\n  };\n\n  getAvailableEquipments = () => {\n    //console.log(this.state.companyName);\n    var checkedEquipments = [];\n    var row = {};\n    if (this.state.companyName.trim() !== \"\") {\n      for (let i = 0; i < this.state.topicsVsEquipments.length; ++i) {\n        if (this.state.topicsVsEquipments[i].topic === this.state.topic) {\n          row = this.state.topicsVsEquipments[i];\n          break;\n        }\n      }\n    }\n  };\n\n  addContact = () => {\n    var item = {\n      newCompanyName: this.state.newCompanyName,\n      newContactName: this.state.newContactName,\n      newContactEmail: this.state.newContactEmail,\n      newContactOfficePhone: this.state.newContactOfficePhone,\n      newContactMobilePhone: this.state.newContactMobilePhone,\n      newContactMobilePhoneAlternate: this.state.newContactMobilePhoneAlternate,\n      mainContact: this.state.mainContact\n    };\n    API.newCompanyContact(item)\n      .then(res => {\n        console.log(res);\n        document.getElementById(\"newContactPhone\").reset();\n      })\n      .catch(err => console.log(err));\n\n    document.getElementById(\"notifyContactAdded\").style.display = \"block\";\n    document.getElementById(\"removeContactNotification\").style.display =\n      \"block\";\n  };\n\n  addLocation = () => {\n    var item = {\n      newCompanyName: this.state.newCompanyName,\n      newContactStreetAddress: this.state.newContactStreetAddress,\n      newContactCity: this.state.newContactCity,\n      newContactState: this.state.newContactState,\n      newContactZIP: this.state.newContactZIP,\n      newContactCountry: this.state.newContactCountry,\n      mainLocation: this.state.mainLocation\n    };\n    API.newCompanyLocation(item)\n      .then(res => {\n        console.log(res);\n        document.getElementById(\"newContactLocation\").reset();\n      })\n      .catch(err => console.log(err));\n\n    document.getElementById(\"notifyLocationAdded\").style.display = \"block\";\n    document.getElementById(\"removeLocationNotification\").style.display =\n      \"block\";\n  };\n\n  addService = () => {\n    var item = {\n      companyName: this.state.companyName,\n      service: this.state.service,\n      billable: this.state.billableService,\n      costForService: this.state.costForService,\n      durationInMin: this.state.durationInMin,\n      qty: (!isNullOrUndefined(this.state.numServiceUnits)) ? parseFloat(this.state.numServiceUnits): 1,\n      alternateName: this.state.alternateName.length === 0 ? this.state.service : this.state.alternateName,\n      cost: parseFloat(this.state.costForService),\n      serviceDescription: this.state.description\n    }; \n\n    console.log(item);\n\n    API.newServiceRequest(item)\n      .then(res => {\n        //console.log(res);\n        this.setState({\n          topic: \"\",\n          service: \"\",\n          description: \"\",\n          costForService: 0,\n          billableService: true,\n          alternateName: this.state.service,\n          durationInMin: 0\n        });\n        API.getServiceRequests()\n      .then(res => {\n        console.log(res);\n        this.setState({\n          requestedServices : res.data\n        })\n        // this.setState({\n        //   requestedServiceRows: this.getServices()\n        // });\n      })\n      .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n\n    //Clear all fields to add further services\n    document.getElementById(\"addService\").reset();\n  };\n\n  saveServices = () => {\n    API.getServiceRequests()\n      .then(res => {\n        \n        this.setState({\n          requestedServices : res.data\n        });\n        API.getServiceRequests()\n        .then(res => {\n        var sum = 0;\n          for(let i = 0; i < res.data.length; ++i){\n            if(res.data[i].billable){\n            sum += res.data[i].qty * res.data[i].cost\n            }\n          }\n        this.setState({\n          totalCost: sum\n        });\n        })\n        .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n    this.toggleServiceModal();\n  };\n\n  getServices = () => {\n    return this.state.requestedServices\n      .filter(x => x.billable === true)\n      .map((x, index) => (\n        <tr key={\"serviceRequest\" + (index + 1)} id = {x.id}>\n          <td>{x.alternateName}</td>\n          <td>{x.qty}</td>\n          <td>{x.cost.toFixed(2)}</td>\n          <td>${(x.qty * x.cost).toFixed(2)}</td>\n          <td><FaMinusCircle style = {{'color': '#cc3300'}} onClick = {() => {\n            document.getElementById(x.id).style.display = 'none';\n            API.removeService(x.id)\n            .then(() => {\n              console.log(x.id);\n              API.getServiceRequests()\n              .then(res => {\n                this.setState({\n                  requestedServices : res.data\n                })\n                // this.setState({\n                //   requestedServiceRows: this.getServices()\n                // });\n              console.log(\"Deleted\");\n              })\n              .catch(err => console.log(err));\n            })\n            .catch(err => console.log(err));\n            }}/></td>\n          {this.setState({\n            totalCost: this.state.totalCost + x.qty * x.cost * x.billable\n          })}\n        </tr>\n      ));\n  };\n\n  removeServices = () => {\n    var result = [];\n    API.getServiceRequests()\n      .then(res => {\n        this.setState({\n          requestedServices : res.data\n        })\n        console.log(\"remove services\",this.state.requestedServices);\n        result =  this.state.requestedServices\n          .map((x, index) => (\n            <tr key={\"serviceRequest\" + (index + 1)} id = {\"serviceRequest\" + (index + 1)}>\n              <td>{x.alternateName}</td>\n              <td>{x.qty}</td>\n              <td>{x.cost.toFixed(2)}</td>\n              <td>${(x.qty * x.cost).toFixed(2)}</td>\n              <td><FaTrash style = {{'color': 'red'}} onClick = {() => {\n                API.deleteService(x.alternateName)\n                .then(res => {\n                  this.setState({\n                    totalCost: this.state.totalCost - x.qty * x.cost * x.billable\n                  });\n                  })\n                .catch(err => console.log(err));\n              }}/>\n              </td>\n            </tr>\n          ));\n      })\n      .catch(err => console.log(err));\n      return result\n  };\n\n  getCompanies = () => {\n    API.getCompany()\n      .then(res => {\n        for (let i = 0; i < res.data.length; ++i) {\n          if (uniqueCompanies.indexOf(res.data[i].companyName) === -1 && res.data[i].companyName.trim() !== \"\") {\n            uniqueCompanies.push(res.data[i].companyName);\n          }\n        }\n        this.setState({ companyNames: uniqueCompanies });\n        console.log(\"Companies table loaded\");\n      })\n      .catch(err => console.log(err));\n  };\n\n  saveCompany = () => {\n    this.addContact();\n    this.addLocation();\n    var item = {\n      companyName: this.state.newCompanyName,\n      newCompanyName: this.state.newCompanyName,\n      newProducer: this.state.newProducer,\n      newAgency: this.state.newAgency,\n      newContractClient: this.state.newContractClient,\n      Laptop: this.state.Laptop,\n      projectorScreen: this.state.projectorScreen,\n      Table: this.state.Table,\n      trainingKit: this.state.trainingKit,\n      forkliftTrainingKit: this.state.forkliftTrainingKit,\n      CPRmannequins: this.state.CPRmannequins,\n      firstAidAEDKit: this.state.firstAidAEDKit,\n      Handouts: this.state.Handouts\n    };\n    API.newCompany(item)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => console.log(err));\n\n    API.postCompanyEquipments(item)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    this.getCompanies();\n    this.toggleModal();\n    console.log(this.state.newCompanyName, this.state.companyName);\n  };\n\n  //Getting employees from server\n  getEmployees() {\n    API.getEmployees().then(function(res) {\n      for (let i = 0; i < res.data.length; ++i) {\n        employees.push(res.data[i].EMP_NAME);\n      }\n      console.log(\"employees table loaded!\");\n    });\n  }\n\n  //Generates pdf\n  handlePDF = () => {\n    var companyName = this.state.companyName;\n    var startDate = this.state.startDate;\n    var divHeight = document.getElementById(\"capture\").offsetHeight;\n    var divWidth = document.getElementById(\"capture\").offsetWidth;\n    return html2canvas(document.getElementById(\"capture\"), {\n      scale: 0.85,\n      dpi: 278\n    }).then(function(canvas) {\n      var wid = divWidth;\n      var hgt = divHeight;\n      var img = canvas.toDataURL(\n        \"image/png\",\n        (wid = canvas.width),\n        (hgt = canvas.height)\n      );\n      var hratio = hgt / wid;\n      var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n      var width = doc.internal.pageSize.width;\n      var height = width * hratio;\n      doc.addImage(img, \"JPEG\", 20, 25, width, height);\n      console.log(startDate.toDate());\n      doc.save(\n        companyName + \"-Quotation-\" + startDate.format(\"MM/DD/YYYY\") + \".pdf\"\n      );\n    });\n  };\n\n  handleCompanyName = () => {\n    if (\n      this.state.companyName.length < 2 &&\n      this.state.newCompanyName.length < 2\n    ) {\n      this.setState({\n        validCompanyName: false\n      });\n    } else {\n      this.setState({\n        validCompanyName: true\n      });\n    }\n\n    API.getCompanyDetails(this.state.companyName)\n      .then(res => {\n        getCompanyDetails = res.data;\n      })\n      .catch(err => console.log(err));\n\n      if(this.state.companyName.trim() !== \"\"){\n        API.getCompanyContacts(this.state.companyName)\n          .then(res => {\n            getCompanyContacts = res.data;\n            this.setState({\n              companyMobileContacts: res.data.filter(x => x.contactMobilePhone !== \"\"),\n              companyOfficeContacts: res.data.filter(x => x.contactOfficePhone !== \"\")\n            })\n          })\n          .catch(err => console.log(err));\n          API.getCompanyLocations(this.state.companyName)\n            .then(res => {\n              getCompanyLocations = res.data;\n              this.setState({\n                companyLocations: res.data\n              })\n            })\n            .catch(err => console.log(err));\n      }\n\n\n    this.getAvailableEquipments();\n\n    API.getCompanyEquipments(this.state.companyName)\n      .then(res => {\n        if(res.data.length > 0 && this.state.companyName.length > 0 ){\n          var result = res.data[0];\n          this.setState({\n            Laptop: this.state.Laptop || !result.Laptop,\n            projectorScreen: this.state.projectorScreen || !result.projectorScreen,\n            Table: this.state.Table || !result.Table,\n            trainingKit: this.state.trainingKit || !result.trainingKit,\n            forkliftTrainingKit: this.state.forkliftTrainingKit || !result.forkliftTrainingKit,\n            CPRmannequins: this.state.CPRmannequins || !result.CPRmannequins,\n            firstAidAEDKit: this.state.firstAidAEDKit || !result.firstAidAEDKit,\n            RespiratorFitTestKit: this.state.RespiratorFitTestKit || !result.RespiratorFitTestKit,\n            Handouts: this.state.Handouts || !result.Handouts\n          });\n          document.getElementById('Laptop').checked = this.state.Laptop;\n          document.getElementById('projectorScreen').checked = this.state.projectorScreen;\n          document.getElementById('Table').checked = this.state.Table;\n          document.getElementById('trainingKit').checked = this.state.trainingKit;\n          document.getElementById('forkliftTrainingKit').checked = this.state.forkliftTrainingKit;\n          document.getElementById('CPRmannequins').checked = this.state.CPRmannequins;\n          document.getElementById('firstAidAEDKit').checked = this.state.firstAidAEDKit;\n          document.getElementById('RespiratorFitTestKit').checked = this.state.RespiratorFitTestKit;\n          document.getElementById('Handouts').checked = this.state.Handouts;\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  validatePhone = () => {\n    var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\n    this.setState({\n      validPhone: re.test(this.state.contactPhone) || isNaN(this.state.contactPhone)\n    });\n  };\n\n  validateCellPhone = () => {\n    var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\n    this.setState({\n      validCellPhone: re.test(this.state.contactCellPhone) || isNaN(this.state.contactPhone)\n    });\n  };\n\n  validateEmail = () => {\n    var re = RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    this.setState({\n      validEmail: re.test(String(this.state.contactEmail).toLowerCase())\n    });\n  };\n\n  validateZIP = () => {\n    let zipRegex = RegExp(\"^[0-9]{5}(?:-[0-9]{4})?$\");\n    this.setState({\n      validZIP: zipRegex.test(this.state.zip)\n    });\n  };\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n    this.setState({\n      validThru: moment(date)\n        .add(90, \"days\")\n        .format(\"YYYY-MM-DD\")\n    });\n    document.getElementById(\"validThru\").value = moment(\n      this.state.validThru\n    ).format(\"YYYY-MM-DD\");\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    var item = {\n      companyName: this.state.companyName,\n      startDate: this.state.startDate,\n      validThru: this.state.validThru,\n      paymentBy: this.state.paymentForTraining,\n      producer: this.state.producer,\n      contactPerson: this.state.contactName,\n      contactPhone: this.state.contactPhone,\n      contactCellPhone: this.state.contactCellPhone,\n      contactEmail: this.state.contactEmail,\n      contactState: this.state.contactState,\n      contactStreetAddress: this.state.contactStreetAddress,\n      contactCity: this.state.contactCity,\n      contactZip: this.state.contactZip,\n      contactCountry: this.state.country,\n      //Equipment needed at site\n      Laptop: this.state.Laptop,\n      projectorScreen: this.state.projectorScreen,\n      Table: this.state.Table,\n      trainingKit: this.state.trainingKit,\n      forkliftTrainingKit: this.state.forkliftTrainingKit,\n      CPRmannequins: this.state.CPRmannequins,\n      firstAidAEDKit: this.state.firstAidAEDKit,\n      RespiratorFitTestKit: this.state.RespiratorFitTestKit,\n      Handouts: this.state.Handouts,\n      quotationIssuedBy: this.state.quotationIssuedBy,\n      instructions: this.state.instructions\n    };\n    \n    API.postService(item)\n    .then(res => {\n      console.log(res);\n      this.setState({\n        quotationNumber: res.data.quoteNumber,\n        quotationIssuedBy: res.data.quotationIssuedBy\n      });\n      API.getServiceRequests()\n      .then(res1 => {\n          console.log(res.data.quotationIssuedBy);\n          console.log(res1);\n          API.addTask({\n            quotationNumber: this.state.quotationNumber,\n            service: \"Approve quote \" + this.state.quotationNumber,\n            client: this.state.companyName,\n            instructions: this.state.instructions,\n            startDate: this.state.startDate, //sort\n            validThru: this.state.validThru,\n            quotationIssuedBy: res.data.quotationIssuedBy\n          })\n          .then(res2 => {\n            console.log(res2.data);\n\n                if(res1.data.length > 0){\n                  for(let i = 0; i < res1.data.length; ++i ){\n                    API.addTask({\n                      quotationNumber: this.state.quotationNumber,\n                      service: res1.data[i].service,\n                      client: res1.data[i].companyName,\n                      instructions: this.state.instructions,\n                      startDate: this.state.startDate, //sort\n                      validThru: this.state.validThru,\n                      qty: res1.data[i].qty,\n                      serviceDescription: res1.data[i].serviceDescription,\n                      quotationIssuedBy: res.data.quotationIssuedBy\n                    })\n                    .then(() => {console.log(\"Added a task\")})\n                    .catch(err => console.log(err));\n                  }\n                }\n                console.log(\"Deleted rows\");\n                console.log(\"Added a task to accept quote as well!\");\n                document.getElementById(\"serviceRequestForm\").reset();\n                this.setState({\n              startDate: moment(),\n              validThru: moment()\n                .add(90, \"days\")\n                .format(\"YYYY-MM-DD\"),\n                newContractClient: false,\n              companyName: \"\",\n              newCompanyName: \"\",\n              companyNames: services.companyName,\n              country: \"United States\",\n              topic: \"\",\n              service: \"\",\n              producer: \"\",\n              sameLocAsTraining: false,\n              validCompanyName: false,\n              validPhone: false,\n              validEmail: false,\n              validCellPhone: false,\n              validZIP: false,\n              contactName: \"\",\n              contactPhone: \"\",\n              contactCellPhone: \"\",\n              contactEmail: \"\",\n              state: \"\",\n              streetAddress: \"\",\n              city: \"\",\n              zip: \"\",\n              contactStreetAddress: \"\",\n              contactZip: \"\",\n              contactCountry: \"United States\",\n              contactState: \"\",\n              contactCity: \"\",\n              //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\n              equipmentsSelectedSite: [],\n              equipmentsSelectedTraining: [],\n              //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\n              equipments: [\n                \"Laptop\",\n                \"Projector Screen\",\n                \"Table\",\n                \"Training Kit (Green Duffle Bag)\",\n                \"Forklift Training Kit (Grey Duffle Bag)\",\n                \"CPR mannequins\",\n                \"First Aid & AED Kit (Red Backpack)\",\n                \"Handouts\"\n              ],\n              Laptop: false,\n              projectorScreen: false,\n              Table: false,\n              trainingKit: false,\n              forkliftTrainingKit: false,\n              CPRmannequins: false,\n              firstAidAEDKit: false,\n              RespiratorFitTestKit: false,\n              Handouts: false,\n              active: true,\n              addOn: \"\",\n              error: {},\n              modal: false,\n              quotationIssuedBy: \"\",\n              instructions: \"\",\n              serviceModal: false,\n              billableService: true,\n              alternateName: \"\",\n              costForService: 0.0,\n              requestedServices: [],\n              requestedServiceRows: [],\n              viewServiceRows: [],\n              totalCost: 0,\n              viewServiceModal: false,\n              showTopics: false,\n              popoverOpen: false,\n              description: \"\",\n              companyMobileContacts: [],\n              companyOfficeContacts: [],\n              companyLocations: [],\n              listOfServices: [],\n              additionalEquipments: [],\n              quotationNumber: \"\"\n            });\n            API.deleteServiceRequests()\n          .then(() => {\n            console.log(\"Refresh services table\");\n          })\n          .catch(err => console.log(err));\n          })\n              .catch(err => console.log(err));\n            \n            })\n            .catch(err => console.log(err));\n\n            \n        })\n        .catch(err => console.log(err));\n        \n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n    this.validateEmail();\n    this.validateZIP();\n    this.validatePhone();\n    this.validateCellPhone();\n    this.handleCompanyName();\n    this.setState({\n      active: true\n      //((this.state.validCellPhone !== \"undefined\" && this.state.validCellPhone === true) || (this.state.validEmail !== \"undefined\" && this.state.validEmail === true) || (this.state.validPhone !== \"undefined\" && this.state.validPhone === true)) || this.state.validZIP && this.state.validCompanyName\n    });\n  };\n\n  toggleModal() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  toggleServiceModal() {\n    this.setState({\n      serviceModal: !this.state.serviceModal\n    });\n  }\n\n  toggleViewServicesModal = () => {\n    this.setState({\n      viewServiceModal: !this.state.viewServiceModal,\n      viewServiceRows: this.removeServices() != undefined ? this.removeServices() : []\n    });\n    \n  };\n\n  togglePopOver() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n  }\n\n  viewServiceModal = () => {\n    this.setState({\n      viewServiceRows: this.removeServices() != undefined ? this.removeServices() : []\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <img\n          src=\"./open3.jpg\"\n          alt=\"Construction workers\"\n          className=\"openingImage\"\n        />\n\n        <Container className=\"mt-3\">\n          <Form id=\"serviceRequestForm\">\n          <FormGroup>\n              <Label for=\"quotationIssuedBy\">Quotation Issued By</Label>\n              <Input\n                type=\"select\"\n                name=\"quotationIssuedBy\"\n                id=\"quotationIssuedBy\"\n                onChange={this.handleInputChange}\n              >\n              <option value=\"\">Choose Quotation Issued By</option>\n                {employees.map((x, index) => (\n                  <option key={\"emp\" + index} value={x}>\n                    {x}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n\n            <FormGroup>\n              <Label for=\"companyName\">Company Name</Label>\n              <Input\n                type=\"select\"\n                name=\"companyName\"\n                id=\"companyNameSelect\"\n                onChange={this.handleInputChange}\n                onClick={this.handleCompanyName}\n              >\n                <option>Select company name</option>\n                {services.companyNames.map(option => (\n                    <option>{option}</option>\n                  ))}\n              </Input>\n              <Label for=\"newCompanyName\">New Company?</Label>\n              <div>\n                <Button color=\"secondary\" onClick={this.toggleModal}>\n                  Add new company\n                </Button>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggleModal}\n                  className={this.props.className}\n                >\n                  <ModalHeader toggle={this.toggleModal}>\n                    Enter new company details\n                  </ModalHeader>\n                  <ModalBody>\n                    <Form>\n                      <FormGroup>\n                        <Label for=\"newCompanyName\">Company Name</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newCompanyName\"\n                          id=\"newCompanyName\"\n                          placeholder=\"Enter company name\"\n                          onChange={this.handleInputChange}\n                        />\n\n                        <Label for=\"newProducer\">Producer</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newProducer\"\n                          id=\"newProducer\"\n                          placeholder=\"Enter producer's name\"\n                          onChange={this.handleInputChange}\n                        />\n\n                        <Label for=\"newAgency\">Agency</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newAgency\"\n                          id=\"newAgency\"\n                          placeholder=\"Enter agency's name\"\n                          onChange={this.handleInputChange}\n                        />\n\n                        <Label for=\"newContractClient\">Contract Clients</Label>\n                        <br />\n                        <input\n                          type=\"checkbox\"\n                          id=\"newContractClient\"\n                          name=\"newContractClient\"\n                          value={this.state.newContractClient}\n                          defaultChecked={this.state.newContractClient}\n                          onClick={() =>\n                            this.setState({\n                              newContractClient: !this.state.newContractClient\n                            })\n                          }\n                        />\n                        <br />\n                      </FormGroup>\n                      <hr />\n\n                      <Form id=\"newContactPhone\">\n                        <FormGroup>\n                          <Label for=\"newContactName\">Contact Name</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"newContactName\"\n                            id=\"newContactName\"\n                            placeholder=\"Enter contact's name\"\n                            onChange={this.handleInputChange}\n                          />\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"newContactEmail\">Contact Email ID</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"newContactEmail\"\n                            id=\"newContactEmail\"\n                            placeholder=\"Enter contact's email ID\"\n                            onChange={this.handleInputChange}\n                          />\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"newContactOfficeNumber\">\n                            Contact Office Number\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"newContactOfficePhone\"\n                            id=\"newContactOfficePhone\"\n                            placeholder=\"Enter contact's office phone number\"\n                            onChange={this.handleInputChange}\n                          />\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"newContactMobilePhone\">\n                            Contact Mobile Number\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"newContactMobilePhone\"\n                            id=\"newContactMobilePhone\"\n                            placeholder=\"Enter contact's mobile number\"\n                            onChange={this.handleInputChange}\n                          />\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"newContactMobileAlternate\">\n                            Contact Alternate Mobile Number\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"newContactMobilePhoneAlternate\"\n                            id=\"newContactMobilePhoneAlternate\"\n                            placeholder=\"Enter contact's alternate mobile number\"\n                            onChange={this.handleInputChange}\n                          />\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"mainContact\">\n                            Is this the main contact?\n                          </Label>\n                          <br />\n                          <input\n                            type=\"checkbox\"\n                            id=\"check\"\n                            name=\"mainContact\"\n                            value={this.state.mainContact}\n                            defaultChecked={this.state.mainContact}\n                            onClick={() =>\n                              this.setState({\n                                mainContact: !this.state.mainContact\n                              })\n                            }\n                          />\n                        </FormGroup>\n                        <br />\n                        <b style={styles.note}>\n                          Click on the plus icon to add more contacts\n                        </b>{\" \"}\n                        <br />\n                        <div style={styles.FaPlus}>\n                          <FaPlus onClick={this.addContact} />\n                        </div>\n                        <span>\n                          <div id=\"notifyContactAdded\" style={styles.notify}>\n                            New contact has been added!\n                          </div>\n                          <div\n                            id=\"removeContactNotification\"\n                            style={styles.removeContactNotification}\n                            onClick={() => {\n                              document.getElementById(\n                                \"removeContactNotification\"\n                              ).style.display = \"none\";\n                              document.getElementById(\n                                \"notifyContactAdded\"\n                              ).style.display = \"none\";\n                            }}\n                          >\n                            x\n                          </div>\n                        </span>\n                      </Form>\n\n                      <hr />\n\n                      <Form id=\"newContactLocation\">\n                        <Label>Company Locations</Label> <br />\n                        <Label for=\"mainLocation\">\n                          Is this the main office location?\n                        </Label>\n                        <br />\n                        <input\n                          type=\"checkbox\"\n                          id=\"check\"\n                          name=\"mainLocation\"\n                          value={this.state.mainLocation}\n                          defaultChecked={this.state.mainLocation}\n                          onClick={() =>\n                            this.setState({\n                              mainLocation: !this.state.mainLocation\n                            })\n                          }\n                        />\n                        <br />\n                        <Label for=\"newContactStreetAddress\">\n                          Street Address\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newContactStreetAddress\"\n                          id=\"newContactStreetAddress\"\n                          placeholder=\"Enter street address\"\n                          onChange={this.handleInputChange}\n                        />\n                        <Label for=\"newContactCity\">City</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newContactCity\"\n                          id=\"newContactCity\"\n                          placeholder=\"Enter name of city\"\n                          onChange={this.handleInputChange}\n                        />\n                        <Label for=\"newContactState\">State</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newContactState\"\n                          id=\"newContactState\"\n                          placeholder=\"Enter name of state\"\n                          onChange={this.handleInputChange}\n                        />\n                        <Label for=\"newContactZIP\">ZIP code</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newContactZIP\"\n                          id=\"newContactZIP\"\n                          placeholder=\"Enter ZIP code\"\n                          onChange={this.handleInputChange}\n                        />\n                        <Label for=\"newContactCountry\">Country</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"newContactCountry\"\n                          id=\"newContactCountry\"\n                          placeholder=\"Enter name of country\"\n                          onChange={this.handleInputChange}\n                        />\n                        <b style={styles.note}>\n                          Click on the plus icon to add more locations\n                        </b>\n                        <br />\n                        <div style={styles.FaPlus}>\n                          <FaPlus onClick={this.addLocation} />{\" \"}\n                        </div>\n                        <span>\n                          <div id=\"notifyLocationAdded\" style={styles.notify}>\n                            New location has been added!\n                          </div>\n                          <div\n                            id=\"removeLocationNotification\"\n                            style={styles.removeContactNotification}\n                            onClick={() => {\n                              document.getElementById(\n                                \"removeLocationNotification\"\n                              ).style.display = \"none\";\n                              document.getElementById(\n                                \"notifyLocationAdded\"\n                              ).style.display = \"none\";\n                            }}\n                          >\n                            x\n                          </div>\n                        </span>\n                      </Form>\n\n                      <hr />\n\n                      <Form id=\"equipmentsAlwaysAvailable\">\n                        <Label for=\"equipmentsAlwaysAvailable\">\n                          Equipments already available on site\n                        </Label>\n                        {equipmentsAlwaysOnSite.map((x, index) => (\n                          <div>\n                            <input\n                              type=\"checkbox\"\n                              id={equipmentIDs[index]}\n                              name={x}\n                              onClick={this.handleInputChange}\n                            />{\" \"}\n                            {x}\n                          </div>\n                        ))}\n                      </Form>\n                    </Form>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.saveCompany}>\n                      Save company\n                    </Button>\n                    <Button color=\"secondary\" onClick={this.toggleModal}>\n                      Cancel\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n              </div>\n\n              {this.state.validCompanyName ? (\n                <FaCheckCircle style={styles.FaCheck} />\n              ) : (\n                <FaTimesCircle style={styles.FaTimes} />\n              )}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"dateOfRequest\">Date of Request</Label><br />\n              <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n                name=\"startDate\"\n                placeholder=\"Enter date of request\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"validThru\">Request valid until (YYYY-MM-DD)</Label>\n              <Input\n                type=\"text\"\n                name=\"validThru\"\n                id=\"validThru\"\n                placeholder=\"Quote valid till YYYY-MM-DD\"\n                value={this.state.validThru}\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"paymentForTraining\">\n                Who is paying for the Service?\n              </Label>\n              <Input\n                type=\"select\"\n                name=\"paymentForTraining\"\n                id=\"paymentForTraining\"\n                onChange={this.handleInputChange}\n              >\n                <option name=\"paymentForTraining\" value={\"\"}>\n                  Choose an option\n                </option>\n                <option name=\"paymentForTraining\" value={\"Producer\"}>\n                  Producer\n                </option>\n                <option name=\"paymentForTraining\" value={\"Contract\"}>\n                  Contract\n                </option>\n                <option name=\"paymentForTraining\" value={\"Direct Sale\"}>\n                  Direct Sale\n                </option>\n                <option name=\"paymentForTraining\" value={\"ARCA\"}>\n                  ARCA\n                </option>\n              </Input>\n              {this.state.paymentForTraining ? (\n                <FaCheckCircle style={styles.FaCheck} />\n              ) : (\n                <FaTimesCircle style={styles.FaTimes} />\n              )}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"producer\">Producer</Label>\n              <Input\n                type=\"select\"\n                name=\"producer\"\n                id=\"producer\"\n                onChange={this.handleInputChange}\n              >\n                <option>Choose producer</option>\n                {getCompanyDetails.map(x => (\n                  <option name=\"producer\" value={x.producer}>\n                    {x.producer}\n                  </option>\n                ))}\n              </Input>\n              <Label for=\"producer\">Producer not listed? Enter here</Label>\n              <Input\n                type=\"text\"\n                name=\"producer\"\n                id=\"producer\"\n                placeholder=\"Enter other producer's name\"\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n            <Form>\n              <Label for=\"topic\">Add Services</Label>\n              <div>\n                <Button color=\"primary\" onClick={this.toggleServiceModal}>\n                  Add Services\n                </Button>\n                <Modal\n                  isOpen={this.state.serviceModal}\n                  toggle={this.toggleServiceModal}\n                  className={this.props.className}\n                >\n                  <ModalHeader toggle={this.toggleServiceModal}>\n                    Add Services\n                  </ModalHeader>\n                  <ModalBody>\n                    <Form id=\"addService\">\n                    <FormGroup>\n                      <Label for=\"service\">Services</Label>\n                      <Input\n                          type=\"select\"\n                          name=\"service\"\n                          id=\"service\"\n                          onChange={this.handleInputChange}\n                          onClick = {() => {\n                            if(this.state.service === \"Training\"){\n                              this.setState({\n                                showTopics: true\n                              });\n                            }\n                            else{\n                              this.setState({\n                                showTopics: false\n                              });\n                            }\n                            this.getPriceAndQuantity();\n                          }}\n                        >\n                          <option name=\"service\" value={\"\"}>\n                            Choose a service\n                          </option>\n                          <option name = \"Training\" value=\"Training\" onClick = {() => {\n                            this.setState({showTopics: true});\n                          }}>Training</option>\n                          {this.state.listOfServices.map(x => (\n                            <option value={x.service}>\n                              {x.service}\n                            </option>\n                          ))}\n                        </Input>\n                        {(this.state.service === \"\") ? <div>\n                        <Label for=\"newService\">New Service? Enter it here</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"service\"\n                          id=\"service\"\n                          onChange={this.handleInputChange}\n                          placeholder = \"Enter New Service's Name\"\n                        />\n                        <Label for=\"newServiceDescription\">Enter new service's description</Label>\n                        <Input\n                          type=\"textarea\"\n                          name=\"description\"\n                          id=\"description\"\n                          onChange={this.handleInputChange}\n                          placeholder = \"Enter New Service's Description\"\n                        />\n                        <Label for=\"newServiceCostPerUnit\">Enter new service's cost per unit</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"costForService\"\n                          id=\"costForService\"\n                          onChange={this.handleInputChange}\n                          placeholder = \"Enter New Service's cost per unit\"\n                        />\n                        </div> : <div>\n                        <br/>\n                      <Button id=\"Popover1\" onClick={this.togglePopOver}>\n                        Read more about the Service\n                      </Button>\n                      <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.togglePopOver}>\n                        <PopoverHeader id = \"serviceName\">{this.state.service}</PopoverHeader>\n                        <PopoverBody id = \"description\">{this.state.description}</PopoverBody>\n                      </Popover>\n                      </div>}\n                        \n                    </FormGroup>\n                    {this.state.showTopics === true? <div>\n                      <FormGroup>\n                        <Label for=\"topic\">Topic</Label>\n                        <Input\n                          type=\"select\"\n                          name=\"topic\"\n                          id=\"topic\"\n                          onChange={this.handleInputChange}\n                          onClick={this.getPriceAndQuantity}\n                        >\n                          <option name=\"topic\" value={\"\"}>\n                            Choose a topic\n                          </option>\n                          {this.state.topicsVsEquipments.map(x => (\n                            <option name=\"topic\" value={x.topic}>\n                              {x.topic}\n                            </option>\n                          ))}\n                        </Input>\n                        {this.state.topic.length > 0 &&\n                        this.state.topic !== \"Other\" ? (\n                          <FaCheckCircle style={styles.FaCheck} />\n                        ) : (\n                          <FaTimesCircle style={styles.FaTimes} />\n                        )}\n                      </FormGroup>\n\n                      <FormGroup>\n                        <Label for=\"newtopic\">\n                          New Topic? Enter the topic below\n                        </Label>{\" \"}\n                        <br />\n                        <Input\n                          type=\"text\"\n                          name=\"topic\"\n                          id=\"newTopic\"\n                          placeholder=\"Enter new topic's name\"\n                          onChange={this.handleInputChange}\n                        />\n                      </FormGroup>\n                      </div> : \"\"}\n                      <br/>\n                      <FormGroup>\n                        <Label for=\"billable\">Billable Service</Label> <br />\n                        <input\n                          type=\"checkbox\"\n                          id=\"billable\"\n                          name=\"billableService\"\n                          value={this.state.billableService}\n                          defaultChecked\n                          onClick={() =>\n                            this.setState({\n                              billableService: !this.state.billableService\n                            })\n                          }\n                        />\n                      </FormGroup>\n\n                      <FormGroup>\n                        <Label for=\"costForService\">Cost for Service</Label>{\" \"}\n                        <br />\n                        <Input\n                          type=\"text\"\n                          name=\"costForService\"\n                          id=\"costForService\"\n                          value = {this.state.costForService}\n                          placeholder=\"Enter the cost for the service\"\n                          onChange={this.handleInputChange}\n                        />\n                      </FormGroup>\n\n                      <FormGroup>\n                        <Label for=\"alternateNameForService\">\n                          Alternate Name For Service\n                        </Label>{\" \"}\n                        <br />\n                        <Input\n                          type=\"text\"\n                          name=\"alternateName\"\n                          id=\"alternateNameForService\"\n                          value = {this.state.alternateName}\n                          placeholder=\"Enter alternate name for service\"\n                          onChange={this.handleInputChange}\n                        />\n                      </FormGroup>\n\n                      <FormGroup>\n                        <Label for=\"durationInMin\">\n                          Duration of Service in Minutes\n                        </Label>{\" \"}\n                        <br />\n                        <Input\n                          type=\"text\"\n                          name=\"durationInMin\"\n                          id=\"durationInMin\"\n                          placeholder=\"Enter duration of service in minutes\"\n                          onChange={this.handleInputChange}\n                        />\n                      </FormGroup>\n\n                      <FormGroup>\n                        <Label for=\"quantity\">Number of Units of Service</Label>{\" \"}\n                        <br />\n                        <Input\n                          type=\"text\"\n                          name=\"numServiceUnits\"\n                          id=\"numServiceUnits\"\n                          placeholder=\"Enter number of service units\"\n                          onChange={this.handleInputChange}\n                        />\n                      </FormGroup>\n                      <Button color=\"secondary\" onClick={this.addService}>\n                        Add this service\n                      </Button>\n                    </Form>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.saveServices}>\n                      Save Services\n                    </Button>{\" \"}\n                    <Button color=\"secondary\" onClick={this.toggleServiceModal}>\n                      Close\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <br />\n            </Form>\n            {this.state.topic === \"Training\" ? (\n              <FormGroup className=\"training\" id=\"training\">\n                <Label for=\"address\">Address of Training</Label>\n                <br />\n                <Label for=\"streetAddress\">Street Address</Label>\n                <Input\n                  type=\"text\"\n                  name=\"streetAddress\"\n                  id=\"streetAddress\"\n                  placeholder=\"Street Address\"\n                  onChange={this.handleInputChange}\n                />\n                <Label for=\"zip\">ZIP</Label>\n                <Input\n                  type=\"text\"\n                  name=\"zip\"\n                  id=\"zip\"\n                  placeholder=\"ZIP\"\n                  onChange={this.handleInputChange}\n                />\n                {this.state.validZIP > 0 ? (\n                  <FaCheckCircle style={styles.FaCheck} />\n                ) : (\n                  <FaTimesCircle style={styles.FaTimes} />\n                )}\n                <br />\n                <Label for=\"country\">Country</Label>\n                <Input\n                  type=\"select\"\n                  name=\"country\"\n                  id=\"country\"\n                  onChange={this.handleInputChange}\n                >\n                  <option>United States</option>\n                  {Object.keys(cities).map(country => (\n                    <option>{country}</option>\n                  ))}\n                </Input>\n                <Label for=\"state\">State</Label>\n                <Input\n                  type=\"select\"\n                  name=\"state\"\n                  id=\"state\"\n                  onChange={this.handleInputChange}\n                >\n                  <option>Arizona</option>\n                  {us_states.map(state => (\n                    <option>{state}</option>\n                  ))}\n                </Input>\n                <Label for=\"city\">City</Label>\n                <Input\n                  type=\"text\"\n                  name=\"city\"\n                  id=\"city\"\n                  placeholder=\"Enter City\"\n                  onChange={this.handleInputChange}\n                />\n\n                <Label for=\"langOfTraining\">Language of training</Label>\n                <Input\n                  type=\"select\"\n                  name=\"langTraining\"\n                  id=\"langTraining\"\n                  onChange={this.handleInputChange}\n                >\n                  <option name=\"langTraining\" value=\"\">\n                    Choose a language of training\n                  </option>\n                  <option name=\"langTraining\" value=\"English\">\n                    English\n                  </option>\n                  <option name=\"langTraining\" value=\"Spanish\">\n                    Spanish\n                  </option>\n                  <option name=\"langTraining\" value=\"Bilingual\">\n                    Bilingual\n                  </option>\n                </Input>\n\n                <Label for=\"numStudents\">Number of students</Label>\n                <Input\n                  type=\"text\"\n                  name=\"numStudents\"\n                  id=\"numStudents\"\n                  placeholder=\"Enter number of students\"\n                  onChange={this.handleInputChange}\n                />\n              </FormGroup>\n            ) : (\n              \"\"\n            )}\n            <FormGroup>\n              <Label for=\"contactName\">Contact Person's Name</Label>\n              <Input\n                type=\"select\"\n                name=\"contactName\"\n                id=\"contactName\"\n                placeholder=\"Enter contact name\"\n                onChange={this.handleInputChange}\n              >\n                <option key={\"contactPerson\"} value={\"\"}>\n                  Choose contact person's name\n                </option>\n                {getCompanyContacts.map((x, index) => (\n                  <option key={\"contact person\" + index} value={x.contactName}>\n                    {x.contactName}\n                  </option>\n                ))}\n              </Input>\n              <Label for=\"contactName\">\n                Name of contact not listed? Enter it here\n              </Label>\n              <Input\n                type=\"text\"\n                name=\"contactName\"\n                id=\"contactNameNew\"\n                placeholder=\"Enter other contact's name\"\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"contactEmail\">Contact Person's Email</Label>\n              <Input\n                type=\"select\"\n                name=\"contactEmail\"\n                id=\"contactEmail\"\n                placeholder=\"Valid email format example@test.com\"\n                onChange={this.handleInputChange}\n              >\n                <option key={\"contactEmail\"} value={\"\"}>\n                  Choose contact person's email\n                </option>\n                {getCompanyContacts.map((x, index) => (\n                  <option\n                    key={\"contact_person_email\" + index}\n                    value={x.contactEmail}\n                  >\n                    {x.contactEmail}\n                  </option>\n                ))}\n              </Input>\n              <Label for=\"contactEmail\">Email not listed? Enter it here</Label>\n              <Input\n                type=\"text\"\n                name=\"contactEmail\"\n                id=\"contactEmailNew\"\n                placeholder=\"Enter other contact's email ID\"\n                onChange={this.handleInputChange}\n              />\n              {this.state.validEmail ? (\n                <FaCheckCircle style={styles.FaCheck} />\n              ) : (\n                <FaTimesCircle style={styles.FaTimes} />\n              )}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"contactPhone\">Contact Person's Contact Number</Label>\n              <br />\n              <Input\n                type=\"select\"\n                name=\"contactPhone\"\n                id=\"contactPhone\"\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\n                onChange={this.handleInputChange}\n              >\n              <option value=\"\">Choose Office Number</option>\n              {this.state.companyOfficeContacts.map(x => <option value={x.contactOfficePhone}>{x.contactOfficePhone}</option>)}\n              </Input>\n              <Label for=\"contactPhone\">Contact Person's Office Number not listed? Enter it here</Label>\n              <br />\n              <Input\n                type=\"text\"\n                name=\"contactPhone\"\n                id=\"contactPhoneNew\"\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\n                onChange={this.handleInputChange}\n              />\n              {this.state.validPhone ? (\n                <FaCheckCircle style={styles.FaCheck} />\n              ) : (\n                <FaTimesCircle style={styles.FaTimes} />\n              )}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"contactCell\">\n                Contact Person's Cell phone number\n              </Label>\n              <Input\n                type=\"select\"\n                name=\"contactCellPhone\"\n                id=\"contactCellPhone\"\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\n                onChange={this.handleInputChange}\n              >\n              <option value=\"\">Choose Mobile Phone</option>\n              {this.state.companyMobileContacts.map(x => <option value={x.contactMobilePhone}>{x.contactMobilePhone}</option>)}\n              </Input>\n              <Label for=\"contactCell\">\n                Contact Person's Cell phone number not listed? Enter it here\n              </Label>\n              <Input\n                type=\"text\"\n                name=\"contactCellPhone\"\n                id=\"contactCellPhone\"\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\n                onChange={this.handleInputChange}\n              />\n              {this.state.validCellPhone ? (\n                <FaCheckCircle style={styles.FaCheck} />\n              ) : (\n                <FaTimesCircle style={styles.FaTimes} />\n              )}\n            </FormGroup>\n            <div>\n              {this.state.topic === \"Training\" ? (\n                <div>\n                  <Label for=\"sameLocAsTraining\">\n                    Same Location as Training?{\" \"}\n                  </Label>\n                  <br />\n                  <input\n                    type=\"checkbox\"\n                    id=\"check\"\n                    name=\"sameLocAsTraining\"\n                    value={this.state.sameLocAsTraining}\n                    defaultChecked = {false}\n                    onChange={this.handleInputChange}\n                    onClick={e => {\n                      this.setState({\n                        sameLocAsTraining: !this.state.sameLocAsTraining\n                      });\n                      if (this.state.sameLocAsTraining) {\n                        this.setState({\n                          contactStreetAddress: this.state.contactStreetAddress,\n                          contactZip: this.state.contactZip,\n                          contactCountry: this.state.contactCountry,\n                          contactState: this.state.contactState,\n                          contactCity: this.state.contactCity\n                        });\n                      }\n                    }}\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n              <br />\n              {this.state.sameLocAsTraining ? (\n                \"\"\n              ) : (\n                <FormGroup className=\"training\" id=\"training\">\n                  <Label for=\"address\">Contact Address</Label>\n                  <br />\n                  <Label for=\"streetAddress\">Street Address</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"contactStreetAddress\"\n                    id=\"contactStreetAddress\"\n                    placeholder=\"Street Address\"\n                    onChange={this.handleInputChange}>\n                    <option value=\"\">Choose Street Address</option>\n                    {this.state.companyLocations.filter(x => x.contactStreetAddress !== undefined || x.contactStreetAddress.trim() !== \"\").map(\n                      y => <option value={y.contactStreetAddress}>{y.contactStreetAddress}</option>\n                    )}\n                  </Input>\n                  <Label for=\"streetAddress\">Contact Street Address not listed? Enter it here</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"contactStreetAddress\"\n                    id=\"contactStreetAddress\"\n                    placeholder=\"Street Address\"\n                    onChange={this.handleInputChange}\n                  />\n                  <Label for=\"contactZip\">ZIP</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"contactZip\"\n                    id=\"contactZip\"\n                    placeholder=\"ZIP code\"\n                    onChange={this.handleInputChange}>\n                    <option value=\"\">Choose ZIP</option>\n                    {this.state.companyLocations.filter(x => x.contactZIP !== undefined || x.contactZIP.trim() !== \"\").map(\n                      y => <option value={y.contactZIP}>{y.contactZIP}</option>\n                    )}\n                  </Input>\n                  <Label for=\"contactZip\">ZIP not listed? Enter it here</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"contactZip\"\n                    id=\"contactZip\"\n                    placeholder=\"ZIP code\"\n                    onChange={this.handleInputChange}\n                  />\n                  <Label for=\"contactCountry\">Country</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"contactCountry\"\n                    id=\"contactCountry\"\n                    onChange={this.handleInputChange}\n                  >\n                    <option>United States</option>\n                    {Object.keys(cities).map(country => (\n                      <option>{country}</option>\n                    ))}\n                  </Input>\n                  <Label for=\"contactState\">State</Label>\n                  <Input\n                    type=\"select\"\n                    name=\"contactState\"\n                    id=\"contactState\"\n                    onChange={this.handleInputChange}\n                  >\n                    <option>Arizona</option>\n                    {us_states.map(state => (\n                      <option>{state}</option>\n                    ))}\n                  </Input>\n                  <Label for=\"contactCity\">City</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"contactCity\"\n                    id=\"contactCity\"\n                    placeholder=\"Enter City\"\n                    onChange={this.handleInputChange}\n                  />\n                </FormGroup>\n              )}\n\n              <FormGroup>\n                <Label for=\"equipments\">Equipment needed</Label> <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"Laptop\"\n                  name=\"Laptop\"\n                  defaultChecked={this.state.Laptop}\n                />\n                Laptop <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"projectorScreen\"\n                  name=\"projectorScreen\"\n                  defaultChecked={this.state.projectorScreen}\n                />\n                Projector Screen\n                <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"Table\"\n                  name=\"Table\"\n                  defaultChecked={this.state.Table}\n                />\n                Table\n                <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"forkliftTrainingKit\"\n                  name=\"forkliftTrainingKit\"\n                  defaultChecked={this.state.forkliftTrainingKit}\n                />\n                Forklift Training Kit (Grey Duffle Bag)\n                <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"trainingKit\"\n                  name=\"trainingKit\"\n                  defaultChecked={this.state.trainingKit}\n                />\n                Training Kit (Green Duffle Bag)\n                <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"CPRmannequins\"\n                  name=\"CPRmannequins\"\n                  defaultChecked={this.state.CPRmannequins}\n                />\n                CPR Mannequins\n                <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"firstAidAEDKit\"\n                  name=\"firstAidAEDKit\"\n                  defaultChecked={this.state.firstAidAEDKit}\n                />\n                First Aid AED Kit (Red bagpack)\n                <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"RespiratorFitTestKit\"\n                  name=\"RespiratorFitTestKit\"\n                  defaultChecked={this.state.RespiratorFitTestKit}\n                />\n                Respirator Fit Test Kit\n                <br />\n                <input\n                  type=\"checkbox\"\n                  id=\"Handouts\"\n                  name=\"Handouts\"\n                  defaultChecked={this.state.Handouts}\n                />\n                Handouts\n                <br />\n                <Label for=\"additionalEquipment\">\n                  Need additional equipment? Add it here\n                </Label>\n                <div style={styles.FaPlus} id=\"clearText\">\n                  <Input\n                    type=\"text\"\n                    name=\"addOn\"\n                    id=\"addOn\"\n                    value={this.state.addOn}\n                    onChange={this.handleInputChange}\n                  />\n                  <FaPlus\n                    onClick={() => {\n                      if (this.state.addOn.trim() !== \"\") {\n                        this.state.additionalEquipments.push(this.state.addOn.trim());\n                        document.getElementById('addEquipment').style.display = \"block\";\n                      }\n                      else{\n                        document.getElementById('addEquipment').style.display = \"none\";\n                      }\n                    }}\n                  />{\" \"}\n                </div>\n                <Alert color=\"success\" id=\"addEquipment\">New equipment added! <span style={{'float':'right'}} onClick = {() => {\n                  document.getElementById('addEquipment').style.display = \"none\";\n                }}><FaTimes /></span></Alert>\n              </FormGroup>\n            </div>\n            <FormGroup>\n              <Label for=\"instructions\">\n                Provide instructions to service provider\n              </Label>\n              <Input\n                type=\"textarea\"\n                name=\"instructions\"\n                id=\"instructions\"\n                placeholder=\"Instructions\"\n                onChange={this.handleInputChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Review Services</Label>\n              <table id=\"customers\">\n                  <tr>\n                    <th>ACTIVITY</th>\n                    <th>QTY</th>\n                    <th>RATE</th>\n                    <th>AMOUNT</th>\n                    <th>DELETE</th>\n                  </tr>\n                  <tbody>\n                    {this.state.requestedServices.map((x, index) => \n                      <tr key={\"serviceRequest\" + (index + 1)} id = {x.id}>\n                        <td>{x.alternateName}</td>\n                        <td>{x.qty}</td>\n                        <td>{x.cost.toFixed(2)}</td>\n                        <td>${(x.qty * x.cost).toFixed(2)}</td>\n                        <td><FaMinusCircle style = {{'color': '#cc3300'}} onClick = {() => {\n                          document.getElementById(x.id).style.display = 'none';\n                          document.getElementById(\"serviceRequest\" + x.id).style.display = 'none';\n                          API.removeService(x.id)\n                          .then(() => {\n                            console.log(x.id);\n                            console.log(\"Deleted\");\n                            API.getServiceRequests()\n                            .then(res => {\n                              // this.setState({\n                              //   requestedServices: res.data\n                              // });\n                              console.log(res.data);\n                            var sum = 0;\n                              for(let i = 0; i < res.data.length; ++i){\n                                if(res.data[i].billable){\n                                sum += res.data[i].qty * res.data[i].cost\n                                }\n                              }\n                            this.setState({\n                              totalCost: sum\n                            });\n                            })\n                            .catch(err => console.log(err));\n                          })\n                          .catch(err => console.log(err));\n                          }}/></td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n            </FormGroup>\n            \n            <Button\n              name=\"active\"\n              onClick={this.handleSubmit}\n              disabled={!this.state.active}\n            >\n              Submit\n            </Button>{\" \"}\n            &nbsp;\n            <Button onClick={this.handlePDF}>Print</Button>\n          </Form>\n          <br />\n\n          <div>\n            <div id=\"capture\" style={styles.pdf}>\n              <div>\n                <div style={styles.info}>\n                  Insure Compliance, LLC\n                  <br />\n                  4406 E Main St 102-58\n                  <br />\n                  Mesa, AZ 85205 US\n                  <br />\n                  (866) 647-2373\n                  <br />\n                  insurecompliance.net\n                  <br />\n                </div>\n                <img\n                  src=\"./Capture.PNG\"\n                  alt=\"Company logo\"\n                  style={styles.logo}\n                />\n              </div>\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <div style={styles.content}>\n                <h3 style={styles.quotation}>QUOTATION</h3>\n\n                <div>\n                  <div style={styles.billedTo}>\n                    <b>ADDRESS</b>\n                    <br />\n                    {this.state.companyName}\n                    <br />\n                    {this.state.contactStreetAddress}\n                    <br />\n                    {this.state.contactCity}{\" \"}\n                    {getInitial(this.state.contactState)}\n                    {this.state.contactZip}\n                    <br />\n                  </div>\n\n                  <div style={styles.quote}>\n                    <b>QUOTATION</b> # 1023 &nbsp; <br />\n                    <b>DATE</b>{\" \"}\n                    <Moment format=\"YYYY/MM/DD\" date={this.state.startDate} />{\" \"}\n                    &nbsp; <br />\n                  </div>\n                </div>\n\n                <br />\n                <br />\n                <br />\n                <br />\n                <hr style={styles.quotation} />\n\n                <div>\n                  <div style={styles.billedTo}>\n                    <b>QUOTATION ISSUED BY</b> &nbsp;\n                    {this.state.quotationIssuedBy}\n                    <br />\n                  </div>\n\n                  <div style={styles.quote}>\n                    <b>QUOTATION VALID THRU</b>&nbsp;\n                    <Moment\n                      format=\"YYYY/MM/DD\"\n                      date={this.state.validThru}\n                    />{\" \"}\n                    <br />\n                  </div>\n                </div>\n\n                <br />\n                <br />\n\n                <table id=\"customers\">\n                  <tr>\n                    <th>ACTIVITY</th>\n                    <th>QTY</th>\n                    <th>RATE</th>\n                    <th>AMOUNT</th>\n                  </tr>\n                  <tbody>\n                    {this.state.requestedServices.map((x, index) => \n                      <tr key={\"serviceRequest\" + (index + 1)} id = {\"serviceRequest\" + x.id}>\n                        <td>{x.alternateName}</td>\n                        <td>{x.qty}</td>\n                        <td>{x.cost.toFixed(2)}</td>\n                        <td>${(x.qty * x.cost).toFixed(2)}</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n\n                <br />\n                <hr style={styles.quotation} />\n                <div style={styles.quote}>\n                  <span style={{ fontSize: \"1.25em\" }}>\n                    <b>TOTAL</b> <b>{\"$\" + this.state.totalCost.toFixed(2)}</b>\n                  </span>\n                </div>\n                <br />\n                <br />\n                <div>\n                  <div style={styles.billedTo}>\n                    <b>Accepted by</b>\n                  </div>\n\n                  <div style={styles.quote}>\n                    <b>Accepted Date</b>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Jumbotron, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport moment from \"moment\";\nimport \"./TaskList.scss\";\nimport { isNullOrUndefined } from \"util\";\nimport { FaSortAmountUp, FaSortAmountDown} from \"react-icons/fa\";\n\n//array sort function\nvar fastSort = require(\"fast-sort\");\n\nclass TaskList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            employee_data: [],\n            tasks: [],\n            completedTasks: [],\n            quoteApproved: false,\n            employee: \"\",\n            tooltipOpen: false,\n            sortParameters: new Map([]),\n            asc: [],\n            desc: [],\n            incomplete: [],\n            incompleteNullTasks: []\n        };\n        this.toggle = this.toggle.bind(this);\n        this.getTasks = this.getTasks.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.getCompletedTasks = this.getCompletedTasks.bind(this);\n        this.printMap = this.printMap.bind(this);\n\n    }\n\n    componentWillMount = () => {\n        API.getEmployees()\n        .then(res => {\n            this.setState({\n                employee_data: res.data \n            });\n        })\n        .catch(err => console.log(err));\n\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    handleInputChange = e => {\n        const {name, value} = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    getTasks = () => {\n        if(this.state.employee.length > 0){\n                API.incompleteTasks(this.state.employee.split(\" \").join(\"%20\"))\n                .then(res2 => {\n                    console.log(res2.data);\n                    this.setState({\n                        incomplete : res2.data\n                    })\n                    API.incompleteNullTasks(this.state.employee.split(\" \").join(\"%20\"))\n                    .then(res2 => {\n                        console.log(res2.data);\n                        this.setState({\n                            incompleteNullTasks : res2.data\n                        })\n                        this.setState({\n                            tasks: this.state.incomplete.concat(this.state.incompleteNullTasks).filter(x => x.quoteApproved !== false)\n                        });\n                        this.getCompletedTasks();\n                    })\n                    .catch(err => console.log(err));\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    printMap = () => {\n        for (var [key, value] of this.state.sortParameters.entries()) {\n            console.log(key + ' = ' + value);\n\n        }\n\n    }\n\n    getCompletedTasks = () => {\n        API.completedTasks(this.state.employee)\n        .then(res => {\n            console.log(res.data);\n            this.setState({\n                completedTasks: res.data.filter(x => x.quoteApproved !== false)\n            });\n        })\n        .catch(err => console.log(err));\n    }\n\n    render(){\n        return (\n            <div> \n            <Container>\n            <Jumbotron>\n            <FormGroup>\n                <Label for=\"employee\">Employee Name</Label>\n                <Input type=\"select\" name=\"employee\" id=\"employee\" onChange={this.handleInputChange} onClick={this.getTasks}>\n                    <option>Choose your name</option>\n                    {this.state.employee_data.map(x => <option value={x.EMP_NAME}>{x.EMP_NAME}</option>)}\n                </Input>\n            </FormGroup>\n            </Jumbotron>\n           \n            </Container>\n           <Container>\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>Active Tasks</h5>\n            <br/>\n            <table id=\"active\">\n            <thead className=\"table-header\">\n                <tr>\n                    <th className=\"col\">QUOTATION NUMBER</th>\n                    <th className=\"col\">SERVICE<FaSortAmountUp id=\"sortServiceDesc\" onClick = {() => {\n                        if(document.getElementById('sortServiceDesc').style.color !== 'yellow'){\n                            document.getElementById('sortServiceDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',true),\n                                    desc: this.state.desc.filter(x => x !== \"service\").concat(\"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                            if(document.getElementById('sortServiceAsc').style.color === 'lime'){\n                                document.getElementById('sortServiceAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',true),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortServiceDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',true),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                });\n                        }\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }} />  <FaSortAmountDown id=\"sortServiceAsc\" onClick = {() => {\n                        if(document.getElementById('sortServiceAsc').style.color !== 'lime'){\n                            document.getElementById('sortServiceAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\").concat(\"service\")\n                                });                        \n                            if(document.getElementById('sortServiceDesc').style.color === 'yellow'){\n                                document.getElementById('sortServiceDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortServiceAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                        }\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }} /></th>\n\n\n                    <th className=\"col\">CLIENT<FaSortAmountUp id=\"sortClientDesc\" onClick = {() => {\n                        if(document.getElementById('sortClientDesc').style.color !== 'yellow'){\n                            document.getElementById('sortClientDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',true),\n                                    desc: this.state.desc.filter(x => x !== \"client\").concat(\"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                            if(document.getElementById('sortClientAsc').style.color === 'lime'){\n                                document.getElementById('sortClientAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',true),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortClientDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',true),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                });\n                        }\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/>  \n                    <FaSortAmountDown id = \"sortClientAsc\" onClick = {() => {\n                        if(document.getElementById('sortClientAsc').style.color !== 'lime'){\n                            document.getElementById('sortClientAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\").concat(\"client\")\n                                });                        \n                            if(document.getElementById('sortClientDesc').style.color === 'yellow'){\n                                document.getElementById('sortClientDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortClientAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                        }\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/></th>\n\n                    <th className=\"col\">DATE ASSIGNED<FaSortAmountUp id= \"sortDateAssignedDesc\" onClick = {() => {\n                        if(document.getElementById('sortDateAssignedDesc').style.color !== 'yellow'){\n                            document.getElementById('sortDateAssignedDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                            if(document.getElementById('sortDateAssignedAsc').style.color === 'lime'){\n                                document.getElementById('sortDateAssignedAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateAssignedDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                });\n                        }\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/>  \n                    \n                    <FaSortAmountDown id= \"sortDateAssignedAsc\" onClick = {() => {\n                        if(document.getElementById('sortDateAssignedAsc').style.color !== 'lime'){\n                            document.getElementById('sortDateAssignedAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\")\n                                });                        \n                            if(document.getElementById('sortDateAssignedDesc').style.color === 'yellow'){\n                                document.getElementById('sortDateAssignedDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateAssignedAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                        }\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/></th>\n\n                    <th className=\"col\">DUE DATE <FaSortAmountUp id = \"sortDueDateDesc\" onClick = {() => {\n                        if(document.getElementById('sortDueDateDesc').style.color !== 'yellow'){\n                            document.getElementById('sortDueDateDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',true),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\").concat(\"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                            if(document.getElementById('sortDueDateAsc').style.color === 'lime'){\n                                document.getElementById('sortDueDateAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',true),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDueDateDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',true),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                });\n                        }\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/>\n                    \n                    <FaSortAmountDown id = \"sortDueDateAsc\" onClick = {() => {\n                        if(document.getElementById('sortDueDateAsc').style.color !== 'lime'){\n                            document.getElementById('sortDueDateAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\").concat(\"DueDate\")\n                                });                        \n                            if(document.getElementById('sortDueDateDesc').style.color === 'yellow'){\n                                document.getElementById('sortDueDateDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDueDateAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                        }\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/></th>\n\n\n                    {/* <th className=\"col\">SERVICE UNITS</th> */}\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD) <FaSortAmountUp id = \"sortDateCompletedDesc\" onClick = {() => {\n                        if(document.getElementById('sortDateCompletedDesc').style.color !== 'yellow'){\n                            document.getElementById('sortDateCompletedDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                            if(document.getElementById('sortDateCompletedAsc').style.color === 'lime'){\n                                document.getElementById('sortDateCompletedAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateCompletedDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                });\n                        }\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/> \n                    <FaSortAmountDown id = \"sortDateCompletedAsc\" onClick = {() => {\n                        if(document.getElementById('sortDateCompletedAsc').style.color !== 'lime'){\n                            document.getElementById('sortDateCompletedAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\")\n                                });                        \n                            if(document.getElementById('sortDateCompletedDesc').style.color === 'yellow'){\n                                document.getElementById('sortDateCompletedDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateCompletedAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                        }\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/> </th>\n                    <th className=\"col\">STATUS/NOTES/COMMENTS</th>\n                    {/* <th className=\"col\">SERVICE DESCRIPTION</th> */}\n                    <th className=\"col\">QUOTE APPROVED</th>\n                    <th className=\"col\">COMPLETED</th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.state.tasks.map((x, index) => \n                <tr key={\"activeList\"+x.id} className=\"table-row\">\n                    <td key={\"activeList\"+x.id+\"_quotationNumber\"}>{\"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\" + (x.id + 1023)}</td>\n                    <td key={\"activeList\"+x.id+\"_service\"}>{x.service}</td>\n                    <td key={\"activeList\"+x.id+\"_client\"}>{x.client}</td>\n                    <td key={\"activeList\"+x.id+\"_dateAssigned\"}>{moment(x.dateAssigned).format(\"YYYY-MM-DD\")}</td>\n                    <td key={\"activeList\"+x.id+\"_dueTime\"}>{moment(x.dueDate).format(\"YYYY-MM-DD\")}</td>\n                    {/* <td key={\"activeList\"+x.id+\"_serviceUnits\"}>{x.qty}</td> */}\n                    <td key={\"activeList\"+x.id+\"_dateOfCompletion\"}>\n                    <Input\n                          type=\"text\"\n                          name={\"activeList\"+ x.id + \"_dateCompleted\"}\n                          id={\"activeList\"+ x.id + \"_dateCompleted\"}\n                          defaultValue={moment(x.dateCompleted).format(\"YYYY-MM-DD\")}\n                          placeholder=\"Enter date of completion\"\n                          onChange={this.handleInputChange}\n                        />\n                    </td>\n                    <td key={\"activeList\"+ x.id +\"_status_notes_comments\"}>\n                    <Input\n                          type=\"textarea\"\n                          name={\"activeList\"+ x.id + \"_status_notes_comments\"}\n                          id={\"activeList\"+ x.id + \"_status_notes_comments\"}\n                          defaultValue={x.status_notes_comments}\n                          placeholder=\"Enter status/notes/comments\"\n                          onChange={this.handleInputChange}\n                        />\n                    </td>\n                    {/* <td key={\"activeList\" + x.id + \"serviceDescription\"}>\n                     <span style = {{'fontSize': '10px'}}>{x.serviceDescription}</span>\n\n                    </td> */}\n                    <td key={\"activeList\"+x.id+\"_quoteApproved\"}>\n                    <FormGroup tag=\"fieldset\">\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_quoteApproved\"} id={\"activeList\"+x.id+\"_quoteApproved\"} value={true}  onChange = {this.handleInputChange} checked = {!isNullOrUndefined(x.quoteApproved) || x.quoteApproved } onClick = {() => {\n                                console.log(x.id);\n                                var item = {\n                                    // dateCompleted: document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value,\n                                    // status_notes_comments: document.getElementById(\"activeList\"+ x.id + \"_status_notes_comments\")\n                                    dateCompleted: moment(document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    quoteApproved: true,\n                                    status_notes_comments: document.getElementById(\"activeList\"+ x.id + \"_status_notes_comments\").value\n                                }\n                                API.modifyTask(x.id, item)\n                                .then(res => {\n                                    console.log(\"Quote approved\");\n                                    this.getTasks();\n                                    this.setState({\n                                    tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])});\n                                    })\n                                .catch(err => console.log(err))\n                            }}/>{' '}\n                            Yes\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_quoteApproved\"} id={\"activeList\"+x.id+\"_quoteApproved\"} value={false}  onChange = {this.handleInputChange} checked = {!isNullOrUndefined(x.quoteApproved) && !x.quoteApproved} onClick = {() => {\n                                console.log(x.id);\n                                var item = {\n                                    // dateCompleted: document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value,\n                                    quoteApproved: false,\n                                    // status_notes_comments: document.getElementById(\"activeList\"+ x.id + \"_status_notes_comments\")\n                                    dateCompleted:moment(document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    status_notes_comments: document.getElementById(\"activeList\"+ x.id + \"_status_notes_comments\").value\n                                }\n                                API.modifyTask(x.id, item)\n                                .then(() => {\n                                    console.log(\"Quote not approved\");\n                                    this.getTasks();\n                                    this.setState({\n                                    tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])});\n                                    })\n                                .catch(err => console.log(err))\n                            }}/>{' '}\n                            No\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                    </td>\n                    <td key={\"activeList\"+x.id+\"_completed\"}>\n                    <FormGroup tag=\"fieldset\">\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_completed\"} value={true} onChange = {this.handleInputChange} checked = {!isNullOrUndefined(x.completed) || x.completed} onClick = {() => {\n                                console.log(x.id);\n                                console.log(document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value, document.getElementById(\"activeList\"+ x.id + \"_status_notes_comments\").value);\n                                console.log(!isNullOrUndefined(x.quoteApproved))\n                                API.modifyTask(x.id, {\n                                    completed: true,\n                                    dateCompleted:moment(document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    quoteApproved: x.quoteApproved || document.getElementById(),\n                                    status_notes_comments: document.getElementById(\"activeList\"+ x.id + \"_status_notes_comments\").value\n                                })\n                                .then(() => {\n                                        console.log(\"Task completed\");\n\n                                    if(x.service.includes(\"Training\")){\n                                        API.addTask({\n                                            quotationIssuedBy: \"Jared\",\n                                            quotationNumber: \"EMPTY\",\n                                            service: `Schedule a trainer`,\n                                            client: `${x.client}`,\n                                            instructions: `Create a task for trainer/ service provider manually`,\n                                            startDate: x.dateAssigned,\n                                            validThru: moment(Date(x.dateAssigned)).add(3, \"days\").format(\"YYYY-MM-DD\")\n                                        })\n                                        .then(() => {\n                                            console.log(\"Jared schedules a trainer!\");\n                                        })\n                                        .catch(err => console.log(err));\n\n\n                                        API.addTask({\n                                            quotationIssuedBy: \"Jared\",\n                                            quotationNumber: \"EMPTY\",\n                                            service: `Get paperwork ready for ${\"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\"+ (x.id + 1023)}`,\n                                            client: `${x.client}`,\n                                            instructions: ``,\n                                            startDate: moment(x.dateAssigned).format(\"YYYY-MM-DD\"),\n                                            validThru: moment(x.dateAssigned).add(3, \"days\").format(\"YYYY-MM-DD\")\n                                        })\n                                        .then(() => {\n                                            console.log(\"Jared gets paperwork ready!\");\n                                        })\n                                        .catch(err => console.log(err));\n                                        \n                                        API.addTask({\n                                            quotationIssuedBy: \"Morgan\",\n                                            quotationNumber: \"EMPTY\",\n                                            service: `Training`,\n                                            client: `${x.client}`,\n                                            instructions: `Provide training for ${\"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\"+ (x.id + 1023)}`,\n                                            startDate: `${moment(x.dateAssigned).format(\"YYYY-MM-DD\")}`,\n                                            validThru: `${moment(x.dateAssigned).add(\"days\",30).format(\"YYYY-MM-DD\")}`\n                                        })\n                                        .then(() => {\n                                            console.log(\"Jared schedules a trainer!\");\n                                        })\n                                        .catch(err => console.log(err));\n\n                                        API.addTask({\n                                            quotationIssuedBy: \"Jared\",\n                                            quotationNumber: \"EMPTY\",\n                                            service: \"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\"+ (x.id + 1023) + \" Paperwork- part 1\",\n                                            client: x.client,\n                                            instructions: `Recieve, scan file, sign-in sheet and update training tracker`,\n                                            startDate: moment(x.dateAssigned).add(30, \"days\").format(\"YYYY-MM-DD\"),\n                                            validThru: moment(x.dateAssigned).add(36,\"days\").format(\"YYYY-MM-DD\")\n                                        })\n                                        .then(() => {\n                                            console.log(\"Jared paperwork -1 !\");\n                                        })\n                                        .catch(err => console.log(err));\n\n                                        API.addTask({\n                                            quotationIssuedBy: \"Jared\",\n                                            quotationNumber: \"EMPTY\",\n                                            service: \"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\"+ (x.id + 1023) + \" Paperwork- part 2\",\n                                            client: `${x.client}`,\n                                            instructions: `Verify names of class participants with client`,\n                                            startDate: moment(x.dateAssigned).add(3, \"days\").format(\"YYYY-MM-DD\"),\n                                            validThru: moment(x.dateAssigned).add(6, \"days\").format(\"YYYY-MM-DD\")\n                                        })\n                                        .then(() => {\n                                            console.log(\"Jared paperwork -2 !\");\n                                        })\n                                        .catch(err => console.log(err));\n\n                                        API.addTask({\n                                            quotationIssuedBy: \"Jared\",\n                                            quotationNumber: \"EMPTY\",\n                                            service: \"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\"+ (x.id + 1023) + \" Paperwork- part 3\",\n                                            client: `${x.client}`,\n                                            instructions: `Create and send cards`,\n                                            startDate: moment(x.dateAssigned).add(3,\"days\").format(\"YYYY-MM-DD\"),\n                                            validThru: moment(x.dateAssigned).add(14, \"days\").format(\"YYYY-MM-DD\")\n                                        })\n                                        .then(() => {\n                                            console.log(\"Jared paperwork -3 !\");\n                                        })\n                                        .catch(err => console.log(err));\n\n                                        API.addTask({\n                                            quotationIssuedBy: \"Jared\",\n                                            quotationNumber: \"EMPTY\",\n                                            service: \"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\"+ (x.id + 1023) + \" Paperwork- part 4\",\n                                            client: `${x.client}`,\n                                            instructions: `Verify cards were recieved on due date`,\n                                            startDate: moment(x.dateAssigned).add(14,\"days\").format(\"YYYY-MM-DD\"),\n                                            validThru: moment(x.dateAssigned).add(21, \"days\").format(\"YYYY-MM-DD\")\n                                        })\n                                        .then(() => {\n                                            console.log(\"Jared paperwork - 4 !\");\n                                        })\n                                        .catch(err => console.log(err));\n                                    }\n                                })\n                                .catch(err => console.log(err));\n                            this.getCompletedTasks();\n                            \n                            \n                            }}/>{' '}\n                            Yes\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_completed\"}  checked = {!isNullOrUndefined(x.completed) && !x.completed} value={false} onChange = {this.handleInputChange} onClick = {() => {\n                             console.log(x.id);\n                                var item = {\n                                    completed: false,\n                                    dateCompleted:moment(document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    quoteApproved: x.quoteApproved || document.getElementById(\"activeList\"+x.id+\"_quoteApproved\").value === true,\n                                    status_notes_comments: document.getElementById(\"activeList\"+ x.id + \"_status_notes_comments\").value\n                                }\n                                API.modifyTask(x.id, item)\n                                .then(() => console.log(\"Task incomplete\"))\n                                .catch(err => console.log(err))   \n                            }}/>{' '}\n                            No\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                    </td>\n                </tr>\n                )}\n            </tbody>\n            </table>\n            <br/><br/>\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>Completed Tasks</h5>\n            <br/>\n            <table id=\"active\">\n            <thead className=\"table-header\">\n                <tr>\n                    <th className=\"col\">QUOTATION NUMBER</th>\n                    <th className=\"col\">SERVICE<FaSortAmountUp id=\"sortServiceDesc\" onClick = {() => {\n                        if(document.getElementById('sortServiceDesc').style.color !== 'yellow'){\n                            document.getElementById('sortServiceDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',true),\n                                    desc: this.state.desc.filter(x => x !== \"service\").concat(\"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                            if(document.getElementById('sortServiceAsc').style.color === 'lime'){\n                                document.getElementById('sortServiceAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',true),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortServiceDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',true),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                });\n                        }\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }} />  <FaSortAmountDown id=\"sortServiceAsc\" onClick = {() => {\n                        if(document.getElementById('sortServiceAsc').style.color !== 'lime'){\n                            document.getElementById('sortServiceAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\").concat(\"service\")\n                                });                        \n                            if(document.getElementById('sortServiceDesc').style.color === 'yellow'){\n                                document.getElementById('sortServiceDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortServiceAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                        }\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('service',false),\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\n                                    asc: this.state.asc.filter(x => x !== \"service\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }} /></th>\n\n\n                    <th className=\"col\">CLIENT<FaSortAmountUp id=\"sortClientDesc\" onClick = {() => {\n                        if(document.getElementById('sortClientDesc').style.color !== 'yellow'){\n                            document.getElementById('sortClientDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',true),\n                                    desc: this.state.desc.filter(x => x !== \"client\").concat(\"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                            if(document.getElementById('sortClientAsc').style.color === 'lime'){\n                                document.getElementById('sortClientAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',true),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortClientDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',true),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                });\n                        }\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/>  \n                    <FaSortAmountDown id = \"sortClientAsc\" onClick = {() => {\n                        if(document.getElementById('sortClientAsc').style.color !== 'lime'){\n                            document.getElementById('sortClientAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\").concat(\"client\")\n                                });                        \n                            if(document.getElementById('sortClientDesc').style.color === 'yellow'){\n                                document.getElementById('sortClientDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortClientAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                        }\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('client',false),\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\n                                    asc: this.state.asc.filter(x => x !== \"client\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/></th>\n\n                    <th className=\"col\">DATE ASSIGNED<FaSortAmountUp id= \"sortDateAssignedDesc\" onClick = {() => {\n                        if(document.getElementById('sortDateAssignedDesc').style.color !== 'yellow'){\n                            document.getElementById('sortDateAssignedDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                            if(document.getElementById('sortDateAssignedAsc').style.color === 'lime'){\n                                document.getElementById('sortDateAssignedAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateAssignedDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                });\n                        }\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/>  \n                    \n                    <FaSortAmountDown id= \"sortDateAssignedAsc\" onClick = {() => {\n                        if(document.getElementById('sortDateAssignedAsc').style.color !== 'lime'){\n                            document.getElementById('sortDateAssignedAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\")\n                                });                        \n                            if(document.getElementById('sortDateAssignedDesc').style.color === 'yellow'){\n                                document.getElementById('sortDateAssignedDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateAssignedAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                        }\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateAssigned',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/></th>\n\n                    <th className=\"col\">DUE DATE <FaSortAmountUp id = \"sortDueDateDesc\" onClick = {() => {\n                        if(document.getElementById('sortDueDateDesc').style.color !== 'yellow'){\n                            document.getElementById('sortDueDateDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',true),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\").concat(\"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                            if(document.getElementById('sortDueDateAsc').style.color === 'lime'){\n                                document.getElementById('sortDueDateAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',true),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDueDateDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',true),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                });\n                        }\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/>\n                    \n                    <FaSortAmountDown id = \"sortDueDateAsc\" onClick = {() => {\n                        if(document.getElementById('sortDueDateAsc').style.color !== 'lime'){\n                            document.getElementById('sortDueDateAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\").concat(\"DueDate\")\n                                });                        \n                            if(document.getElementById('sortDueDateDesc').style.color === 'yellow'){\n                                document.getElementById('sortDueDateDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDueDateAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                        }\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DueDate',false),\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/></th>\n\n\n                    <th className=\"col\">SERVICE UNITS</th>\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD) <FaSortAmountUp id = \"sortDateCompletedDesc\" onClick = {() => {\n                        if(document.getElementById('sortDateCompletedDesc').style.color !== 'yellow'){\n                            document.getElementById('sortDateCompletedDesc').style.color = 'yellow';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                            if(document.getElementById('sortDateCompletedAsc').style.color === 'lime'){\n                                document.getElementById('sortDateCompletedAsc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateCompletedDesc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',true),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                });\n                        }\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {asc: this.state.asc}\n                                    ])).by([\n                                    {desc: this.state.desc}\n                                    ])\n                        });\n                            this.printMap();\n                    }}/> \n                    <FaSortAmountDown id = \"sortDateCompletedAsc\" onClick = {() => {\n                        if(document.getElementById('sortDateCompletedAsc').style.color !== 'lime'){\n                            document.getElementById('sortDateCompletedAsc').style.color = 'lime';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\")\n                                });                        \n                            if(document.getElementById('sortDateCompletedDesc').style.color === 'yellow'){\n                                document.getElementById('sortDateCompletedDesc').style.color = 'black';\n                                this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                });\n                            }\n                        }\n                        else{\n                            document.getElementById('sortDateCompletedAsc').style.color = 'black';\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                        }\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\n                            this.setState({\n                                    sortParameters: this.state.sortParameters.set('DateCompleted',false),\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\n                                });\n                        }\n                        this.setState({\n                            tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])\n                        });\n                        this.printMap();\n                    }}/> </th>\n                    <th className=\"col\">STATUS/NOTES/COMMENTS</th>\n                    {/* <th className=\"col\">SERVICE DESCRIPTION</th> */}\n                    <th className=\"col\">QUOTE APPROVED</th>\n                    <th className=\"col\">COMPLETED</th>\n                </tr>\n            </thead>\n            <tbody>\n                {this.state.completedTasks.map((x) => \n                <tr key={\"completedList\"+x.id} className=\"table-row\">\n                    <td key={\"completedList\"+x.id+\"_quotationNumber\"}>{\"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\" + (x.id + 1023)}</td>\n                    <td key={\"completedList\"+x.id+\"_service\"}>{x.service}</td>\n                    <td key={\"completedList\"+x.id+\"_client\"}>{x.client}</td>\n                    <td key={\"completedList\"+x.id+\"_dateAssigned\"}>{moment(x.dateAssigned).format(\"YYYY-MM-DD\")}</td>\n                    <td key={\"completedList\"+x.id+\"_dueTime\"}>{moment(x.dueDate).format(\"YYYY-MM-DD\")}</td>\n                    <td key={\"completedList\"+x.id+\"_serviceUnits\"}>{x.qty}</td>\n                    <td key={\"completedList\"+x.id+\"_dateOfCompletion\"}>\n                    <Input\n                          type=\"text\"\n                          name={\"completedList\"+ x.id + \"_dateCompleted\"}\n                          id={\"completedList\"+ x.id + \"_dateCompleted\"}\n                          defaultValue={moment(x.dateCompleted).format(\"YYYY-MM-DD\")}\n                          placeholder=\"Enter date of completion\"\n                          onChange={this.handleInputChange}\n                        />\n                    </td>\n                    <td key={\"completedList\"+ x.id +\"_status_notes_comments\"}>\n                    <Input\n                          type=\"textarea\"\n                          name={\"completedList\"+ x.id + \"_status_notes_comments\"}\n                          id={\"completedList\"+ x.id + \"_status_notes_comments\"}\n                          defaultValue={x.status_notes_comments}\n                          placeholder=\"Enter status/notes/comments\"\n                          onChange={this.handleInputChange}\n                        />\n                    </td>\n                    {/* <td key={\"completedList\" + x.id + \"serviceDescription\"}>\n                     <span style = {{'fontSize': '10px'}}>{x.serviceDescription}</span>\n\n                    </td> */}\n                    <td key={\"completedList\"+x.id+\"_quoteApproved\"}>\n                    <FormGroup tag=\"fieldset\">\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"completedList\"+x.id+\"_quoteApproved\"} id={\"completedList\"+x.id+\"_quoteApproved\"} value={true}  onChange = {this.handleInputChange} checked = {!isNullOrUndefined(x.quoteApproved) || x.quoteApproved} onClick = {() => {\n                                console.log(x.id);\n                                var item = {\n                                    // dateCompleted: document.getElementById(\"completedList\"+x.id+ \"_dateCompleted\").value,\n                                    // status_notes_comments: document.getElementById(\"completedList\"+ x.id + \"_status_notes_comments\")\n                                    dateCompleted: moment(document.getElementById(\"completedList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    quoteApproved: true,\n                                    status_notes_comments: document.getElementById(\"completedList\"+ x.id + \"_status_notes_comments\").value\n                                }\n                                API.modifyTask(x.id, item)\n                                .then(res => {\n                                    console.log(\"Quote approved\");\n                                    this.getTasks();\n                                    this.setState({\n                                    tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])});\n                                    })\n                                .catch(err => console.log(err))\n                            }}/>{' '}\n                            Yes\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"completedList\"+x.id+\"_quoteApproved\"} id={\"completedList\"+x.id+\"_quoteApproved\"} value={false}  onChange = {this.handleInputChange}  checked = {!isNullOrUndefined(x.quoteApproved) && !x.quoteApproved} onClick = {() => {\n                                console.log(x.id);\n                                var item = {\n                                    // dateCompleted: document.getElementById(\"completedList\"+x.id+ \"_dateCompleted\").value,\n                                    quoteApproved: false,\n                                    // status_notes_comments: document.getElementById(\"completedList\"+ x.id + \"_status_notes_comments\")\n                                    dateCompleted:moment(document.getElementById(\"completedList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    status_notes_comments: document.getElementById(\"completedList\"+ x.id + \"_status_notes_comments\").value\n                                }\n                                API.modifyTask(x.id, item)\n                                .then(() => {\n                                    console.log(\"Quote not approved\");\n                                    this.getTasks();\n                                    this.setState({\n                                    tasks: fastSort(fastSort(this.state.tasks).by([\n                                    {desc: this.state.desc}\n                                    ])).by([\n                                    {asc: this.state.asc}\n                                    ])});\n                                    })\n                                .catch(err => console.log(err))\n                            }}/>{' '}\n                            No\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                    </td>\n                    <td key={\"completedList\"+x.id+\"_completed\"}>\n                    <FormGroup tag=\"fieldset\">\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"completedList\"+x.id+\"_completed\"}  checked = {!isNullOrUndefined(x.completed) || x.completed} value={true} onChange = {this.handleInputChange} onClick = {() => {\n                                console.log(x.id);\n                                console.log(document.getElementById(\"completedList\"+x.id+ \"_dateCompleted\").value, document.getElementById(\"completedList\"+ x.id + \"_status_notes_comments\").value);\n                                console.log(!isNullOrUndefined(x.quoteApproved))\n                                var item = {\n                                    completed: true,\n                                    dateCompleted:moment(document.getElementById(\"completedList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    quoteApproved: x.quoteApproved,\n                                    status_notes_comments: document.getElementById(\"completedList\"+ x.id + \"_status_notes_comments\").value\n                                }\n                                API.modifyTask(x.id, item)\n                                .then(() => {console.log(\"Task completed\");\n                                this.getCompletedTasks();\n                                })\n                                .catch(err => console.log(err))\n                            }}/>{' '}\n                            Yes\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                            <Input type=\"radio\" name={\"completedList\"+x.id+\"_completed\"}  checked = {!isNullOrUndefined(x.completed) && !x.completed} value={false} onChange = {this.handleInputChange} onClick = {() => {\n                             console.log(x.id);\n                                var item = {\n                                    completed: false,\n                                    dateCompleted:moment(document.getElementById(\"completedList\"+x.id+ \"_dateCompleted\").value).format(\"YYYY-MM-DD\"),\n                                    quoteApproved: x.quoteApproved,\n                                    status_notes_comments: document.getElementById(\"completedList\"+ x.id + \"_status_notes_comments\").value\n                                }\n                                API.modifyTask(x.id, item)\n                                .then(() => console.log(\"Task incomplete\"))\n                                .catch(err => console.log(err))   \n                            }}/>{' '}\n                            No\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                    </td>\n                </tr>\n                )}\n            </tbody>\n            </table>\n           </Container>\n            </div>\n        )\n    }\n}\n\nexport default TaskList;","import React, { Component, Fragment } from \"react\";\r\nimport { withAlert } from \"react-alert\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <button\r\n          onClick={() => {\r\n            this.props.alert.show(\"Oh look, an alert!\");\r\n          }}\r\n        >\r\n          Show Alert\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            this.props.alert.error(\"You just broke something!\");\r\n          }}\r\n        >\r\n          Oops, an error\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            this.props.alert.success(\"It's ok now!\");\r\n          }}\r\n        >\r\n          Success!\r\n        </button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAlert(Home);\r\n","import React from \"react\";\r\nimport { Jumbotron, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport API from \"../../utils/API\";\r\nimport moment from \"moment\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { FaSortAmountUp, FaSortAmountDown} from \"react-icons/fa\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Moment from \"react-moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport Home from \"./Home.js\";\r\n\r\nconst options = {\r\n    timeout: 5000,\r\n    position: \"bottom center\"\r\n  };\r\n  \r\n\r\n//array sort function\r\nvar fastSort = require(\"fast-sort\");\r\n\r\nclass Admin_IC extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            employees: [],\r\n            asc: [],\r\n            desc: [],\r\n            companyNames: [],\r\n            dateAssigned: moment(),\r\n            dueDate: moment()\r\n            .add(90, \"days\")\r\n            .format(\"YYYY-MM-DD\"),\r\n            qty: 0\r\n        };\r\n        \r\n        this.getTasks = this.getTasks.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.filterResults = this.filterResults.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.displayAlert = this.displayAlert.bind(this);\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    getTasks = () => {\r\n        if(this.state.employee.length > 0){\r\n            API.getEmployeeTasks(this.state.employee.split(\" \").join(\"%20\"))\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    tasks: res.data\r\n                });\r\n                this.getCompletedTasks();\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    displayAlert = () => {\r\n        return (\r\n        <Provider template={AlertTemplate} {...options}>\r\n            <Home />\r\n          </Provider>)\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        API.allTasks()\r\n        .then(res => {\r\n            this.setState({\r\n                tasks: res.data\r\n            });\r\n            console.log(res.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n        API.getCompany()\r\n      .then(res => {\r\n          var uniqueCompanies = [];\r\n        for (let i = 0; i < res.data.length; ++i) {\r\n          if (uniqueCompanies.indexOf(res.data[i].companyName) === -1 && res.data[i].companyName.trim() !== \"\") {\r\n            uniqueCompanies.push(res.data[i].companyName);\r\n          }\r\n        }\r\n        this.setState({ companyNames: uniqueCompanies });\r\n        console.log(\"Companies table loaded\");\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n\r\n        API.getEmployees()\r\n        .then(res => {\r\n            console.log(\"Employee table loaded!\");\r\n            this.setState({\r\n                employees: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    filterResults = () => {\r\n        \r\n        API.filterTasks(this.state.employee, this.state.quoteApproved, this.state.completed)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(this.state.employee, this.state.quoteApproved, this.state.completed);\r\n            this.setState({\r\n                tasks: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    getCompletedTasks = () => {\r\n        API.completedTasks(this.state.employee)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                completedTasks: res.data.filter(x => x.quoteApproved !== false)\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(date) {\r\n        this.setState({\r\n          dateAssigned: date\r\n        });\r\n        this.setState({\r\n            dueDate: moment(this.state.dateAssigned)\r\n            .add(90, \"days\")\r\n            .format(\"YYYY-MM-DD\")\r\n        });\r\n        document.getElementById(\"dueDate\").value = moment(\r\n          this.state.dueDate\r\n        ).format(\"YYYY-MM-DD\");\r\n      }\r\n      \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <Jumbotron>\r\n            <FormGroup>\r\n                <Label for=\"filter\">Filter Results By:</Label> <br/>\r\n                \r\n                <Input type=\"select\" name=\"employee\" id=\"employee\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left'}} onClick = {() => {\r\n                    var item = {\r\n            quotationIssuedBy: this.state.employee\r\n        }\r\n        this.filterResults();\r\n                }}>\r\n                <option value=\"\">Employee name</option>\r\n                    {this.state.employees.map(x => <option value={x.EMP_NAME}>{x.EMP_NAME}</option>)}\r\n                </Input>\r\n                \r\n                <Input type=\"select\" name=\"quoteApproved\" id=\"quoteApproved\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left'}} onClick = {() => {\r\n                    var item = {\r\n            quoteApproved: this.state.quoteApproved\r\n        }\r\n        this.filterResults();\r\n                }}>\r\n                <option value=\"\">Quote approval</option>\r\n                <option value={true}>Yes</option>\r\n                <option value={false}>No</option>\r\n                </Input>\r\n                \r\n                <Input type=\"select\" name=\"completed\" id=\"completed\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left'}} onClick = {() => {\r\n                    var item = {\r\n            completed: this.state.completed\r\n        }\r\n        this.filterResults();\r\n                }}>\r\n                <option value=\"\">Completed tasks</option>\r\n                <option value={true}>Yes</option>\r\n                <option value={false}>No</option>\r\n                </Input>\r\n            </FormGroup>\r\n            \r\n            <br/><br/>\r\n            <Label>\r\n                ADD OR REMOVE TASK FOR EMPLOYEE\r\n            </Label>\r\n            <Form id=\"addTask\">\r\n                <Input type=\"select\" name=\"toEmployee\" id=\"employee\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}>\r\n                <option value=\"\">Employee assigned task</option>\r\n                    {this.state.employees.map(x => <option value={x.EMP_NAME}>{x.EMP_NAME}</option>)}\r\n                </Input>\r\n\r\n                <Input type=\"select\" name=\"task\" id=\"task\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}>\r\n                <option value=\"\">Choose a task category</option>\r\n                <option value=\"Admin Task\">Admin Task</option>\r\n                <option value=\"Management Task\">Management Task</option>\r\n                <option value=\"IC Employee Training\">IC Employee Training</option>\r\n                <option value=\"Marketing Task\">Marketing Task</option>\r\n                <option value=\"Miscellanous\">Miscellanous</option>\r\n                <option value=\"Networking Task\">Networking Task</option>\r\n                <option value=\"Sales Task\">Sales Task</option>\r\n                <option value=\"Research Task\">Research Task</option>\r\n                <option value=\"Scheduling Task\">Scheduling Task</option>\r\n                </Input>\r\n\r\n                {/* <Input type=\"text\" name=\"task\" id=\"task\" placeholder=\"Enter task here\" onChange = {this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}/> */}\r\n                <Input type=\"select\" name=\"client\" id=\"client\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}>\r\n                <option value=\"\">Choose Client</option>\r\n                    {this.state.companyNames.map(x => <option value={x}>{x}</option>)}\r\n                </Input>\r\n                <br/>\r\n                <br/>\r\n                <Label style= {{'clear': 'both'}}>Task Details:</Label>\r\n                <Input\r\n                type=\"textarea\"\r\n                name=\"details\"\r\n                id=\"details\"\r\n                onChange={this.handleInputChange}\r\n                placeholder = \"Enter task details\"\r\n            />\r\n                <br/>\r\n                <Label>Pick date of assignment of task:</Label><br />\r\n                <DatePicker\r\n                selected={this.state.dateAssigned}\r\n                onChange={this.handleChange}\r\n                name=\"dateAssigned\"\r\n                placeholder=\"Date Assigned\"\r\n                style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}\r\n              />\r\n              <br/> <br/>\r\n              \r\n              <Label>Due date of task:</Label><br />\r\n              <Input\r\n                type=\"text\"\r\n                name=\"dueDate\"\r\n                id=\"dueDate\"\r\n                onChange={this.handleInputChange}\r\n                value = {moment(this.state.dateAssigned).add(90, \"days\").format(\"YYYY-MM-DD\")}\r\n                placeholder = \"Enter due date\"\r\n                style = {{'width': '25%', 'margin':'5 5px', 'padding': '5 5px'}}\r\n            /> <br />\r\n                \r\n                <Button className=\"btn-success\" style = {{'clear': 'both'}} onClick = {() => {\r\n                    var item = {\r\n                        quotationIssuedBy: this.state.toEmployee,\r\n                        quotationNumber: \"EMPTY\",\r\n                        service: this.state.task,\r\n                        client: this.state.client,\r\n                        instructions: this.state.details,\r\n                        startDate: this.state.dateAssigned, //sort\r\n                        validThru: this.state.dueDate,\r\n                        qty: parseFloat(this.state.qty)\r\n                    };\r\n                    API.addTask(item)\r\n                    .then(() => {\r\n                        console.log(\"Task added!\");\r\n                        document.getElementById('addTask').reset();\r\n                        })\r\n                    .catch(err => console.log(err));\r\n                }}>Add Task</Button>\r\n            </Form>  \r\n            </Jumbotron>\r\n\r\n            <Container>\r\n\r\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>All Tasks</h5>\r\n            <br/>\r\n            <table id=\"active\">\r\n            <thead className=\"table-header\">\r\n                <tr>\r\n                    <th className=\"col\">QUOTATION NUMBER</th>\r\n                    <th className=\"col\">SERVICE<FaSortAmountUp id=\"sortServiceDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortServiceDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortServiceDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\").concat(\"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                            if(document.getElementById('sortServiceAsc').style.color === 'lime'){\r\n                                document.getElementById('sortServiceAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortServiceDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                            \r\n                    }} />  <FaSortAmountDown id=\"sortServiceAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortServiceAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortServiceAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\").concat(\"service\")\r\n                                });                        \r\n                            if(document.getElementById('sortServiceDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortServiceDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortServiceAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }} /></th>\r\n\r\n\r\n                    <th className=\"col\">CLIENT<FaSortAmountUp id=\"sortClientDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortClientDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortClientDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\").concat(\"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                            if(document.getElementById('sortClientAsc').style.color === 'lime'){\r\n                                document.getElementById('sortClientAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortClientDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                            \r\n                    }}/>  \r\n                    <FaSortAmountDown id = \"sortClientAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortClientAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortClientAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\").concat(\"client\")\r\n                                });                        \r\n                            if(document.getElementById('sortClientDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortClientDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortClientAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                       \r\n                    }}/></th>\r\n\r\n                    <th className=\"col\">DATE ASSIGNED<FaSortAmountUp id= \"sortDateAssignedDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateAssignedDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortDateAssignedDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                            if(document.getElementById('sortDateAssignedAsc').style.color === 'lime'){\r\n                                document.getElementById('sortDateAssignedAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateAssignedDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                           \r\n                    }}/>  \r\n                    \r\n                    <FaSortAmountDown id= \"sortDateAssignedAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateAssignedAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortDateAssignedAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\")\r\n                                });                        \r\n                            if(document.getElementById('sortDateAssignedDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortDateAssignedDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateAssignedAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }}/></th>\r\n\r\n                    <th className=\"col\">DUE DATE <FaSortAmountUp id = \"sortDueDateDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortDueDateDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortDueDateDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\").concat(\"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                            if(document.getElementById('sortDueDateAsc').style.color === 'lime'){\r\n                                document.getElementById('sortDueDateAsc').style.color = 'black';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDueDateDesc').style.color = 'black';\r\n                            this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                           \r\n                    }}/>\r\n                    \r\n                    <FaSortAmountDown id = \"sortDueDateAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortDueDateAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortDueDateAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\").concat(\"DueDate\")\r\n                                });                        \r\n                            if(document.getElementById('sortDueDateDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortDueDateDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDueDateAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    \r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }}/></th>\r\n\r\n\r\n                    {/* <th className=\"col\">SERVICE UNITS</th> */}\r\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD) <FaSortAmountUp id = \"sortDateCompletedDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateCompletedDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortDateCompletedDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                            if(document.getElementById('sortDateCompletedAsc').style.color === 'lime'){\r\n                                document.getElementById('sortDateCompletedAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateCompletedDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                           \r\n                    }}/> \r\n                    <FaSortAmountDown id = \"sortDateCompletedAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateCompletedAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortDateCompletedAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\")\r\n                                });                        \r\n                            if(document.getElementById('sortDateCompletedDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortDateCompletedDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateCompletedAsc').style.color = 'black';\r\n                            this.setState({\r\n                                   \r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }}/> </th>\r\n                    <th className=\"col\">DETAILS</th>\r\n                    {/* <th className=\"col\">SERVICE DESCRIPTION</th> */}\r\n                    <th className=\"col\">QUOTE APPROVED</th>\r\n                    <th className=\"col\">COMPLETED</th>\r\n                    <th className=\"col\">REMOVE TASK</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.tasks.filter(x => !isNullOrUndefined(x.quotationIssuedBy)).map((x, index) => \r\n                <tr key={\"activeList\"+index} className=\"table-row\">\r\n                    <td key={\"activeList\"+index+\"_quotationNumber\"}>{!isNullOrUndefined(x.quotationIssuedBy) ? \"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\" + (x.id + 1023) : \"QN_EMPTY_\" + (x.id + 1023)}</td>\r\n                    <td key={\"activeList\"+index+\"_service\"}>{x.service}</td>\r\n                    <td key={\"activeList\"+index+\"_client\"}>{x.client}</td>\r\n                    <td key={\"activeList\"+index+\"_dateAssigned\"}>{moment(x.dateAssigned).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"_dueTime\"}>{moment(x.dueDate).format(\"YYYY-MM-DD\")}</td>\r\n                    {/* <td key={\"activeList\"+index+\"_serviceUnits\"}>{x.qty}</td> */}\r\n                    <td key={\"activeList\"+index+\"_dateOfCompletion\"}>{moment(x.dateCompleted).format(\"YYYY-MM-DD\")}\r\n                    {/* <Input\r\n                          type=\"text\"\r\n                          name={\"activeList\"+ index + \"_dateCompleted\"}\r\n                          id={\"activeList\"+ index + \"_dateCompleted\"}\r\n                          defaultValue={moment(x.dateCompleted).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter date of completion\"\r\n                          onChange={this.handleInputChange}\r\n                        /> */}\r\n                    </td>\r\n                    <td key={\"activeList\"+ index +\"_status_notes_comments\"}>\r\n                    <Input\r\n                          type=\"textarea\"\r\n                          name={\"activeList\"+ index + \"_status_notes_comments\"}\r\n                          id={\"activeList\"+ index + \"_status_notes_comments\"}\r\n                          defaultValue={x.details}\r\n                          placeholder=\"Enter status/notes/comments\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    {/* <td key={\"activeList\" + index + \"serviceDescription\"}>\r\n                     <span style = {{'fontSize': '10px'}}>{x.serviceDescription}</span>\r\n\r\n                    </td> */}\r\n                    <td key={\"activeList\"+index+\"_quoteApproved\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+index+\"_quoteApproved\"} id={\"activeList\"+index+\"_quoteApproved\"} value={true}  onChange = {this.handleInputChange} checked = {x.quoteApproved || !isNullOrUndefined(x.quoteApproved)} onClick = {() => {\r\n                                console.log(x.id);\r\n                                var item = {\r\n                                    // dateCompleted: document.getElementById(\"activeList\"+index+ \"_dateCompleted\").value,\r\n                                    // status_notes_comments: document.getElementById(\"activeList\"+ index + \"_status_notes_comments\")\r\n                                    quoteApproved: true,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: x.completed\r\n                                }\r\n                                API.modifyTask(x.id, item)\r\n                                .then(res => {\r\n                                    console.log(\"Quote approved\");\r\n                                    console.log(res.data);\r\n                                    API.getEmployeeTasks(this.state.employee.split(\" \").join(\"%20\"))\r\n                                    .then(res2 => {\r\n                                        console.log(res2.data);\r\n                                        this.setState({\r\n                                            tasks: res2.data,\r\n                                        });\r\n\r\n                                    this.setState({\r\n                                    tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                                    })\r\n                                    .catch(err => console.log(err));\r\n                \r\n                                    })\r\n                                .catch(err => console.log(err))\r\n                            }}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+index+\"_quoteApproved\"} id={\"activeList\"+index+\"_quoteApproved\"} value={false}  onChange = {this.handleInputChange} checked = {!isNullOrUndefined(x.quoteApproved) && !x.quoteApproved} onClick = {() => {\r\n                                console.log(x.id);\r\n                                var item = {\r\n                                    // dateCompleted: document.getElementById(\"activeList\"+index+ \"_dateCompleted\").value,\r\n                                    quoteApproved: false,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: x.completed\r\n                                }\r\n                                API.modifyTask(x.id, item)\r\n                                .then(() => console.log(\"Quote not approved\"))\r\n                                .catch(err => console.log(err))\r\n                            }}/>{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_completed\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+index+\"_completed\"} checked={x.completed || !isNullOrUndefined(x.completed)} value={true} onChange = {this.handleInputChange} onClick = {() => {\r\n                                console.log(x.id);\r\n                                console.log(document.getElementById(\"activeList\"+index+ \"_dateCompleted\").value, document.getElementById(\"activeList\"+ index + \"_status_notes_comments\").value);\r\n                                console.log(!isNullOrUndefined(x.quoteApproved))\r\n                                var item = {\r\n                                    quoteApproved: x.quoteApproved,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: true\r\n                                }\r\n                                API.modifyTask(x.id, item)\r\n                                .then(() => {console.log(\"Task completed\");\r\n                                })\r\n                                .catch(err => console.log(err))\r\n                            }}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+index+\"_completed\"} checked={!isNullOrUndefined(x.quoteApproved) && !x.completed} value={false} onChange = {this.handleInputChange} onClick = {() => {\r\n                             console.log(x.id);\r\n                                var item = {\r\n                                    quoteApproved: x.quoteApproved,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: false\r\n                                }\r\n                                API.modifyTask(x.id, item)\r\n                                .then(() => console.log(\"Task incomplete\"))\r\n                                .catch(err => console.log(err))   \r\n                            }}/>{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_removeTask\"}>\r\n                    \r\n                    <Button className = 'btn-danger' onClick = {() => {\r\n                        console.log(x);\r\n                        API.deleteTask(x.id)\r\n                        .then(() => {\r\n                            console.log(x.id ,\"deleted\");\r\n                            this.displayAlert();\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                    }}> Remove Task</Button></td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n            </table>\r\n            <br/><br/>\r\n            \r\n           </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Admin_IC;","import React, { Component, Fragment } from \"react\";\r\nimport { withAlert } from \"react-alert\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <button\r\n          onClick={() => {\r\n            this.props.alert.show(\"Oh look, an alert!\");\r\n          }}\r\n        >\r\n          Show Alert\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            this.props.alert.error(\"You just broke something!\");\r\n          }}\r\n        >\r\n          Oops, an error\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            this.props.alert.success(\"It's ok now!\");\r\n          }}\r\n        >\r\n          Success!\r\n        </button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAlert(Home);\r\n","import React from \"react\";\r\nimport { Jumbotron, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport API from \"../../utils/API\";\r\nimport moment from \"moment\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { FaSortAmountUp, FaSortAmountDown} from \"react-icons/fa\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Provider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport Home from \"./Home.js\";\r\n\r\nconst options = {\r\n    position: 'bottom center',\r\n    timeout: 5000,\r\n    offset: '30px',\r\n    transition: 'scale'\r\n  }\r\n  \r\n\r\n//array sort function\r\nvar fastSort = require(\"fast-sort\");\r\n\r\nclass Admin_ICABOB extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            employees: [],\r\n            asc: [],\r\n            desc: [],\r\n            companyNames: [],\r\n            dateAssigned: moment(),\r\n            dueDate: moment()\r\n            .add(90, \"days\")\r\n            .format(\"YYYY-MM-DD\"),\r\n            qty: 0\r\n        };\r\n        \r\n        this.getTasks = this.getTasks.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.filterResults = this.filterResults.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.displayAlert = this.displayAlert.bind(this);\r\n        this.getCompletedTasks = this.getCompletedTasks.bind(this);\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    getCompletedTasks = () => {\r\n        API.completedTasks(this.state.employee)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                completedTasks: res.data.filter(x => x.quoteApproved !== false)\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    getTasks = () => {\r\n        if(this.state.employee.length > 0){\r\n            API.getEmployeeTasks(this.state.employee.split(\" \").join(\"%20\"))\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    tasks: res.data\r\n                });\r\n                this.getCompletedTasks();\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    displayAlert = () => {\r\n        return (\r\n        <Provider template={AlertTemplate} {...options}>\r\n            <Home />\r\n          </Provider>)\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        API.allTasks()\r\n        .then(res => {\r\n            this.setState({\r\n                tasks: res.data\r\n            });\r\n            console.log(res.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n        API.getCompany()\r\n      .then(res => {\r\n          var uniqueCompanies = [];\r\n        for (let i = 0; i < res.data.length; ++i) {\r\n          if (uniqueCompanies.indexOf(res.data[i].companyName) === -1 && res.data[i].companyName.trim() !== \"\") {\r\n            uniqueCompanies.push(res.data[i].companyName);\r\n          }\r\n        }\r\n        this.setState({ companyNames: uniqueCompanies });\r\n        console.log(\"Companies table loaded\");\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n\r\n        API.getEmployees()\r\n        .then(res => {\r\n            console.log(\"Employee table loaded!\");\r\n            this.setState({\r\n                employees: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    filterResults = () => {\r\n        \r\n        API.filterTasks(this.state.employee, this.state.quoteApproved, this.state.completed)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(this.state.employee, this.state.quoteApproved, this.state.completed);\r\n            this.setState({\r\n                tasks: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    handleChange(date) {\r\n        this.setState({\r\n          dateAssigned: date\r\n        });\r\n        this.setState({\r\n            dueDate: moment(this.state.dateAssigned)\r\n            .add(90, \"days\")\r\n            .format(\"YYYY-MM-DD\")\r\n        });\r\n        document.getElementById(\"dueDate\").value = moment(\r\n          this.state.dueDate\r\n        ).format(\"YYYY-MM-DD\");\r\n      }\r\n      \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <Jumbotron>\r\n            <FormGroup>\r\n                <Label for=\"filter\">Filter Results By:</Label> <br/>\r\n                \r\n                <Input type=\"select\" name=\"employee\" id=\"employee\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left'}} onClick = {() => {\r\n                    var item = {\r\n            quotationIssuedBy: this.state.employee\r\n        }\r\n        this.filterResults();\r\n                }}>\r\n                <option value=\"\">Employee name</option>\r\n                    {this.state.employees.map(x => <option value={x.EMP_NAME}>{x.EMP_NAME}</option>)}\r\n                </Input>\r\n                \r\n                <Input type=\"select\" name=\"quoteApproved\" id=\"quoteApproved\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left'}} onClick = {() => {\r\n                    var item = {\r\n            quoteApproved: this.state.quoteApproved\r\n        }\r\n        this.filterResults();\r\n                }}>\r\n                <option value=\"\">Quote approval</option>\r\n                <option value={true}>Yes</option>\r\n                <option value={false}>No</option>\r\n                </Input>\r\n                \r\n                <Input type=\"select\" name=\"completed\" id=\"completed\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left'}} onClick = {() => {\r\n                    var item = {\r\n            completed: this.state.completed\r\n        }\r\n        this.filterResults();\r\n                }}>\r\n                <option value=\"\">Completed tasks</option>\r\n                <option value={true}>Yes</option>\r\n                <option value={false}>No</option>\r\n                </Input>\r\n            </FormGroup>\r\n            \r\n            <br/><br/>\r\n            <Label>\r\n                ADD OR REMOVE TASK FOR EMPLOYEE\r\n            </Label>\r\n            <Form id=\"addTask\">\r\n                <Input type=\"select\" name=\"toEmployee\" id=\"employee\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}>\r\n                <option value=\"\">Employee assigned task</option>\r\n                    {this.state.employees.map(x => <option value={x.EMP_NAME}>{x.EMP_NAME}</option>)}\r\n                </Input>\r\n                \r\n                <Input type=\"select\" name=\"task\" id=\"task\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}>\r\n                <option value=\"\">Choose a task category</option>\r\n                <option value=\"Admin Task\">Admin Task</option>\r\n                <option value=\"Management Task\">Management Task</option>\r\n                <option value=\"IC Employee Training\">IC Employee Training</option>\r\n                <option value=\"Marketing Task\">Marketing Task</option>\r\n                <option value=\"Miscellanous\">Miscellanous</option>\r\n                <option value=\"Networking Task\">Networking Task</option>\r\n                <option value=\"Sales Task\">Sales Task</option>\r\n                <option value=\"Research Task\">Research Task</option>\r\n                <option value=\"Scheduling Task\">Scheduling Task</option>\r\n                </Input>\r\n\r\n\r\n                {/* <Input type=\"text\" name=\"task\" id=\"task\" placeholder=\"Enter task here\" onChange = {this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}/> */}\r\n                <Input type=\"select\" name=\"client\" id=\"client\" onChange={this.handleInputChange} style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}>\r\n                <option value=\"\">Choose Client</option>\r\n                    {this.state.companyNames.map(x => <option value={x}>{x}</option>)}\r\n                </Input>\r\n                <br/>\r\n                <br/>\r\n                <Label style= {{'clear': 'both'}}>Task Details:</Label>\r\n                <Input\r\n                type=\"textarea\"\r\n                name=\"details\"\r\n                id=\"details\"\r\n                onChange={this.handleInputChange}\r\n                placeholder = \"Enter task details\"\r\n            />\r\n                <br/>\r\n                <Label>Pick date of assignment of task:</Label><br />\r\n                <DatePicker\r\n                selected={this.state.dateAssigned}\r\n                onChange={this.handleChange}\r\n                name=\"dateAssigned\"\r\n                placeholder=\"Date Assigned\"\r\n                style = {{'width': '25%', 'float': 'left', 'margin':'5 5px', 'padding': '5 5px'}}\r\n              />\r\n              <br/> <br/>\r\n              \r\n              <Label>Due date of task:</Label><br />\r\n              <Input\r\n                type=\"text\"\r\n                name=\"dueDate\"\r\n                id=\"dueDate\"\r\n                onChange={this.handleInputChange}\r\n                value = {moment(this.state.dateAssigned).add(90, \"days\").format(\"YYYY-MM-DD\")}\r\n                placeholder = \"Enter due date\"\r\n                style = {{'width': '25%', 'margin':'5 5px', 'padding': '5 5px'}}\r\n            /> <br />\r\n                \r\n                <Button className=\"btn-success\" style = {{'clear': 'both'}} onClick = {() => {\r\n                    var item = {\r\n                        quotationIssuedBy: this.state.toEmployee,\r\n                        quotationNumber: \"EMPTY\",\r\n                        service: this.state.task,\r\n                        client: this.state.client,\r\n                        instructions: this.state.details,\r\n                        startDate: this.state.dateAssigned, //sort\r\n                        validThru: this.state.dueDate,\r\n                        qty: parseFloat(this.state.qty)\r\n                    };\r\n                    API.addTask(item)\r\n                    .then(() => {\r\n                        console.log(\"Task added!\");\r\n                        document.getElementById('addTask').reset();\r\n                        })\r\n                    .catch(err => console.log(err));\r\n                }}>Add Task</Button>\r\n            </Form>  \r\n            </Jumbotron>\r\n\r\n            <Container>\r\n\r\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>Active Tasks</h5>\r\n            <br/>\r\n            <table id=\"active\">\r\n            <thead className=\"table-header\">\r\n                <tr>\r\n                    <th className=\"col\">QUOTATION NUMBER</th>\r\n                    <th className=\"col\">SERVICE<FaSortAmountUp id=\"sortServiceDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortServiceDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortServiceDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\").concat(\"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                            if(document.getElementById('sortServiceAsc').style.color === 'lime'){\r\n                                document.getElementById('sortServiceAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortServiceDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                            \r\n                    }} />  <FaSortAmountDown id=\"sortServiceAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortServiceAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortServiceAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\").concat(\"service\")\r\n                                });                        \r\n                            if(document.getElementById('sortServiceDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortServiceDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortServiceAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortServiceAsc').style.color === 'black' && document.getElementById('sortServiceDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"service\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"service\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }} /></th>\r\n\r\n\r\n                    <th className=\"col\">CLIENT<FaSortAmountUp id=\"sortClientDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortClientDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortClientDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\").concat(\"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                            if(document.getElementById('sortClientAsc').style.color === 'lime'){\r\n                                document.getElementById('sortClientAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortClientDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                            \r\n                    }}/>  \r\n                    <FaSortAmountDown id = \"sortClientAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortClientAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortClientAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\").concat(\"client\")\r\n                                });                        \r\n                            if(document.getElementById('sortClientDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortClientDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortClientAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortClientAsc').style.color === 'black' && document.getElementById('sortClientDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"client\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"client\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                       \r\n                    }}/></th>\r\n\r\n                    <th className=\"col\">DATE ASSIGNED<FaSortAmountUp id= \"sortDateAssignedDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateAssignedDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortDateAssignedDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                            if(document.getElementById('sortDateAssignedAsc').style.color === 'lime'){\r\n                                document.getElementById('sortDateAssignedAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateAssignedDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                           \r\n                    }}/>  \r\n                    \r\n                    <FaSortAmountDown id= \"sortDateAssignedAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateAssignedAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortDateAssignedAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\").concat(\"DateAssigned\")\r\n                                });                        \r\n                            if(document.getElementById('sortDateAssignedDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortDateAssignedDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateAssignedAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateAssignedAsc').style.color === 'black' && document.getElementById('sortDateAssignedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    desc: this.state.desc.filter(x => x !== \"DateAssigned\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateAssigned\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }}/></th>\r\n\r\n                    <th className=\"col\">DUE DATE <FaSortAmountUp id = \"sortDueDateDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortDueDateDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortDueDateDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\").concat(\"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                            if(document.getElementById('sortDueDateAsc').style.color === 'lime'){\r\n                                document.getElementById('sortDueDateAsc').style.color = 'black';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDueDateDesc').style.color = 'black';\r\n                            this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                           \r\n                    }}/>\r\n                    \r\n                    <FaSortAmountDown id = \"sortDueDateAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortDueDateAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortDueDateAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\").concat(\"DueDate\")\r\n                                });                        \r\n                            if(document.getElementById('sortDueDateDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortDueDateDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDueDateAsc').style.color = 'black';\r\n                            this.setState({\r\n                                    \r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDueDateAsc').style.color === 'black' && document.getElementById('sortDueDateDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DueDate\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DueDate\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }}/></th>\r\n\r\n\r\n                    {/* <th className=\"col\">SERVICE UNITS</th> */}\r\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD) <FaSortAmountUp id = \"sortDateCompletedDesc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateCompletedDesc').style.color !== 'yellow'){\r\n                            document.getElementById('sortDateCompletedDesc').style.color = 'yellow';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                            if(document.getElementById('sortDateCompletedAsc').style.color === 'lime'){\r\n                                document.getElementById('sortDateCompletedAsc').style.color = 'black';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateCompletedDesc').style.color = 'black';\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])\r\n                        });\r\n                           \r\n                    }}/> \r\n                    <FaSortAmountDown id = \"sortDateCompletedAsc\" onClick = {() => {\r\n                        if(document.getElementById('sortDateCompletedAsc').style.color !== 'lime'){\r\n                            document.getElementById('sortDateCompletedAsc').style.color = 'lime';\r\n                                this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\").concat(\"DateCompleted\")\r\n                                });                        \r\n                            if(document.getElementById('sortDateCompletedDesc').style.color === 'yellow'){\r\n                                document.getElementById('sortDateCompletedDesc').style.color = 'black';\r\n                                this.setState({\r\n                                    \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                });\r\n                            }\r\n                        }\r\n                        else{\r\n                            document.getElementById('sortDateCompletedAsc').style.color = 'black';\r\n                            this.setState({\r\n                                   \r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                        }\r\n                        if(document.getElementById('sortDateCompletedAsc').style.color === 'black' && document.getElementById('sortDateCompletedDesc').style.color === 'black'){\r\n                            this.setState({\r\n                                   \r\n                                    desc: this.state.desc.filter(x => x !== \"DateCompleted\"),\r\n                                    asc: this.state.asc.filter(x => x !== \"DateCompleted\")\r\n                                });\r\n                        }\r\n                        this.setState({\r\n                            tasks: fastSort(fastSort(this.state.tasks).by([\r\n                                    {desc: this.state.desc}\r\n                                    ])).by([\r\n                                    {asc: this.state.asc}\r\n                                    ])\r\n                        });\r\n                        \r\n                    }}/> </th>\r\n                    <th className=\"col\">DETAILS</th>\r\n                    {/* <th className=\"col\">SERVICE DESCRIPTION</th> */}\r\n                    <th className=\"col\">QUOTE APPROVED</th>\r\n                    <th className=\"col\">COMPLETED</th>\r\n                    <th className=\"col\">UPDATE TASK</th>\r\n                    <th className=\"col\">REMOVE TASK</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.tasks.filter(x => !isNullOrUndefined(x.quotationIssuedBy)).map((x) => \r\n                <tr key={\"activeList\"+x.id} className=\"table-row\">\r\n                    <td key={\"activeList\"+x.id+\"_quotationNumber\"} className = \"col\">{!isNullOrUndefined(x.quotationIssuedBy) ? \"QN_\" + x.quotationIssuedBy.substring(0,3).toUpperCase() + \"_\" + (x.id + 1023) : \"QN_EMPTY_\" + (x.id + 1023)}</td>\r\n                    <td key={\"activeList\"+x.id+\"_service\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"activeList\"+x.id+\"_service\"}\r\n                          id={\"activeList\"+x.id+\"_service\"}\r\n                          defaultValue={x.service}\r\n                          placeholder=\"Enter name of service\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+x.id+\"_client\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"activeList\"+x.id+\"_client\"}\r\n                          id={\"activeList\"+x.id+\"_client\"}\r\n                          defaultValue={x.client}\r\n                          placeholder=\"Enter client\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+x.id+\"_dateAssigned\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"activeList\"+x.id+\"_dateAssigned\"}\r\n                          id={\"activeList\"+x.id+\"_dateAssigned\"}\r\n                          defaultValue={moment(x.dateAssigned).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter date assigned\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+x.id+\"_dueTime\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"activeList\"+x.id+\"_dueTime\"}\r\n                          id={\"activeList\"+x.id+\"_dueTime\"}\r\n                          defaultValue={moment(x.dueDate).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter due date\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    {/* <td key={\"activeList\"+x.id+\"_serviceUnits\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"activeList\"+x.id+\"_serviceUnits\"}\r\n                          id={\"activeList\"+x.id+\"_serviceUnits\"}\r\n                          defaultValue={x.qty}\r\n                          placeholder=\"Enter service units\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td> */}\r\n                    <td key={\"activeList\"+x.id+\"_dateOfCompletion\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"activeList\"+ x.id + \"_dateCompleted\"}\r\n                          id={\"activeList\"+ x.id + \"_dateCompleted\"}\r\n                          defaultValue={moment(x.dateCompleted).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter date of completion\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+ x.id +\"_details\"}>\r\n                    <Input\r\n                          type=\"textarea\"\r\n                          name={\"activeList\"+ x.id + \"_details\"}\r\n                          id={\"activeList\"+ x.id + \"_details\"}\r\n                          defaultValue={x.details}\r\n                          placeholder=\"Enter status/notes/comments\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    {/* <td key={\"activeList\" + x.id + \"serviceDescription\"}>\r\n                     <span style = {{'fontSize': '10px'}}>{x.serviceDescription}</span>\r\n\r\n                    </td> */}\r\n                    <td key={\"activeList\"+x.id+\"_quoteApproved\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_quoteApproved\"} id={\"activeList\"+x.id+\"_quoteApproved\"} checked = {!isNullOrUndefined(x.quoteApproved) || x.quoteApproved} value={true} onChange = {this.handleInputChange} onClick = {() => {\r\n                                console.log(x.id);\r\n                                var item = {\r\n                                    // dateCompleted: document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value,\r\n                                    // details: document.getElementById(\"activeList\"+ x.id + \"_details\")\r\n                                    quoteApproved: true,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: x.completed\r\n                                    // details: document.getElementById(\"activeList\"+ x.id + \"_details\").value\r\n                                }\r\n                                API.modifyTask(x.id, item)\r\n                                .then(res => {\r\n                                    console.log(\"Quote approved\");\r\n                                    console.log(res.data);\r\n                        //             API.allTasks()\r\n                        //             .then(res2 => {\r\n                        //                 console.log(res2.data);\r\n                        //                 this.setState({\r\n                        //                     tasks: res2.data,\r\n                        //                 });\r\n\r\n                        //             this.setState({\r\n                        //             tasks: fastSort(fastSort(this.state.tasks).by([\r\n                        //             {desc: this.state.desc}\r\n                        //             ])).by([\r\n                        //             {asc: this.state.asc}\r\n                        //             ])\r\n                        // });\r\n                        //             })\r\n                        //             .catch(err => console.log(err));\r\n                \r\n                                    })\r\n                                .catch(err => console.log(err))\r\n                            }}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_quoteApproved\"} id={\"activeList\"+x.id+\"_quoteApproved\"} checked = {!isNullOrUndefined(x.quoteApproved) && !x.quoteApproved} value={false} onChange = {this.handleInputChange} onClick = {() => {\r\n                                console.log(x.id);\r\n                                var item = {\r\n                                    quoteApproved: false,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: x.completed\r\n                                };\r\n                                API.modifyTask(x.id, item)\r\n                                .then(() => {\r\n                                    console.log(\"Quote not approved\");\r\n                                    // API.allTasks()\r\n                                    // .then(res2 => {\r\n                                    //     console.log(res2.data);\r\n                                    //     this.setState({\r\n                                    //         tasks: res2.data\r\n                                    //     });\r\n                                    // })\r\n                                    // .catch(err => console.log(err));\r\n                                })\r\n                                .catch(err => console.log(err));\r\n\r\n                            }} /> {''}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+x.id+\"_completed\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_completed\"} id={\"activeList\"+x.id+\"_completed\"} checked = {!isNullOrUndefined(x.completed) || x.completed} value={true} onChange = {this.handleInputChange} onClick = {() => {\r\n                                console.log(x.id);\r\n                                console.log(document.getElementById(\"activeList\"+x.id+ \"_dateCompleted\").value, document.getElementById(\"activeList\"+ x.id + \"_details\").value);\r\n                                console.log(!isNullOrUndefined(x.quoteApproved))\r\n                                var item = {\r\n                                    quoteApproved: x.quoteApproved,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: true\r\n                                }\r\n                                API.modifyTask(x.id, item)\r\n                                .then(() => {console.log(\"Task completed\");\r\n                                })\r\n                                .catch(err => console.log(err))\r\n                            }}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name={\"activeList\"+x.id+\"_completed\"} id={\"activeList\"+x.id+\"_completed\"} checked={!isNullOrUndefined(x.completed) && !x.completed} value={false} onChange = {this.handleInputChange} onClick = {() => {\r\n                             console.log(x.id);\r\n                                var item = {\r\n                                  \r\n                                    quoteApproved: x.quoteApproved,\r\n                                    dateCompleted: x.dateCompleted,\r\n                                    status_notes_comments: x.status_notes_comments,\r\n                                    completed: false\r\n                                }\r\n                                API.modifyTask(x.id, item)\r\n                                .then(() => console.log(\"Task incomplete\"))\r\n                                .catch(err => console.log(err))   \r\n                            }}/>{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+x.id+\"_updateTask\"}>\r\n                    \r\n                    <Button className = 'btn-success' onClick = {() => {\r\n                        console.log(x.id);\r\n                        console.log(document.getElementById(\"activeList\"+x.id+\"_quoteApproved\").value, document.getElementById(\"activeList\"+x.id+\"_completed\").value);\r\n                                var item = {\r\n                                    service: document.getElementById(\"activeList\"+x.id+\"_service\").value,\r\n                                    client: document.getElementById(\"activeList\"+x.id+\"_client\").value, \r\n                                    dateAssigned: document.getElementById(\"activeList\"+x.id+\"_dateAssigned\").value,  \r\n                                    dueDate: document.getElementById(\"activeList\"+x.id+\"_dueTime\").value, \r\n                                    qty: document.getElementById(\"activeList\"+x.id+\"_serviceUnits\").value, \r\n                                    quoteApproved: !isNullOrUndefined(x.quoteApproved) || x.quoteApproved,\r\n                                    dateCompleted: document.getElementById(\"activeList\"+ x.id + \"_dateCompleted\").value, \r\n                                    details: document.getElementById(\"activeList\"+ x.id + \"_details\").value, \r\n                                    completed: !isNullOrUndefined(x.completed) || x.completed\r\n                                }\r\n                                API.modifyEntireTask(x.id, item)\r\n                                .then(() => {\r\n                                    console.log(\"Task updated\");\r\n                                    this.getCompletedTasks();\r\n                                })\r\n                                .catch(err => console.log(err))   \r\n                    }}> Update Task</Button></td>\r\n                    <td key={\"activeList\"+x.id+\"_removeTask\"}>\r\n                    \r\n                    <Button className = 'btn-danger' onClick = {() => {\r\n                        console.log(x);\r\n                        API.deleteTask(x.id)\r\n                        .then(() => {\r\n                            console.log(x.id ,\"deleted\");\r\n                            this.displayAlert();\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                    }}> Remove Task</Button></td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n            </table>\r\n            <br/><br/>\r\n            \r\n           </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Admin_ICABOB;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CONSTANTS from \"./constants/routes.js\";\nimport ServiceRequestForm from \"./Pages/ServiceRequestForm/ServiceRequestForm\";\nimport TaskList from \"./Pages/TaskList/TaskList\";\nimport Admin_IC from \"./Pages/Admin_IC/Admin\";\nimport {Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem} from \"reactstrap\";\nimport routes from \"./constants/routes\";\nimport Admin_ICABOB from \"./Pages/Admin_ICABOB/Admin_ICABOB\";\n// import firebase from './firebase.js';\n\n\n// import Login from \"./Pages/Login/Login\";\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  //Toggling Navbar\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render(){\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">\n            <img src=\"./logo.png\" />\n            <h1 className=\"float-right\">&nbsp;Insure Compliance</h1>{\" \"}\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/\">Service Request Form</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/tasklist\">Task List</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                  <NavItem>\n                    <NavLink href=\"/adminIC\">Admin_IC</NavLink>\n                  </NavItem>\n                  </DropdownItem>\n                  <DropdownItem>\n                  <NavItem>\n                    <NavLink href=\"/adminICABOB\">Admin_ICABOB</NavLink>\n                  </NavItem>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <Router basename=\"/\">\n        <Switch>\n        <Route exact={true} path={routes.SERVICE_FORM} component={ServiceRequestForm} />\n        {/* <Route exact={true} path={routes.LOGIN} component={LoginPage} />\n        <Route exact={true} path={routes.REGISTER} component={RegisterPage} /> */}\n        <Route exact={true} path={routes.TASK_LIST} component={TaskList} />\n        <Route exact={true} path={routes.ADMIN_IC} component = {Admin_IC}/>\n        <Route exact={true} path={routes.ADMIN_ICABOB} component= {Admin_ICABOB} />\n        </Switch>\n        </Router>\n    </div>\n  ) \n  \n}\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n  \n\n"],"sourceRoot":""}