{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\src\\\\Pages\\\\ServiceRequestForm\\\\ServiceRequestForm.js\";\nimport React from \"react\";\n/*Imports for modals from reactstrap */\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from \"reactstrap\";\n/*Imports required for Form Group */\n\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { Container } from \"reactstrap\";\n/*Import tooltip or popover from reactstrap*/\n//import { Tooltip } from \"reactstrap\";\n\nimport { Popover, PopoverHeader, PopoverBody } from \"reactstrap\"; //Importing CSS for body, logo and table of the pdf generator\n\nimport \"./style.css\";\n/*Imports required for React Calendar */\n\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\nimport \"react-datepicker/dist/react-datepicker.css\"; //Validation icons\n\nimport { FaPlus, FaCheckCircle, FaTimesCircle, FaTrash, FaTimes } from \"react-icons/fa\"; //Importing cities and states for countries\n\nimport cities from \"../../utils/cities.json\";\nimport states from \"../../utils/us-states.json\";\nimport services from \"../../utils/services.json\"; //Connection to backend\n\nimport API from \"../../utils/API\"; //imports for PDF generation\n\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nwindow.html2canvas = html2canvas;\nvar styles = {\n  pdf: {\n    padding: \"10px 10px\",\n    height: \"180mm\",\n    width: \"200mm\"\n  },\n  h4: {\n    color: \"#000\"\n  },\n  logo: {\n    float: \"right\",\n    height: \"100px\",\n    width: \"300px\"\n  },\n  info: {\n    float: \"left\"\n  },\n  content: {\n    clear: \"both\"\n  },\n  quotation: {\n    fontFamily: \"Andika\",\n    color: \"#009999\"\n  },\n  billedTo: {\n    float: \"left\"\n  },\n  quote: {\n    float: \"right\"\n  },\n  FaPlus: {\n    color: \"#339933\"\n  },\n  FaCheck: {\n    color: \"#339933\"\n  },\n  FaTimes: {\n    color: \"#cc3300\"\n  },\n  note: {\n    fontFamily: \"Palatino Linotype\",\n    fontSize: \"0.75em\",\n    fontWeight: \"500\"\n  },\n  notify: {\n    color: \"#228B22\",\n    display: \"none\",\n    fontWeight: \"700\"\n  },\n  removeContactNotification: {\n    color: \"#E82C0C\",\n    display: \"none\",\n    fontWeight: \"700\"\n  }\n}; //Initialized outside to add new equipments on the fly\n\nvar equipmentsAlwaysOnSite = [\"Laptop\", \"projectorScreen\", \"Table\", \"trainingKit\", \"forkliftTrainingKit\", \"CPRmannequins\", \"firstAidAEDKit\", \"Handouts\"];\nvar equipmentIDs = [\"Laptop\", \"projectorScreen\", \"Table\", \"trainingKit\", \"forkliftTrainingKit\", \"CPRmannequins\", \"firstAidAEDKit\", \"Handouts\"]; //Unique Companies\n\nvar uniqueCompanies = []; //Get employee names from API.js\n\nvar employees = []; //Get company Details, contacts, locations\n\nvar getCompanyDetails = [];\nvar getCompanyContacts = [];\nvar getCompanyLocations = []; //Get all US states\n\nvar us_states = [];\n\nfor (var key in states) {\n  us_states.push(states[key]);\n}\n\nfunction getInitial(state) {\n  for (var _key in states) {\n    if (states[_key] === state) {\n      return _key;\n    }\n  }\n}\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this, props)); //State variables for form elements and their validation\n\n    _this.componentDidMount = function () {\n      _this.getEmployees();\n\n      _this.getCompanies();\n\n      document.getElementById('addEquipment').style.display = \"none\";\n    };\n\n    _this.componentWillMount = function () {\n      API.getTopicBasedEquipments().then(function (res) {\n        _this.setState({\n          topicsVsEquipments: res.data\n        });\n\n        console.log(\"topic vs equipments loaded!\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      API.getListOfServices().then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          listOfServices: res.data\n        });\n\n        console.log(\"services list loaded!\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getPriceAndQuantity = function () {\n      var result = _this.state.topicsVsEquipments.filter(function (element) {\n        return element.topic === _this.state.topic;\n      })[0];\n\n      if (result !== {} && _this.state.topic.trim() !== \"\") {\n        document.getElementById(\"numServiceUnits\").value = result.serviceUnits;\n        document.getElementById(\"durationInMin\").value = result.DurationInMin;\n        document.getElementById(\"costForService\").value = result.costOfService;\n\n        _this.setState({\n          service: \"Training - \" + _this.state.topic,\n          Laptop: _this.state.Laptop || result.Laptop,\n          projectorScreen: _this.state.projectorScreen || result.projectorScreen,\n          Table: _this.state.Table || result.Table,\n          trainingKit: _this.state.trainingKit || result.trainingKit,\n          forkliftTrainingKit: _this.state.forkliftTrainingKit || result.forkliftTrainingKit,\n          CPRmannequins: _this.state.CPRmannequins || result.CPRmannequins,\n          firstAidAEDKit: _this.state.firstAidAEDKit || result.firstAidAEDKit,\n          RespiratorFitTestKit: _this.state.RespiratorFitTestKit || result.RespiratorFitTestKit,\n          Handouts: _this.state.Handouts || result.Handouts,\n          costForService: result.costOfService\n        });\n      }\n\n      var result2 = _this.state.listOfServices.filter(function (element) {\n        return element.service === _this.state.service;\n      })[0];\n\n      if (result2 !== undefined && _this.state.service.trim() !== \"\" && _this.state.service !== \"Training\") {\n        document.getElementById(\"numServiceUnits\").value = result2.qty;\n        document.getElementById(\"costForService\").value = result2.cost;\n\n        _this.setState({\n          service: _this.state.service,\n          showTopics: false,\n          description: result2.description\n        });\n      }\n    };\n\n    _this.getAvailableEquipments = function () {\n      //console.log(this.state.companyName);\n      var checkedEquipments = [];\n      var row = {};\n\n      if (_this.state.companyName.trim() !== \"\") {\n        for (var i = 0; i < _this.state.topicsVsEquipments.length; ++i) {\n          if (_this.state.topicsVsEquipments[i].topic === _this.state.topic) {\n            row = _this.state.topicsVsEquipments[i];\n            break;\n          }\n        }\n      }\n    };\n\n    _this.addContact = function () {\n      var item = {\n        newCompanyName: _this.state.newCompanyName,\n        newContactName: _this.state.newContactName,\n        newContactEmail: _this.state.newContactEmail,\n        newContactOfficePhone: _this.state.newContactOfficePhone,\n        newContactMobilePhone: _this.state.newContactMobilePhone,\n        newContactMobilePhoneAlternate: _this.state.newContactMobilePhoneAlternate,\n        mainContact: _this.state.mainContact\n      };\n      API.newCompanyContact(item).then(function (res) {\n        console.log(res);\n        document.getElementById(\"newContactPhone\").reset();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      document.getElementById(\"notifyContactAdded\").style.display = \"block\";\n      document.getElementById(\"removeContactNotification\").style.display = \"block\";\n    };\n\n    _this.addLocation = function () {\n      var item = {\n        newCompanyName: _this.state.newCompanyName,\n        newContactStreetAddress: _this.state.newContactStreetAddress,\n        newContactCity: _this.state.newContactCity,\n        newContactState: _this.state.newContactState,\n        newContactZIP: _this.state.newContactZIP,\n        newContactCountry: _this.state.newContactCountry,\n        mainLocation: _this.state.mainLocation\n      };\n      API.newCompanyLocation(item).then(function (res) {\n        console.log(res);\n        document.getElementById(\"newContactLocation\").reset();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      document.getElementById(\"notifyLocationAdded\").style.display = \"block\";\n      document.getElementById(\"removeLocationNotification\").style.display = \"block\";\n    };\n\n    _this.addService = function () {\n      var item = {\n        companyName: _this.state.companyName,\n        service: _this.state.service,\n        billable: _this.state.billableService,\n        qty: document.getElementById(\"numServiceUnits\").value === undefined ? 0 : parseFloat(document.getElementById(\"numServiceUnits\").value),\n        alternateName: _this.state.alternateName.length === 0 ? _this.state.service : _this.state.alternateName,\n        cost: document.getElementById(\"costForService\").value === undefined ? 0 : parseFloat(document.getElementById(\"costForService\").value),\n        serviceDescription: _this.state.description\n      };\n      console.log(item);\n      API.newServiceRequest(item).then(function (res) {\n        console.log(res); // this.setState({\n        //   topic: \"\",\n        //   service: \"\",\n        //   description: \"\",\n        //   costForService: 0,\n        //   billable: false,\n        //   alternateName: this.state.topic\n        // });\n      }).catch(function (err) {\n        return console.log(err);\n      }); //Clear all fields to add further services\n\n      document.getElementById(\"addService\").reset();\n    };\n\n    _this.saveServices = function () {\n      API.getServiceRequests().then(function (res) {\n        if (_this.state.service.trim() !== \"\") {\n          _this.addService();\n        }\n\n        _this.setState({\n          requestedServices: res.data\n        });\n\n        _this.setState({\n          requestedServiceRows: _this.getServices()\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      _this.toggleServiceModal();\n    };\n\n    _this.getServices = function () {\n      return _this.state.requestedServices.filter(function (x) {\n        return x.billable === true;\n      }).map(function (x, index) {\n        return React.createElement(\"tr\", {\n          key: \"serviceRequest\" + (index + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, x.alternateName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          },\n          __self: this\n        }, x.qty), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }, x.cost.toFixed(2)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, \"$\", (x.qty * x.cost).toFixed(2)), _this.setState({\n          totalCost: _this.state.totalCost + x.qty * x.cost * x.billable\n        }));\n      });\n    };\n\n    _this.removeServices = function () {\n      var result = [];\n      API.getServiceRequests().then(function (res) {\n        _this.setState({\n          requestedServices: res.data\n        });\n\n        console.log(\"remove services\", _this.state.requestedServices);\n        result = _this.state.requestedServices.map(function (x, index) {\n          return React.createElement(\"tr\", {\n            key: \"serviceRequest\" + (index + 1),\n            id: \"serviceRequest\" + (index + 1),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 449\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 450\n            },\n            __self: this\n          }, x.alternateName), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 451\n            },\n            __self: this\n          }, x.qty), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 452\n            },\n            __self: this\n          }, x.cost.toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 453\n            },\n            __self: this\n          }, \"$\", (x.qty * x.cost).toFixed(2)), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 454\n            },\n            __self: this\n          }, React.createElement(FaTrash, {\n            style: {\n              'color': 'red'\n            },\n            onClick: function onClick() {\n              API.deleteService(x.alternateName).then(function (res) {\n                _this.setState({\n                  totalCost: _this.state.totalCost - x.qty * x.cost * x.billable\n                });\n              }).catch(function (err) {\n                return console.log(err);\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 454\n            },\n            __self: this\n          })));\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      return result;\n    };\n\n    _this.getCompanies = function () {\n      API.getCompany().then(function (res) {\n        for (var i = 0; i < res.data.length; ++i) {\n          if (uniqueCompanies.indexOf(res.data[i].companyName) === -1 && res.data[i].companyName.trim() !== \"\") {\n            uniqueCompanies.push(res.data[i].companyName);\n          }\n        }\n\n        _this.setState({\n          companyNames: uniqueCompanies\n        });\n\n        console.log(\"Companies table loaded\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.saveCompany = function () {\n      _this.addContact();\n\n      _this.addLocation();\n\n      var item = {\n        companyName: _this.state.newCompanyName,\n        newCompanyName: _this.state.newCompanyName,\n        newProducer: _this.state.newProducer,\n        newAgency: _this.state.newAgency,\n        newContractClient: _this.state.newContractClient,\n        Laptop: _this.state.Laptop,\n        projectorScreen: _this.state.projectorScreen,\n        Table: _this.state.Table,\n        trainingKit: _this.state.trainingKit,\n        forkliftTrainingKit: _this.state.forkliftTrainingKit,\n        CPRmannequins: _this.state.CPRmannequins,\n        firstAidAEDKit: _this.state.firstAidAEDKit,\n        Handouts: _this.state.Handouts\n      };\n      API.newCompany(item).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      API.postCompanyEquipments(item).then(function (res) {\n        return console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      _this.getCompanies();\n\n      _this.toggleModal();\n\n      console.log(_this.state.newCompanyName, _this.state.companyName);\n    };\n\n    _this.handlePDF = function () {\n      var companyName = _this.state.companyName;\n      var startDate = _this.state.startDate;\n      var divHeight = document.getElementById(\"capture\").offsetHeight;\n      var divWidth = document.getElementById(\"capture\").offsetWidth;\n      return html2canvas(document.getElementById(\"capture\"), {\n        scale: 0.85,\n        dpi: 278\n      }).then(function (canvas) {\n        var wid = divWidth;\n        var hgt = divHeight;\n        var img = canvas.toDataURL(\"image/png\", wid = canvas.width, hgt = canvas.height);\n        var hratio = hgt / wid;\n        var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n        var width = doc.internal.pageSize.width;\n        var height = width * hratio;\n        doc.addImage(img, \"JPEG\", 20, 25, width, height);\n        console.log(startDate.toDate());\n        doc.save(companyName + \"-Quotation-\" + startDate.format(\"MM/DD/YYYY\") + \".pdf\");\n      });\n    };\n\n    _this.handleCompanyName = function () {\n      if (_this.state.companyName.length < 2 && _this.state.newCompanyName.length < 2) {\n        _this.setState({\n          validCompanyName: false\n        });\n      } else {\n        _this.setState({\n          validCompanyName: true\n        });\n      }\n\n      API.getCompanyDetails(_this.state.companyName).then(function (res) {\n        getCompanyDetails = res.data;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n\n      if (_this.state.companyName.trim() !== \"\") {\n        API.getCompanyContacts(_this.state.companyName).then(function (res) {\n          getCompanyContacts = res.data;\n\n          _this.setState({\n            companyMobileContacts: res.data.filter(function (x) {\n              return x.contactMobilePhone !== \"\";\n            }),\n            companyOfficeContacts: res.data.filter(function (x) {\n              return x.contactOfficePhone !== \"\";\n            })\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n        API.getCompanyLocations(_this.state.companyName).then(function (res) {\n          getCompanyLocations = res.data;\n\n          _this.setState({\n            companyLocations: res.data\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n\n      _this.getAvailableEquipments();\n\n      API.getCompanyEquipments(_this.state.companyName).then(function (res) {\n        if (res.data.length > 0 && _this.state.companyName.length > 0) {\n          var result = res.data[0];\n\n          _this.setState({\n            Laptop: _this.state.Laptop || !result.Laptop,\n            projectorScreen: _this.state.projectorScreen || !result.projectorScreen,\n            Table: _this.state.Table || !result.Table,\n            trainingKit: _this.state.trainingKit || !result.trainingKit,\n            forkliftTrainingKit: _this.state.forkliftTrainingKit || !result.forkliftTrainingKit,\n            CPRmannequins: _this.state.CPRmannequins || !result.CPRmannequins,\n            firstAidAEDKit: _this.state.firstAidAEDKit || !result.firstAidAEDKit,\n            RespiratorFitTestKit: _this.state.RespiratorFitTestKit || !result.RespiratorFitTestKit,\n            Handouts: _this.state.Handouts || !result.Handouts\n          });\n\n          document.getElementById('Laptop').checked = _this.state.Laptop;\n          document.getElementById('projectorScreen').checked = _this.state.projectorScreen;\n          document.getElementById('Table').checked = _this.state.Table;\n          document.getElementById('trainingKit').checked = _this.state.trainingKit;\n          document.getElementById('forkliftTrainingKit').checked = _this.state.forkliftTrainingKit;\n          document.getElementById('CPRmannequins').checked = _this.state.CPRmannequins;\n          document.getElementById('firstAidAEDKit').checked = _this.state.firstAidAEDKit;\n          document.getElementById('RespiratorFitTestKit').checked = _this.state.RespiratorFitTestKit;\n          document.getElementById('Handouts').checked = _this.state.Handouts;\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.validatePhone = function () {\n      var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\n\n      _this.setState({\n        validPhone: re.test(_this.state.contactPhone) || isNaN(_this.state.contactPhone)\n      });\n    };\n\n    _this.validateCellPhone = function () {\n      var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\n\n      _this.setState({\n        validCellPhone: re.test(_this.state.contactCellPhone) || isNaN(_this.state.contactPhone)\n      });\n    };\n\n    _this.validateEmail = function () {\n      var re = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n      _this.setState({\n        validEmail: re.test(String(_this.state.contactEmail).toLowerCase())\n      });\n    };\n\n    _this.validateZIP = function () {\n      var zipRegex = RegExp(\"^[0-9]{5}(?:-[0-9]{4})?$\");\n\n      _this.setState({\n        validZIP: zipRegex.test(_this.state.zip)\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        requestedServiceRows: _this.getServices()\n      });\n\n      var item = {\n        companyName: _this.state.companyName,\n        startDate: _this.state.startDate,\n        validThru: _this.state.validThru,\n        paymentBy: _this.state.paymentForTraining,\n        producer: _this.state.producer,\n        contactPerson: _this.state.contactName,\n        contactPhone: _this.state.contactPhone,\n        contactCellPhone: _this.state.contactCellPhone,\n        contactEmail: _this.state.contactEmail,\n        contactState: _this.state.contactState,\n        contactStreetAddress: _this.state.contactStreetAddress,\n        contactCity: _this.state.contactCity,\n        contactZip: _this.state.contactZip,\n        contactCountry: _this.state.country,\n        //Equipment needed at site\n        Laptop: _this.state.Laptop,\n        projectorScreen: _this.state.projectorScreen,\n        Table: _this.state.Table,\n        trainingKit: _this.state.trainingKit,\n        forkliftTrainingKit: _this.state.forkliftTrainingKit,\n        CPRmannequins: _this.state.CPRmannequins,\n        firstAidAEDKit: _this.state.firstAidAEDKit,\n        RespiratorFitTestKit: _this.state.RespiratorFitTestKit,\n        Handouts: _this.state.Handouts,\n        quotationIssuedBy: _this.state.quotationIssuedBy,\n        instructions: _this.state.instructions\n      };\n      API.postService(item).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          quotationNumber: res.data.quoteNumber,\n          quotationIssuedBy: res.data.quotationIssuedBy\n        });\n\n        API.getServiceRequests().then(function (res1) {\n          console.log(res.data.quotationIssuedBy);\n          console.log(res1);\n          API.addTask({\n            quotationNumber: _this.state.quotationNumber,\n            service: \"Approve quote \" + _this.state.quotationNumber,\n            client: _this.state.companyName,\n            instructions: _this.state.instructions,\n            startDate: _this.state.startDate,\n            //sort\n            validThru: _this.state.validThru,\n            quotationIssuedBy: res.data.quotationIssuedBy\n          }).then(function (res2) {\n            console.log(res2.data);\n\n            if (res1.data.length > 0) {\n              for (var i = 0; i < res1.data.length; ++i) {\n                API.addTask({\n                  quotationNumber: _this.state.quotationNumber,\n                  service: res1.data[i].service,\n                  client: res1.data[i].companyName,\n                  instructions: _this.state.instructions,\n                  startDate: _this.state.startDate,\n                  //sort\n                  validThru: _this.state.validThru,\n                  qty: res1.data[i].qty,\n                  serviceDescription: res1.data[i].serviceDescription,\n                  quotationIssuedBy: res.data.quotationIssuedBy\n                }).then(function (res3) {\n                  console.log(\"Added a task\");\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n              }\n            }\n\n            console.log(\"Deleted rows\");\n            console.log(\"Added a task to accept quote as well!\");\n            document.getElementById(\"serviceRequestForm\").reset();\n\n            _this.setState({\n              startDate: moment(),\n              validThru: moment().add(90, \"days\").format(\"YYYY-MM-DD\"),\n              newContractClient: false,\n              companyName: \"\",\n              newCompanyName: \"\",\n              companyNames: services.companyName,\n              country: \"United States\",\n              topic: \"\",\n              service: \"\",\n              producer: \"\",\n              sameLocAsTraining: false,\n              validCompanyName: false,\n              validPhone: false,\n              validEmail: false,\n              validCellPhone: false,\n              validZIP: false,\n              contactName: \"\",\n              contactPhone: \"\",\n              contactCellPhone: \"\",\n              contactEmail: \"\",\n              state: \"\",\n              streetAddress: \"\",\n              city: \"\",\n              zip: \"\",\n              contactStreetAddress: \"\",\n              contactZip: \"\",\n              contactCountry: \"United States\",\n              contactState: \"\",\n              contactCity: \"\",\n              //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\n              equipmentsSelectedSite: [],\n              equipmentsSelectedTraining: [],\n              //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\n              equipments: [\"Laptop\", \"Projector Screen\", \"Table\", \"Training Kit (Green Duffle Bag)\", \"Forklift Training Kit (Grey Duffle Bag)\", \"CPR mannequins\", \"First Aid & AED Kit (Red Backpack)\", \"Handouts\"],\n              Laptop: false,\n              projectorScreen: false,\n              Table: false,\n              trainingKit: false,\n              forkliftTrainingKit: false,\n              CPRmannequins: false,\n              firstAidAEDKit: false,\n              RespiratorFitTestKit: false,\n              Handouts: false,\n              active: true,\n              addOn: \"\",\n              error: {},\n              modal: false,\n              quotationIssuedBy: \"\",\n              instructions: \"\",\n              serviceModal: false,\n              billableService: true,\n              alternateName: \"\",\n              costForService: 0.0,\n              requestedServices: [],\n              requestedServiceRows: [],\n              viewServiceRows: [],\n              totalCost: 0,\n              viewServiceModal: false,\n              showTopics: false,\n              popoverOpen: false,\n              description: \"\",\n              companyMobileContacts: [],\n              companyOfficeContacts: [],\n              companyLocations: [],\n              listOfServices: [],\n              additionalEquipments: [],\n              quotationNumber: \"\"\n            });\n\n            API.deleteServiceRequests().then(function () {\n              console.log(\"Refresh services table\");\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n\n      _this.validateEmail();\n\n      _this.validateZIP();\n\n      _this.validatePhone();\n\n      _this.validateCellPhone();\n\n      _this.handleCompanyName();\n\n      _this.setState({\n        active: true //((this.state.validCellPhone !== \"undefined\" && this.state.validCellPhone === true) || (this.state.validEmail !== \"undefined\" && this.state.validEmail === true) || (this.state.validPhone !== \"undefined\" && this.state.validPhone === true)) || this.state.validZIP && this.state.validCompanyName\n\n      });\n    };\n\n    _this.toggleViewServicesModal = function () {\n      _this.setState({\n        viewServiceModal: !_this.state.viewServiceModal,\n        viewServiceRows: _this.removeServices() != undefined ? _this.removeServices() : []\n      });\n    };\n\n    _this.viewServiceModal = function () {\n      _this.setState({\n        viewServiceRows: _this.removeServices() != undefined ? _this.removeServices() : []\n      });\n    };\n\n    _this.state = {\n      startDate: moment(),\n      validThru: moment().add(90, \"days\").format(\"YYYY-MM-DD\"),\n      newContractClient: false,\n      companyName: \"\",\n      newCompanyName: \"\",\n      companyNames: services.companyName,\n      country: \"United States\",\n      topic: \"\",\n      service: \"\",\n      producer: \"\",\n      sameLocAsTraining: false,\n      validCompanyName: false,\n      validPhone: false,\n      validEmail: false,\n      validCellPhone: false,\n      validZIP: false,\n      contactName: \"\",\n      contactPhone: \"\",\n      contactCellPhone: \"\",\n      contactEmail: \"\",\n      state: \"\",\n      streetAddress: \"\",\n      city: \"\",\n      zip: \"\",\n      contactStreetAddress: \"\",\n      contactZip: \"\",\n      contactCountry: \"United States\",\n      contactState: \"\",\n      contactCity: \"\",\n      //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\n      equipmentsSelectedSite: [],\n      equipmentsSelectedTraining: [],\n      //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\n      equipments: [\"Laptop\", \"Projector Screen\", \"Table\", \"Training Kit (Green Duffle Bag)\", \"Forklift Training Kit (Grey Duffle Bag)\", \"CPR mannequins\", \"First Aid & AED Kit (Red Backpack)\", \"Handouts\"],\n      Laptop: false,\n      projectorScreen: false,\n      Table: false,\n      trainingKit: false,\n      forkliftTrainingKit: false,\n      CPRmannequins: false,\n      firstAidAEDKit: false,\n      RespiratorFitTestKit: false,\n      Handouts: false,\n      active: true,\n      addOn: \"\",\n      error: {},\n      modal: false,\n      quotationIssuedBy: \"\",\n      instructions: \"\",\n      serviceModal: false,\n      billableService: true,\n      alternateName: \"\",\n      costForService: 0.0,\n      requestedServices: [],\n      requestedServiceRows: [],\n      viewServiceRows: [],\n      totalCost: 0,\n      viewServiceModal: false,\n      showTopics: false,\n      popoverOpen: false,\n      description: \"\",\n      companyMobileContacts: [],\n      companyOfficeContacts: [],\n      companyLocations: [],\n      listOfServices: [],\n      additionalEquipments: [],\n      quotationNumber: \"\"\n    };\n    _this.validateEmail = _this.validateEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validatePhone = _this.validatePhone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateCellPhone = _this.validateCellPhone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateZIP = _this.validateZIP.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCompanyName = _this.handleCompanyName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePDF = _this.handlePDF.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getEmployees = _this.getEmployees.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveCompany = _this.saveCompany.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addContact = _this.addContact.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addLocation = _this.addLocation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCompanies = _this.getCompanies.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addService = _this.addService.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleServiceModal = _this.toggleServiceModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleViewServicesModal = _this.toggleViewServicesModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getPriceAndQuantity = _this.getPriceAndQuantity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getServices = _this.getServices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveServices = _this.saveServices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeServices = _this.removeServices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopOver = _this.togglePopOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"getEmployees\",\n    //Getting employees from server\n    value: function getEmployees() {\n      API.getEmployees().then(function (res) {\n        for (var i = 0; i < res.data.length; ++i) {\n          employees.push(res.data[i].EMP_NAME);\n        }\n\n        console.log(\"employees table loaded!\");\n      });\n    } //Generates pdf\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n      this.setState({\n        validThru: moment(date).add(90, \"days\").format(\"YYYY-MM-DD\")\n      });\n      document.getElementById(\"validThru\").value = moment(this.state.validThru).format(\"YYYY-MM-DD\");\n    }\n  }, {\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"toggleServiceModal\",\n    value: function toggleServiceModal() {\n      this.setState({\n        serviceModal: !this.state.serviceModal\n      });\n    }\n  }, {\n    key: \"togglePopOver\",\n    value: function togglePopOver() {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"./open3.jpg\",\n        alt: \"Construction workers\",\n        className: \"openingImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      }), React.createElement(Container, {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }, React.createElement(Form, {\n        id: \"serviceRequestForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"quotationIssuedBy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, \"Quotation Issued By\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"quotationIssuedBy\",\n        id: \"quotationIssuedBy\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }, \"Choose Quotation Issued By\"), employees.map(function (x, index) {\n        return React.createElement(\"option\", {\n          key: \"emp\" + index,\n          value: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917\n          },\n          __self: this\n        }, x);\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"companyName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"companyName\",\n        id: \"companyNameSelect\",\n        onChange: this.handleInputChange,\n        onClick: this.handleCompanyName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }, \"Select company name\"), services.companyNames.map(function (option) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 935\n          },\n          __self: this\n        }, option);\n      })), React.createElement(Label, {\n        for: \"newCompanyName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }, \"New Company?\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940\n        },\n        __self: this\n      }, \"Add new company\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggleModal,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948\n        },\n        __self: this\n      }, \"Enter new company details\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newCompanyName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newCompanyName\",\n        id: \"newCompanyName\",\n        placeholder: \"Enter company name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newProducer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      }, \"Producer\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newProducer\",\n        id: \"newProducer\",\n        placeholder: \"Enter producer's name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newAgency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }, \"Agency\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newAgency\",\n        id: \"newAgency\",\n        placeholder: \"Enter agency's name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newContractClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }, \"Contract Clients\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"newContractClient\",\n        name: \"newContractClient\",\n        value: this.state.newContractClient,\n        defaultChecked: this.state.newContractClient,\n        onClick: function onClick() {\n          return _this2.setState({\n            newContractClient: !_this2.state.newContractClient\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }), React.createElement(Form, {\n        id: \"newContactPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newContactName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      }, \"Contact Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactName\",\n        id: \"newContactName\",\n        placeholder: \"Enter contact's name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newContactEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011\n        },\n        __self: this\n      }, \"Contact Email ID\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactEmail\",\n        id: \"newContactEmail\",\n        placeholder: \"Enter contact's email ID\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newContactOfficeNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      }, \"Contact Office Number\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactOfficePhone\",\n        id: \"newContactOfficePhone\",\n        placeholder: \"Enter contact's office phone number\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newContactMobilePhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, \"Contact Mobile Number\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactMobilePhone\",\n        id: \"newContactMobilePhone\",\n        placeholder: \"Enter contact's mobile number\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newContactMobileAlternate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }, \"Contact Alternate Mobile Number\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactMobilePhoneAlternate\",\n        id: \"newContactMobilePhoneAlternate\",\n        placeholder: \"Enter contact's alternate mobile number\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"mainContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057\n        },\n        __self: this\n      }, \"Is this the main contact?\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"check\",\n        name: \"mainContact\",\n        value: this.state.mainContact,\n        defaultChecked: this.state.mainContact,\n        onClick: function onClick() {\n          return _this2.setState({\n            mainContact: !_this2.state.mainContact\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        style: styles.note,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075\n        },\n        __self: this\n      }, \"Click on the plus icon to add more contacts\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1078\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: styles.FaPlus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        onClick: this.addContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"notifyContactAdded\",\n        style: styles.notify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083\n        },\n        __self: this\n      }, \"New contact has been added!\"), React.createElement(\"div\", {\n        id: \"removeContactNotification\",\n        style: styles.removeContactNotification,\n        onClick: function onClick() {\n          document.getElementById(\"removeContactNotification\").style.display = \"none\";\n          document.getElementById(\"notifyContactAdded\").style.display = \"none\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086\n        },\n        __self: this\n      }, \"x\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103\n        },\n        __self: this\n      }), React.createElement(Form, {\n        id: \"newContactLocation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, \"Company Locations\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"mainLocation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, \"Is this the main office location?\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"check\",\n        name: \"mainLocation\",\n        value: this.state.mainLocation,\n        defaultChecked: this.state.mainLocation,\n        onClick: function onClick() {\n          return _this2.setState({\n            mainLocation: !_this2.state.mainLocation\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newContactStreetAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, \"Street Address\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactStreetAddress\",\n        id: \"newContactStreetAddress\",\n        placeholder: \"Enter street address\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newContactCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactCity\",\n        id: \"newContactCity\",\n        placeholder: \"Enter name of city\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newContactState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142\n        },\n        __self: this\n      }, \"State\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactState\",\n        id: \"newContactState\",\n        placeholder: \"Enter name of state\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newContactZIP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }, \"ZIP code\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactZIP\",\n        id: \"newContactZIP\",\n        placeholder: \"Enter ZIP code\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newContactCountry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, \"Country\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"newContactCountry\",\n        id: \"newContactCountry\",\n        placeholder: \"Enter name of country\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        style: styles.note,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166\n        },\n        __self: this\n      }, \"Click on the plus icon to add more locations\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: styles.FaPlus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170\n        },\n        __self: this\n      }, React.createElement(FaPlus, {\n        onClick: this.addLocation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171\n        },\n        __self: this\n      }), \" \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"notifyLocationAdded\",\n        style: styles.notify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174\n        },\n        __self: this\n      }, \"New location has been added!\"), React.createElement(\"div\", {\n        id: \"removeLocationNotification\",\n        style: styles.removeContactNotification,\n        onClick: function onClick() {\n          document.getElementById(\"removeLocationNotification\").style.display = \"none\";\n          document.getElementById(\"notifyLocationAdded\").style.display = \"none\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177\n        },\n        __self: this\n      }, \"x\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194\n        },\n        __self: this\n      }), React.createElement(Form, {\n        id: \"equipmentsAlwaysAvailable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"equipmentsAlwaysAvailable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197\n        },\n        __self: this\n      }, \"Equipments already available on site\"), equipmentsAlwaysOnSite.map(function (x, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1201\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: equipmentIDs[index],\n          name: x,\n          onClick: _this2.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1202\n          },\n          __self: this\n        }), \" \", x);\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.saveCompany,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215\n        },\n        __self: this\n      }, \"Save company\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218\n        },\n        __self: this\n      }, \"Cancel\")))), this.state.validCompanyName ? React.createElement(FaCheckCircle, {\n        style: styles.FaCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226\n        },\n        __self: this\n      }) : React.createElement(FaTimesCircle, {\n        style: styles.FaTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1231\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dateOfRequest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232\n        },\n        __self: this\n      }, \"Date of Request\"), React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        name: \"startDate\",\n        placeholder: \"Enter date of request\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"validThru\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1241\n        },\n        __self: this\n      }, \"Request valid until (YYYY-MM-DD)\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"validThru\",\n        id: \"validThru\",\n        placeholder: \"Quote valid till YYYY-MM-DD\",\n        value: this.state.validThru,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"paymentForTraining\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252\n        },\n        __self: this\n      }, \"Who is paying for the Service?\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"paymentForTraining\",\n        id: \"paymentForTraining\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        name: \"paymentForTraining\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261\n        },\n        __self: this\n      }, \"Choose an option\"), React.createElement(\"option\", {\n        name: \"paymentForTraining\",\n        value: \"Producer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264\n        },\n        __self: this\n      }, \"Producer\"), React.createElement(\"option\", {\n        name: \"paymentForTraining\",\n        value: \"Contract\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267\n        },\n        __self: this\n      }, \"Contract\"), React.createElement(\"option\", {\n        name: \"paymentForTraining\",\n        value: \"Direct Sale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270\n        },\n        __self: this\n      }, \"Direct Sale\"), React.createElement(\"option\", {\n        name: \"paymentForTraining\",\n        value: \"ARCA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273\n        },\n        __self: this\n      }, \"ARCA\")), this.state.paymentForTraining ? React.createElement(FaCheckCircle, {\n        style: styles.FaCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278\n        },\n        __self: this\n      }) : React.createElement(FaTimesCircle, {\n        style: styles.FaTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"producer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284\n        },\n        __self: this\n      }, \"Producer\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"producer\",\n        id: \"producer\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291\n        },\n        __self: this\n      }, \"Choose producer\"), getCompanyDetails.map(function (x) {\n        return React.createElement(\"option\", {\n          name: \"producer\",\n          value: x.producer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1293\n          },\n          __self: this\n        }, x.producer);\n      })), React.createElement(Label, {\n        for: \"producer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1298\n        },\n        __self: this\n      }, \"Producer not listed? Enter here\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"producer\",\n        id: \"producer\",\n        placeholder: \"Enter other producer's name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299\n        },\n        __self: this\n      })), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"topic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308\n        },\n        __self: this\n      }, \"Add Services\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleServiceModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310\n        },\n        __self: this\n      }, \"Add Services\"), React.createElement(Modal, {\n        isOpen: this.state.serviceModal,\n        toggle: this.toggleServiceModal,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleServiceModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318\n        },\n        __self: this\n      }, \"Add Services\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1321\n        },\n        __self: this\n      }, React.createElement(Form, {\n        id: \"addService\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"service\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }, \"Services\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"service\",\n        id: \"service\",\n        onChange: this.handleInputChange,\n        onClick: function onClick() {\n          if (_this2.state.service === \"Training\") {\n            _this2.setState({\n              showTopics: true\n            });\n          } else {\n            _this2.setState({\n              showTopics: false\n            });\n          }\n\n          _this2.getPriceAndQuantity();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        name: \"service\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344\n        },\n        __self: this\n      }, \"Choose a service\"), React.createElement(\"option\", {\n        name: \"Training\",\n        value: \"Training\",\n        onClick: function onClick() {\n          _this2.setState({\n            showTopics: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347\n        },\n        __self: this\n      }, \"Training\"), this.state.listOfServices.map(function (x) {\n        return React.createElement(\"option\", {\n          value: x.service,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1351\n          },\n          __self: this\n        }, x.service);\n      })), this.state.service === \"\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newService\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1357\n        },\n        __self: this\n      }, \"New Service? Enter it here\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"service\",\n        id: \"service\",\n        onChange: this.handleInputChange,\n        placeholder: \"Enter New Service's Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1358\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newServiceDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365\n        },\n        __self: this\n      }, \"Enter new service's description\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"description\",\n        id: \"description\",\n        onChange: this.handleInputChange,\n        placeholder: \"Enter New Service's Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"newServiceCostPerUnit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1373\n        },\n        __self: this\n      }, \"Enter new service's cost per unit\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"costForService\",\n        id: \"costForService\",\n        onChange: this.handleInputChange,\n        placeholder: \"Enter New Service's cost per unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1374\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1381\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"Popover1\",\n        onClick: this.togglePopOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1383\n        },\n        __self: this\n      }, \"Read more about the Service\"), React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: this.state.popoverOpen,\n        target: \"Popover1\",\n        toggle: this.togglePopOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1386\n        },\n        __self: this\n      }, React.createElement(PopoverHeader, {\n        id: \"serviceName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1387\n        },\n        __self: this\n      }, this.state.service), React.createElement(PopoverBody, {\n        id: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1388\n        },\n        __self: this\n      }, this.state.description)))), this.state.showTopics === true ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1394\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"topic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1395\n        },\n        __self: this\n      }, \"Topic\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"topic\",\n        id: \"topic\",\n        onChange: this.handleInputChange,\n        onClick: this.getPriceAndQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1396\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        name: \"topic\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1403\n        },\n        __self: this\n      }, \"Choose a topic\"), this.state.topicsVsEquipments.map(function (x) {\n        return React.createElement(\"option\", {\n          name: \"topic\",\n          value: x.topic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1407\n          },\n          __self: this\n        }, x.topic);\n      })), this.state.topic.length > 0 && this.state.topic !== \"Other\" ? React.createElement(FaCheckCircle, {\n        style: styles.FaCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1414\n        },\n        __self: this\n      }) : React.createElement(FaTimesCircle, {\n        style: styles.FaTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1420\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"newtopic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1421\n        },\n        __self: this\n      }, \"New Topic? Enter the topic below\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"topic\",\n        id: \"newTopic\",\n        placeholder: \"Enter new topic's name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1425\n        },\n        __self: this\n      }))) : \"\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1434\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1435\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"billable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1436\n        },\n        __self: this\n      }, \"Billable Service\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1436\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"billable\",\n        name: \"billableService\",\n        value: this.state.billableService,\n        defaultChecked: true,\n        onClick: function onClick() {\n          return _this2.setState({\n            billableService: !_this2.state.billableService\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1451\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"costForService\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1452\n        },\n        __self: this\n      }, \"Cost for Service\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"costForService\",\n        id: \"costForService\",\n        placeholder: \"Enter the cost for the service\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"alternateNameForService\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464\n        },\n        __self: this\n      }, \"Alternate Name For Service\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"alternateName\",\n        id: \"alternateNameForService\",\n        placeholder: \"Enter alternate name for service\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1468\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"durationInMin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1478\n        },\n        __self: this\n      }, \"Duration of Service in Minutes\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1481\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"durationInMin\",\n        id: \"durationInMin\",\n        placeholder: \"Enter duration of service in minutes\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1482\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1491\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1492\n        },\n        __self: this\n      }, \"Number of Units of Service\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1493\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"numServiceUnits\",\n        id: \"numServiceUnits\",\n        placeholder: \"Enter number of service units\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1494\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.addService,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502\n        },\n        __self: this\n      }, \"Enter another service\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.saveServices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508\n        },\n        __self: this\n      }, \"Save Services\"), \" \", React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleServiceModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1511\n        },\n        __self: this\n      }, \"Close\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1517\n        },\n        __self: this\n      })), this.state.topic === \"Training\" ? React.createElement(FormGroup, {\n        className: \"training\",\n        id: \"training\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1521\n        },\n        __self: this\n      }, \"Address of Training\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"streetAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1523\n        },\n        __self: this\n      }, \"Street Address\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"streetAddress\",\n        id: \"streetAddress\",\n        placeholder: \"Street Address\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1524\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"zip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1531\n        },\n        __self: this\n      }, \"ZIP\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"zip\",\n        id: \"zip\",\n        placeholder: \"ZIP\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1532\n        },\n        __self: this\n      }), this.state.validZIP > 0 ? React.createElement(FaCheckCircle, {\n        style: styles.FaCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1540\n        },\n        __self: this\n      }) : React.createElement(FaTimesCircle, {\n        style: styles.FaTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1542\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1544\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1545\n        },\n        __self: this\n      }, \"Country\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"country\",\n        id: \"country\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1546\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1552\n        },\n        __self: this\n      }, \"United States\"), Object.keys(cities).map(function (country) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1554\n          },\n          __self: this\n        }, country);\n      })), React.createElement(Label, {\n        for: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1557\n        },\n        __self: this\n      }, \"State\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"state\",\n        id: \"state\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1558\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1564\n        },\n        __self: this\n      }, \"Arizona\"), us_states.map(function (state) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1566\n          },\n          __self: this\n        }, state);\n      })), React.createElement(Label, {\n        for: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1569\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"city\",\n        id: \"city\",\n        placeholder: \"Enter City\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1570\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"langOfTraining\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1578\n        },\n        __self: this\n      }, \"Language of training\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"langTraining\",\n        id: \"langTraining\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1579\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        name: \"langTraining\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1585\n        },\n        __self: this\n      }, \"Choose a language of training\"), React.createElement(\"option\", {\n        name: \"langTraining\",\n        value: \"English\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1588\n        },\n        __self: this\n      }, \"English\"), React.createElement(\"option\", {\n        name: \"langTraining\",\n        value: \"Spanish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1591\n        },\n        __self: this\n      }, \"Spanish\"), React.createElement(\"option\", {\n        name: \"langTraining\",\n        value: \"Bilingual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1594\n        },\n        __self: this\n      }, \"Bilingual\")), React.createElement(Label, {\n        for: \"numStudents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1599\n        },\n        __self: this\n      }, \"Number of students\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"numStudents\",\n        id: \"numStudents\",\n        placeholder: \"Enter number of students\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1600\n        },\n        __self: this\n      })) : \"\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1611\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"contactName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1612\n        },\n        __self: this\n      }, \"Contact Person's Name\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactName\",\n        id: \"contactName\",\n        placeholder: \"Enter contact name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        key: \"contactPerson\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1620\n        },\n        __self: this\n      }, \"Choose contact person's name\"), getCompanyContacts.map(function (x, index) {\n        return React.createElement(\"option\", {\n          key: \"contact person\" + index,\n          value: x.contactName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1624\n          },\n          __self: this\n        }, x.contactName);\n      })), React.createElement(Label, {\n        for: \"contactName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1629\n        },\n        __self: this\n      }, \"Name of contact not listed? Enter it here\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"contactName\",\n        id: \"contactNameNew\",\n        placeholder: \"Enter other contact's name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1632\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1640\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"contactEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1641\n        },\n        __self: this\n      }, \"Contact Person's Email\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactEmail\",\n        id: \"contactEmail\",\n        placeholder: \"Valid email format example@test.com\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1642\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        key: \"contactEmail\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1649\n        },\n        __self: this\n      }, \"Choose contact person's email\"), getCompanyContacts.map(function (x, index) {\n        return React.createElement(\"option\", {\n          key: \"contact_person_email\" + index,\n          value: x.contactEmail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1653\n          },\n          __self: this\n        }, x.contactEmail);\n      })), React.createElement(Label, {\n        for: \"contactEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1661\n        },\n        __self: this\n      }, \"Email not listed? Enter it here\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"contactEmail\",\n        id: \"contactEmailNew\",\n        placeholder: \"Enter other contact's email ID\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1662\n        },\n        __self: this\n      }), this.state.validEmail ? React.createElement(FaCheckCircle, {\n        style: styles.FaCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1670\n        },\n        __self: this\n      }) : React.createElement(FaTimesCircle, {\n        style: styles.FaTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1672\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1675\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"contactPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1676\n        },\n        __self: this\n      }, \"Contact Person's Contact Number\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactPhone\",\n        id: \"contactPhone\",\n        placeholder: \"Valid phone format example +1 (999) 999-999\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1678\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1685\n        },\n        __self: this\n      }, \"Choose Office Number\"), this.state.companyOfficeContacts.map(function (x) {\n        return React.createElement(\"option\", {\n          value: x.contactOfficePhone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1686\n          },\n          __self: this\n        }, x.contactOfficePhone);\n      })), React.createElement(Label, {\n        for: \"contactPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1688\n        },\n        __self: this\n      }, \"Contact Person's Office Number not listed? Enter it here\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1689\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"contactPhone\",\n        id: \"contactPhoneNew\",\n        placeholder: \"Valid phone format example +1 (999) 999-999\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1690\n        },\n        __self: this\n      }), this.state.validPhone ? React.createElement(FaCheckCircle, {\n        style: styles.FaCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1698\n        },\n        __self: this\n      }) : React.createElement(FaTimesCircle, {\n        style: styles.FaTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1700\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1703\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"contactCell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1704\n        },\n        __self: this\n      }, \"Contact Person's Cell phone number\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactCellPhone\",\n        id: \"contactCellPhone\",\n        placeholder: \"Valid phone format example +1 (999) 999-999\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1707\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1714\n        },\n        __self: this\n      }, \"Choose Mobile Phone\"), this.state.companyMobileContacts.map(function (x) {\n        return React.createElement(\"option\", {\n          value: x.contactMobilePhone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1715\n          },\n          __self: this\n        }, x.contactMobilePhone);\n      })), React.createElement(Label, {\n        for: \"contactCell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1717\n        },\n        __self: this\n      }, \"Contact Person's Cell phone number not listed? Enter it here\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"contactCellPhone\",\n        id: \"contactCellPhone\",\n        placeholder: \"Valid phone format example +1 (999) 999-999\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1720\n        },\n        __self: this\n      }), this.state.validCellPhone ? React.createElement(FaCheckCircle, {\n        style: styles.FaCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1728\n        },\n        __self: this\n      }) : React.createElement(FaTimesCircle, {\n        style: styles.FaTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1730\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1733\n        },\n        __self: this\n      }, this.state.topic === \"Training\" ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1735\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"sameLocAsTraining\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1736\n        },\n        __self: this\n      }, \"Same Location as Training?\", \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1739\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"check\",\n        name: \"sameLocAsTraining\",\n        value: this.state.sameLocAsTraining,\n        defaultChecked: false,\n        onChange: this.handleInputChange,\n        onClick: function onClick(e) {\n          _this2.setState({\n            sameLocAsTraining: !_this2.state.sameLocAsTraining\n          });\n\n          if (_this2.state.sameLocAsTraining) {\n            _this2.setState({\n              contactStreetAddress: _this2.state.contactStreetAddress,\n              contactZip: _this2.state.contactZip,\n              contactCountry: _this2.state.contactCountry,\n              contactState: _this2.state.contactState,\n              contactCity: _this2.state.contactCity\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1740\n        },\n        __self: this\n      })) : \"\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1766\n        },\n        __self: this\n      }), this.state.sameLocAsTraining ? \"\" : React.createElement(FormGroup, {\n        className: \"training\",\n        id: \"training\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1770\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1771\n        },\n        __self: this\n      }, \"Contact Address\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1772\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"streetAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1773\n        },\n        __self: this\n      }, \"Street Address\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactStreetAddress\",\n        id: \"contactStreetAddress\",\n        placeholder: \"Street Address\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1774\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1780\n        },\n        __self: this\n      }, \"Choose Street Address\"), this.state.companyLocations.filter(function (x) {\n        return x.contactStreetAddress !== undefined || x.contactStreetAddress.trim() !== \"\";\n      }).map(function (y) {\n        return React.createElement(\"option\", {\n          value: y.contactStreetAddress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1782\n          },\n          __self: this\n        }, y.contactStreetAddress);\n      })), React.createElement(Label, {\n        for: \"streetAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1785\n        },\n        __self: this\n      }, \"Contact Street Address not listed? Enter it here\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"contactStreetAddress\",\n        id: \"contactStreetAddress\",\n        placeholder: \"Street Address\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1786\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"contactZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1793\n        },\n        __self: this\n      }, \"ZIP\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactZip\",\n        id: \"contactZip\",\n        placeholder: \"ZIP code\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1794\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1800\n        },\n        __self: this\n      }, \"Choose ZIP\"), this.state.companyLocations.filter(function (x) {\n        return x.contactZIP !== undefined || x.contactZIP.trim() !== \"\";\n      }).map(function (y) {\n        return React.createElement(\"option\", {\n          value: y.contactZIP,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1802\n          },\n          __self: this\n        }, y.contactZIP);\n      })), React.createElement(Label, {\n        for: \"contactZip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1805\n        },\n        __self: this\n      }, \"ZIP not listed? Enter it here\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"contactZip\",\n        id: \"contactZip\",\n        placeholder: \"ZIP code\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1806\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"contactCountry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1813\n        },\n        __self: this\n      }, \"Country\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactCountry\",\n        id: \"contactCountry\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1814\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1820\n        },\n        __self: this\n      }, \"United States\"), Object.keys(cities).map(function (country) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1822\n          },\n          __self: this\n        }, country);\n      })), React.createElement(Label, {\n        for: \"contactState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1825\n        },\n        __self: this\n      }, \"State\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contactState\",\n        id: \"contactState\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1826\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1832\n        },\n        __self: this\n      }, \"Arizona\"), us_states.map(function (state) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1834\n          },\n          __self: this\n        }, state);\n      })), React.createElement(Label, {\n        for: \"contactCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1837\n        },\n        __self: this\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"contactCity\",\n        id: \"contactCity\",\n        placeholder: \"Enter City\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1838\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1848\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"equipments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1849\n        },\n        __self: this\n      }, \"Equipment needed\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1849\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"Laptop\",\n        name: \"Laptop\",\n        defaultChecked: this.state.Laptop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1850\n        },\n        __self: this\n      }), \"Laptop \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1856\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"projectorScreen\",\n        name: \"projectorScreen\",\n        defaultChecked: this.state.projectorScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1857\n        },\n        __self: this\n      }), \"Projector Screen\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1864\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"Table\",\n        name: \"Table\",\n        defaultChecked: this.state.Table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865\n        },\n        __self: this\n      }), \"Table\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1872\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"forkliftTrainingKit\",\n        name: \"forkliftTrainingKit\",\n        defaultChecked: this.state.forkliftTrainingKit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1873\n        },\n        __self: this\n      }), \"Forklift Training Kit (Grey Duffle Bag)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1880\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"trainingKit\",\n        name: \"trainingKit\",\n        defaultChecked: this.state.trainingKit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1881\n        },\n        __self: this\n      }), \"Training Kit (Green Duffle Bag)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1888\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"CPRmannequins\",\n        name: \"CPRmannequins\",\n        defaultChecked: this.state.CPRmannequins,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1889\n        },\n        __self: this\n      }), \"CPR Mannequins\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1896\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"firstAidAEDKit\",\n        name: \"firstAidAEDKit\",\n        defaultChecked: this.state.firstAidAEDKit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1897\n        },\n        __self: this\n      }), \"First Aid AED Kit (Red bagpack)\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1904\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"RespiratorFitTestKit\",\n        name: \"RespiratorFitTestKit\",\n        defaultChecked: this.state.RespiratorFitTestKit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1905\n        },\n        __self: this\n      }), \"Respirator Fit Test Kit\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1912\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"Handouts\",\n        name: \"Handouts\",\n        defaultChecked: this.state.Handouts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1913\n        },\n        __self: this\n      }), \"Handouts\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1920\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"additionalEquipment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1921\n        },\n        __self: this\n      }, \"Need additional equipment? Add it here\"), React.createElement(\"div\", {\n        style: styles.FaPlus,\n        id: \"clearText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1924\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"addOn\",\n        id: \"addOn\",\n        value: this.state.addOn,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1925\n        },\n        __self: this\n      }), React.createElement(FaPlus, {\n        onClick: function onClick() {\n          if (_this2.state.addOn.trim() !== \"\") {\n            _this2.state.additionalEquipments.push(_this2.state.addOn.trim());\n\n            document.getElementById('addEquipment').style.display = \"block\";\n          } else {\n            document.getElementById('addEquipment').style.display = \"none\";\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1932\n        },\n        __self: this\n      }), \" \"), React.createElement(Alert, {\n        color: \"success\",\n        id: \"addEquipment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1944\n        },\n        __self: this\n      }, \"New equipment added! \", React.createElement(\"span\", {\n        style: {\n          'float': 'right'\n        },\n        onClick: function onClick() {\n          document.getElementById('addEquipment').style.display = \"none\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1944\n        },\n        __self: this\n      }, React.createElement(FaTimes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1946\n        },\n        __self: this\n      }))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1949\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1950\n        },\n        __self: this\n      }, \"Provide instructions to service provider\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"instructions\",\n        id: \"instructions\",\n        placeholder: \"Instructions\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1953\n        },\n        __self: this\n      })), React.createElement(Button, {\n        name: \"active\",\n        onClick: this.handleSubmit,\n        disabled: !this.state.active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1962\n        },\n        __self: this\n      }, \"Submit\"), \" \", \"\\xA0\", React.createElement(Button, {\n        onClick: this.handlePDF,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1970\n        },\n        __self: this\n      }, \"Print\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1972\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1974\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"capture\",\n        style: styles.pdf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1975\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1976\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1977\n        },\n        __self: this\n      }, \"Insure Compliance, LLC\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1979\n        },\n        __self: this\n      }), \"4406 E Main St 102-58\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1981\n        },\n        __self: this\n      }), \"Mesa, AZ 85205 US\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1983\n        },\n        __self: this\n      }), \"(866) 647-2373\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1985\n        },\n        __self: this\n      }), \"insurecompliance.net\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1987\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        src: \"./Capture.PNG\",\n        alt: \"Company logo\",\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1989\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1995\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1996\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1997\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1998\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1999\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2000\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2001\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: styles.quotation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2002\n        },\n        __self: this\n      }, \"QUOTATION\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2004\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.billedTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2005\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2006\n        },\n        __self: this\n      }, \"ADDRESS\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2007\n        },\n        __self: this\n      }), this.state.companyName, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2009\n        },\n        __self: this\n      }), this.state.contactStreetAddress, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2011\n        },\n        __self: this\n      }), this.state.contactCity, \" \", getInitial(this.state.contactState), this.state.contactZip, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2015\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: styles.quote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2018\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2019\n        },\n        __self: this\n      }, \"QUOTATION\"), \" # 1023 \\xA0 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2019\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2020\n        },\n        __self: this\n      }, \"DATE\"), \" \", React.createElement(Moment, {\n        format: \"YYYY/MM/DD\",\n        date: this.state.startDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2021\n        },\n        __self: this\n      }), \" \", \"\\xA0 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2022\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2026\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2027\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2028\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2029\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        style: styles.quotation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2030\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2032\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.billedTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2033\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2034\n        },\n        __self: this\n      }, \"QUOTATION ISSUED BY\"), \" \\xA0\", this.state.quotationIssuedBy, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2036\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: styles.quote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2039\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2040\n        },\n        __self: this\n      }, \"QUOTATION VALID THRU\"), \"\\xA0\", React.createElement(Moment, {\n        format: \"YYYY/MM/DD\",\n        date: this.state.validThru,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2041\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2045\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2049\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2050\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        id: \"customers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2052\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2053\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2054\n        },\n        __self: this\n      }, \"ACTIVITY\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2055\n        },\n        __self: this\n      }, \"QTY\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2056\n        },\n        __self: this\n      }, \"RATE\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2057\n        },\n        __self: this\n      }, \"AMOUNT\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2059\n        },\n        __self: this\n      }, this.state.requestedServices.length > 0 ? this.state.requestedServiceRows : \"\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2066\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        style: styles.quotation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2067\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: styles.quote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2068\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"1.25em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2069\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2070\n        },\n        __self: this\n      }, \"TOTAL\"), \" \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2070\n        },\n        __self: this\n      }, \"$\" + this.state.totalCost.toFixed(2)))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2073\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2074\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2075\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.billedTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2076\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2077\n        },\n        __self: this\n      }, \"Accepted by\")), React.createElement(\"div\", {\n        style: styles.quote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2080\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2081\n        },\n        __self: this\n      }, \"Accepted Date\"))))))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["C:\\Users\\anuhya\\Desktop\\ic\\insure\\client\\src\\Pages\\ServiceRequestForm\\ServiceRequestForm.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Alert","Form","FormGroup","Label","Input","Container","Popover","PopoverHeader","PopoverBody","DatePicker","moment","Moment","FaPlus","FaCheckCircle","FaTimesCircle","FaTrash","FaTimes","cities","states","services","API","html2canvas","jsPDF","window","styles","pdf","padding","height","width","h4","color","logo","float","info","content","clear","quotation","fontFamily","billedTo","quote","FaCheck","note","fontSize","fontWeight","notify","display","removeContactNotification","equipmentsAlwaysOnSite","equipmentIDs","uniqueCompanies","employees","getCompanyDetails","getCompanyContacts","getCompanyLocations","us_states","key","push","getInitial","state","Example","props","componentDidMount","getEmployees","getCompanies","document","getElementById","style","componentWillMount","getTopicBasedEquipments","then","res","setState","topicsVsEquipments","data","console","log","catch","err","getListOfServices","listOfServices","getPriceAndQuantity","result","filter","element","topic","trim","value","serviceUnits","DurationInMin","costOfService","service","Laptop","projectorScreen","Table","trainingKit","forkliftTrainingKit","CPRmannequins","firstAidAEDKit","RespiratorFitTestKit","Handouts","costForService","result2","undefined","qty","cost","showTopics","description","getAvailableEquipments","checkedEquipments","row","companyName","i","length","addContact","item","newCompanyName","newContactName","newContactEmail","newContactOfficePhone","newContactMobilePhone","newContactMobilePhoneAlternate","mainContact","newCompanyContact","reset","addLocation","newContactStreetAddress","newContactCity","newContactState","newContactZIP","newContactCountry","mainLocation","newCompanyLocation","addService","billable","billableService","parseFloat","alternateName","serviceDescription","newServiceRequest","saveServices","getServiceRequests","requestedServices","requestedServiceRows","getServices","toggleServiceModal","x","map","index","toFixed","totalCost","removeServices","deleteService","getCompany","indexOf","companyNames","saveCompany","newProducer","newAgency","newContractClient","newCompany","postCompanyEquipments","toggleModal","handlePDF","startDate","divHeight","offsetHeight","divWidth","offsetWidth","scale","dpi","canvas","wid","hgt","img","toDataURL","hratio","doc","internal","pageSize","addImage","toDate","save","format","handleCompanyName","validCompanyName","companyMobileContacts","contactMobilePhone","companyOfficeContacts","contactOfficePhone","companyLocations","getCompanyEquipments","checked","validatePhone","re","RegExp","validPhone","test","contactPhone","isNaN","validateCellPhone","validCellPhone","contactCellPhone","validateEmail","validEmail","String","contactEmail","toLowerCase","validateZIP","zipRegex","validZIP","zip","handleSubmit","e","preventDefault","validThru","paymentBy","paymentForTraining","producer","contactPerson","contactName","contactState","contactStreetAddress","contactCity","contactZip","contactCountry","country","quotationIssuedBy","instructions","postService","quotationNumber","quoteNumber","res1","addTask","client","res2","res3","add","sameLocAsTraining","streetAddress","city","equipmentsSelectedSite","equipmentsSelectedTraining","equipments","active","addOn","error","modal","serviceModal","viewServiceRows","viewServiceModal","popoverOpen","additionalEquipments","deleteServiceRequests","handleInputChange","target","name","toggleViewServicesModal","bind","handleChange","togglePopOver","EMP_NAME","date","option","className","Object","keys","y","contactZIP","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n/*Imports for modals from reactstrap */\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,Alert } from \"reactstrap\";\r\n\r\n/*Imports required for Form Group */\r\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { Container } from \"reactstrap\";\r\n\r\n/*Import tooltip or popover from reactstrap*/\r\n//import { Tooltip } from \"reactstrap\";\r\nimport {Popover, PopoverHeader, PopoverBody} from \"reactstrap\";\r\n\r\n//Importing CSS for body, logo and table of the pdf generator\r\nimport \"./style.css\";\r\n\r\n/*Imports required for React Calendar */\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//Validation icons\r\nimport { FaPlus, FaCheckCircle, FaTimesCircle, FaTrash, FaTimes} from \"react-icons/fa\";\r\n\r\n//Importing cities and states for countries\r\nimport cities from \"../../utils/cities.json\";\r\nimport states from \"../../utils/us-states.json\";\r\nimport services from \"../../utils/services.json\";\r\n\r\n//Connection to backend\r\nimport API from \"../../utils/API\";\r\n\r\n//imports for PDF generation\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nwindow.html2canvas = html2canvas;\r\n\r\nconst styles = {\r\n  pdf: {\r\n    padding: \"10px 10px\",\r\n    height: \"180mm\",\r\n    width: \"200mm\"\r\n  },\r\n  h4: {\r\n    color: \"#000\"\r\n  },\r\n  logo: {\r\n    float: \"right\",\r\n    height: \"100px\",\r\n    width: \"300px\"\r\n  },\r\n  info: {\r\n    float: \"left\"\r\n  },\r\n  content: {\r\n    clear: \"both\"\r\n  },\r\n  quotation: {\r\n    fontFamily: \"Andika\",\r\n    color: \"#009999\"\r\n  },\r\n  billedTo: {\r\n    float: \"left\"\r\n  },\r\n  quote: {\r\n    float: \"right\"\r\n  },\r\n  FaPlus: {\r\n    color: \"#339933\"\r\n  },\r\n  FaCheck: {\r\n    color: \"#339933\"\r\n  },\r\n  FaTimes: {\r\n    color: \"#cc3300\"\r\n  },\r\n  note: {\r\n    fontFamily: \"Palatino Linotype\",\r\n    fontSize: \"0.75em\",\r\n    fontWeight: \"500\"\r\n  },\r\n  notify: {\r\n    color: \"#228B22\",\r\n    display: \"none\",\r\n    fontWeight: \"700\"\r\n  },\r\n  removeContactNotification: {\r\n    color: \"#E82C0C\",\r\n    display: \"none\",\r\n    fontWeight: \"700\"\r\n  }\r\n};\r\n\r\n//Initialized outside to add new equipments on the fly\r\nvar equipmentsAlwaysOnSite = [\r\n  \"Laptop\",\r\n  \"projectorScreen\",\r\n  \"Table\",\r\n  \"trainingKit\",\r\n  \"forkliftTrainingKit\",\r\n  \"CPRmannequins\",\r\n  \"firstAidAEDKit\",\r\n  \"Handouts\"\r\n];\r\nvar equipmentIDs = [\r\n  \"Laptop\",\r\n  \"projectorScreen\",\r\n  \"Table\",\r\n  \"trainingKit\",\r\n  \"forkliftTrainingKit\",\r\n  \"CPRmannequins\",\r\n  \"firstAidAEDKit\",\r\n  \"Handouts\"\r\n];\r\n\r\n//Unique Companies\r\nvar uniqueCompanies = [];\r\n\r\n//Get employee names from API.js\r\nvar employees = [];\r\n\r\n//Get company Details, contacts, locations\r\nvar getCompanyDetails = [];\r\nvar getCompanyContacts = [];\r\nvar getCompanyLocations = [];\r\n\r\n//Get all US states\r\nvar us_states = [];\r\nfor (let key in states) {\r\n  us_states.push(states[key]);\r\n}\r\n\r\nfunction getInitial(state) {\r\n  for (let key in states) {\r\n    if (states[key] === state) {\r\n      return key;\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //State variables for form elements and their validation\r\n    this.state = {\r\n      startDate: moment(),\r\n      validThru: moment()\r\n        .add(90, \"days\")\r\n        .format(\"YYYY-MM-DD\"),\r\n      newContractClient: false,\r\n      companyName: \"\",\r\n      newCompanyName: \"\",\r\n      companyNames: services.companyName,\r\n      country: \"United States\",\r\n      topic: \"\",\r\n      service: \"\",\r\n      producer: \"\",\r\n      sameLocAsTraining: false,\r\n      validCompanyName: false,\r\n      validPhone: false,\r\n      validEmail: false,\r\n      validCellPhone: false,\r\n      validZIP: false,\r\n      contactName: \"\",\r\n      contactPhone: \"\",\r\n      contactCellPhone: \"\",\r\n      contactEmail: \"\",\r\n      state: \"\",\r\n      streetAddress: \"\",\r\n      city: \"\",\r\n      zip: \"\",\r\n      contactStreetAddress: \"\",\r\n      contactZip: \"\",\r\n      contactCountry: \"United States\",\r\n      contactState: \"\",\r\n      contactCity: \"\",\r\n      //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\r\n      equipmentsSelectedSite: [],\r\n      equipmentsSelectedTraining: [],\r\n      //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\r\n      equipments: [\r\n        \"Laptop\",\r\n        \"Projector Screen\",\r\n        \"Table\",\r\n        \"Training Kit (Green Duffle Bag)\",\r\n        \"Forklift Training Kit (Grey Duffle Bag)\",\r\n        \"CPR mannequins\",\r\n        \"First Aid & AED Kit (Red Backpack)\",\r\n        \"Handouts\"\r\n      ],\r\n      Laptop: false,\r\n      projectorScreen: false,\r\n      Table: false,\r\n      trainingKit: false,\r\n      forkliftTrainingKit: false,\r\n      CPRmannequins: false,\r\n      firstAidAEDKit: false,\r\n      RespiratorFitTestKit: false,\r\n      Handouts: false,\r\n      active: true,\r\n      addOn: \"\",\r\n      error: {},\r\n      modal: false,\r\n      quotationIssuedBy: \"\",\r\n      instructions: \"\",\r\n      serviceModal: false,\r\n      billableService: true,\r\n      alternateName: \"\",\r\n      costForService: 0.0,\r\n      requestedServices: [],\r\n      requestedServiceRows: [],\r\n      viewServiceRows: [],\r\n      totalCost: 0,\r\n      viewServiceModal: false,\r\n      showTopics: false,\r\n      popoverOpen: false,\r\n      description: \"\",\r\n      companyMobileContacts: [],\r\n      companyOfficeContacts: [],\r\n      companyLocations: [],\r\n      listOfServices: [],\r\n      additionalEquipments: [],\r\n      quotationNumber: \"\"\r\n    };\r\n    this.validateEmail = this.validateEmail.bind(this);\r\n    this.validatePhone = this.validatePhone.bind(this);\r\n    this.validateCellPhone = this.validateCellPhone.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.validateZIP = this.validateZIP.bind(this);\r\n    this.handleCompanyName = this.handleCompanyName.bind(this);\r\n    this.handlePDF = this.handlePDF.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.getEmployees = this.getEmployees.bind(this);\r\n    this.saveCompany = this.saveCompany.bind(this);\r\n    this.addContact = this.addContact.bind(this);\r\n    this.addLocation = this.addLocation.bind(this);\r\n    this.getCompanies = this.getCompanies.bind(this);\r\n    this.addService = this.addService.bind(this);\r\n    this.toggleServiceModal = this.toggleServiceModal.bind(this);\r\n    this.toggleViewServicesModal = this.toggleViewServicesModal.bind(this);\r\n    this.getPriceAndQuantity = this.getPriceAndQuantity.bind(this);\r\n    this.getServices = this.getServices.bind(this);\r\n    this.saveServices = this.saveServices.bind(this);\r\n    this.removeServices = this.removeServices.bind(this);\r\n    this.togglePopOver = this.togglePopOver.bind(this);\r\n  }\r\n  \r\n  componentDidMount = () => {\r\n    this.getEmployees();\r\n    this.getCompanies();\r\n    document.getElementById('addEquipment').style.display = \"none\";\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    API.getTopicBasedEquipments()\r\n      .then(res => {\r\n        this.setState({\r\n          topicsVsEquipments : res.data\r\n        });\r\n        console.log(\"topic vs equipments loaded!\");\r\n      })\r\n      .catch(err => console.log(err));\r\n    API.getListOfServices()\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        listOfServices :res.data\r\n      })\r\n      \r\n      console.log(\"services list loaded!\");\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  getPriceAndQuantity = () => {\r\n    var result = this.state.topicsVsEquipments.filter(\r\n      element => element.topic === this.state.topic\r\n    )[0];\r\n    if (result !== {} && this.state.topic.trim() !== \"\") {\r\n      document.getElementById(\"numServiceUnits\").value = result.serviceUnits;\r\n      document.getElementById(\"durationInMin\").value = result.DurationInMin;\r\n      document.getElementById(\"costForService\").value = result.costOfService;\r\n\r\n      this.setState({\r\n        service: \"Training - \" + this.state.topic,\r\n        Laptop: this.state.Laptop || result.Laptop,\r\n        projectorScreen: this.state.projectorScreen || result.projectorScreen,\r\n        Table: this.state.Table || result.Table,\r\n        trainingKit: this.state.trainingKit || result.trainingKit,\r\n        forkliftTrainingKit: this.state.forkliftTrainingKit || result.forkliftTrainingKit,\r\n        CPRmannequins: this.state.CPRmannequins || result.CPRmannequins,\r\n        firstAidAEDKit: this.state.firstAidAEDKit || result.firstAidAEDKit,\r\n        RespiratorFitTestKit: this.state.RespiratorFitTestKit || result.RespiratorFitTestKit,\r\n        Handouts: this.state.Handouts || result.Handouts,\r\n        costForService: result.costOfService\r\n      });\r\n    }\r\n\r\n    var result2 = this.state.listOfServices\r\n    .filter(element => element.service === this.state.service)[0];\r\n    if (result2 !== undefined && this.state.service.trim() !== \"\" && this.state.service !== \"Training\") {\r\n      document.getElementById(\"numServiceUnits\").value = result2.qty;\r\n      document.getElementById(\"costForService\").value = result2.cost;\r\n\r\n      this.setState({\r\n        service: this.state.service,\r\n        showTopics: false,\r\n        description: result2.description\r\n      });\r\n    }\r\n  };\r\n\r\n  getAvailableEquipments = () => {\r\n    //console.log(this.state.companyName);\r\n    var checkedEquipments = [];\r\n    var row = {};\r\n    if (this.state.companyName.trim() !== \"\") {\r\n      for (let i = 0; i < this.state.topicsVsEquipments.length; ++i) {\r\n        if (this.state.topicsVsEquipments[i].topic === this.state.topic) {\r\n          row = this.state.topicsVsEquipments[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  addContact = () => {\r\n    var item = {\r\n      newCompanyName: this.state.newCompanyName,\r\n      newContactName: this.state.newContactName,\r\n      newContactEmail: this.state.newContactEmail,\r\n      newContactOfficePhone: this.state.newContactOfficePhone,\r\n      newContactMobilePhone: this.state.newContactMobilePhone,\r\n      newContactMobilePhoneAlternate: this.state.newContactMobilePhoneAlternate,\r\n      mainContact: this.state.mainContact\r\n    };\r\n    API.newCompanyContact(item)\r\n      .then(res => {\r\n        console.log(res);\r\n        document.getElementById(\"newContactPhone\").reset();\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    document.getElementById(\"notifyContactAdded\").style.display = \"block\";\r\n    document.getElementById(\"removeContactNotification\").style.display =\r\n      \"block\";\r\n  };\r\n\r\n  addLocation = () => {\r\n    var item = {\r\n      newCompanyName: this.state.newCompanyName,\r\n      newContactStreetAddress: this.state.newContactStreetAddress,\r\n      newContactCity: this.state.newContactCity,\r\n      newContactState: this.state.newContactState,\r\n      newContactZIP: this.state.newContactZIP,\r\n      newContactCountry: this.state.newContactCountry,\r\n      mainLocation: this.state.mainLocation\r\n    };\r\n    API.newCompanyLocation(item)\r\n      .then(res => {\r\n        console.log(res);\r\n        document.getElementById(\"newContactLocation\").reset();\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    document.getElementById(\"notifyLocationAdded\").style.display = \"block\";\r\n    document.getElementById(\"removeLocationNotification\").style.display =\r\n      \"block\";\r\n  };\r\n\r\n  addService = () => {\r\n    var item = {\r\n      companyName: this.state.companyName,\r\n      service: this.state.service,\r\n      billable: this.state.billableService,\r\n      qty: document.getElementById(\"numServiceUnits\").value === undefined ? 0 : parseFloat(document.getElementById(\"numServiceUnits\").value),\r\n      alternateName: this.state.alternateName.length === 0 ? this.state.service : this.state.alternateName,\r\n      cost: document.getElementById(\"costForService\").value === undefined ? 0 : parseFloat(document.getElementById(\"costForService\").value),\r\n      serviceDescription: this.state.description\r\n    };\r\n\r\n    console.log(item);\r\n\r\n    API.newServiceRequest(item)\r\n      .then(res => {\r\n        console.log(res);\r\n        // this.setState({\r\n        //   topic: \"\",\r\n        //   service: \"\",\r\n        //   description: \"\",\r\n        //   costForService: 0,\r\n        //   billable: false,\r\n        //   alternateName: this.state.topic\r\n        // });\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    //Clear all fields to add further services\r\n    document.getElementById(\"addService\").reset();\r\n  };\r\n\r\n  saveServices = () => {\r\n    API.getServiceRequests()\r\n      .then(res => {\r\n        if (this.state.service.trim() !== \"\") {\r\n          this.addService();\r\n        }\r\n        this.setState({\r\n          requestedServices : res.data\r\n        })\r\n        this.setState({\r\n          requestedServiceRows: this.getServices()\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n    this.toggleServiceModal();\r\n  };\r\n\r\n  getServices = () => {\r\n    return this.state.requestedServices\r\n      .filter(x => x.billable === true)\r\n      .map((x, index) => (\r\n        <tr key={\"serviceRequest\" + (index + 1)}>\r\n          <td>{x.alternateName}</td>\r\n          <td>{x.qty}</td>\r\n          <td>{x.cost.toFixed(2)}</td>\r\n          <td>${(x.qty * x.cost).toFixed(2)}</td>\r\n          {this.setState({\r\n            totalCost: this.state.totalCost + x.qty * x.cost * x.billable\r\n          })}\r\n        </tr>\r\n      ));\r\n  };\r\n\r\n  removeServices = () => {\r\n    var result = [];\r\n    API.getServiceRequests()\r\n      .then(res => {\r\n        this.setState({\r\n          requestedServices : res.data\r\n        })\r\n        console.log(\"remove services\",this.state.requestedServices);\r\n        result =  this.state.requestedServices\r\n          .map((x, index) => (\r\n            <tr key={\"serviceRequest\" + (index + 1)} id = {\"serviceRequest\" + (index + 1)}>\r\n              <td>{x.alternateName}</td>\r\n              <td>{x.qty}</td>\r\n              <td>{x.cost.toFixed(2)}</td>\r\n              <td>${(x.qty * x.cost).toFixed(2)}</td>\r\n              <td><FaTrash style = {{'color': 'red'}} onClick = {() => {\r\n                API.deleteService(x.alternateName)\r\n                .then(res => {\r\n                  this.setState({\r\n                    totalCost: this.state.totalCost - x.qty * x.cost * x.billable\r\n                  });\r\n                  })\r\n                .catch(err => console.log(err));\r\n              }}/>\r\n              </td>\r\n            </tr>\r\n          ));\r\n      })\r\n      .catch(err => console.log(err));\r\n      return result\r\n  };\r\n\r\n  getCompanies = () => {\r\n    API.getCompany()\r\n      .then(res => {\r\n        for (let i = 0; i < res.data.length; ++i) {\r\n          if (uniqueCompanies.indexOf(res.data[i].companyName) === -1 && res.data[i].companyName.trim() !== \"\") {\r\n            uniqueCompanies.push(res.data[i].companyName);\r\n          }\r\n        }\r\n        this.setState({ companyNames: uniqueCompanies });\r\n        console.log(\"Companies table loaded\");\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  saveCompany = () => {\r\n    this.addContact();\r\n    this.addLocation();\r\n    var item = {\r\n      companyName: this.state.newCompanyName,\r\n      newCompanyName: this.state.newCompanyName,\r\n      newProducer: this.state.newProducer,\r\n      newAgency: this.state.newAgency,\r\n      newContractClient: this.state.newContractClient,\r\n      Laptop: this.state.Laptop,\r\n      projectorScreen: this.state.projectorScreen,\r\n      Table: this.state.Table,\r\n      trainingKit: this.state.trainingKit,\r\n      forkliftTrainingKit: this.state.forkliftTrainingKit,\r\n      CPRmannequins: this.state.CPRmannequins,\r\n      firstAidAEDKit: this.state.firstAidAEDKit,\r\n      Handouts: this.state.Handouts\r\n    };\r\n    API.newCompany(item)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    API.postCompanyEquipments(item)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err));\r\n\r\n    this.getCompanies();\r\n    this.toggleModal();\r\n    console.log(this.state.newCompanyName, this.state.companyName);\r\n  };\r\n\r\n  //Getting employees from server\r\n  getEmployees() {\r\n    API.getEmployees().then(function(res) {\r\n      for (let i = 0; i < res.data.length; ++i) {\r\n        employees.push(res.data[i].EMP_NAME);\r\n      }\r\n      console.log(\"employees table loaded!\");\r\n    });\r\n  }\r\n\r\n  //Generates pdf\r\n  handlePDF = () => {\r\n    var companyName = this.state.companyName;\r\n    var startDate = this.state.startDate;\r\n    var divHeight = document.getElementById(\"capture\").offsetHeight;\r\n    var divWidth = document.getElementById(\"capture\").offsetWidth;\r\n    return html2canvas(document.getElementById(\"capture\"), {\r\n      scale: 0.85,\r\n      dpi: 278\r\n    }).then(function(canvas) {\r\n      var wid = divWidth;\r\n      var hgt = divHeight;\r\n      var img = canvas.toDataURL(\r\n        \"image/png\",\r\n        (wid = canvas.width),\r\n        (hgt = canvas.height)\r\n      );\r\n      var hratio = hgt / wid;\r\n      var doc = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      var width = doc.internal.pageSize.width;\r\n      var height = width * hratio;\r\n      doc.addImage(img, \"JPEG\", 20, 25, width, height);\r\n      console.log(startDate.toDate());\r\n      doc.save(\r\n        companyName + \"-Quotation-\" + startDate.format(\"MM/DD/YYYY\") + \".pdf\"\r\n      );\r\n    });\r\n  };\r\n\r\n  handleCompanyName = () => {\r\n    if (\r\n      this.state.companyName.length < 2 &&\r\n      this.state.newCompanyName.length < 2\r\n    ) {\r\n      this.setState({\r\n        validCompanyName: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        validCompanyName: true\r\n      });\r\n    }\r\n\r\n    API.getCompanyDetails(this.state.companyName)\r\n      .then(res => {\r\n        getCompanyDetails = res.data;\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n      if(this.state.companyName.trim() !== \"\"){\r\n        API.getCompanyContacts(this.state.companyName)\r\n          .then(res => {\r\n            getCompanyContacts = res.data;\r\n            this.setState({\r\n              companyMobileContacts: res.data.filter(x => x.contactMobilePhone !== \"\"),\r\n              companyOfficeContacts: res.data.filter(x => x.contactOfficePhone !== \"\")\r\n            })\r\n          })\r\n          .catch(err => console.log(err));\r\n          API.getCompanyLocations(this.state.companyName)\r\n            .then(res => {\r\n              getCompanyLocations = res.data;\r\n              this.setState({\r\n                companyLocations: res.data\r\n              })\r\n            })\r\n            .catch(err => console.log(err));\r\n      }\r\n\r\n\r\n    this.getAvailableEquipments();\r\n\r\n    API.getCompanyEquipments(this.state.companyName)\r\n      .then(res => {\r\n        if(res.data.length > 0 && this.state.companyName.length > 0 ){\r\n          var result = res.data[0];\r\n          this.setState({\r\n            Laptop: this.state.Laptop || !result.Laptop,\r\n            projectorScreen: this.state.projectorScreen || !result.projectorScreen,\r\n            Table: this.state.Table || !result.Table,\r\n            trainingKit: this.state.trainingKit || !result.trainingKit,\r\n            forkliftTrainingKit: this.state.forkliftTrainingKit || !result.forkliftTrainingKit,\r\n            CPRmannequins: this.state.CPRmannequins || !result.CPRmannequins,\r\n            firstAidAEDKit: this.state.firstAidAEDKit || !result.firstAidAEDKit,\r\n            RespiratorFitTestKit: this.state.RespiratorFitTestKit || !result.RespiratorFitTestKit,\r\n            Handouts: this.state.Handouts || !result.Handouts\r\n          });\r\n          document.getElementById('Laptop').checked = this.state.Laptop;\r\n          document.getElementById('projectorScreen').checked = this.state.projectorScreen;\r\n          document.getElementById('Table').checked = this.state.Table;\r\n          document.getElementById('trainingKit').checked = this.state.trainingKit;\r\n          document.getElementById('forkliftTrainingKit').checked = this.state.forkliftTrainingKit;\r\n          document.getElementById('CPRmannequins').checked = this.state.CPRmannequins;\r\n          document.getElementById('firstAidAEDKit').checked = this.state.firstAidAEDKit;\r\n          document.getElementById('RespiratorFitTestKit').checked = this.state.RespiratorFitTestKit;\r\n          document.getElementById('Handouts').checked = this.state.Handouts;\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  validatePhone = () => {\r\n    var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\r\n    this.setState({\r\n      validPhone: re.test(this.state.contactPhone) || isNaN(this.state.contactPhone)\r\n    });\r\n  };\r\n\r\n  validateCellPhone = () => {\r\n    var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\r\n    this.setState({\r\n      validCellPhone: re.test(this.state.contactCellPhone) || isNaN(this.state.contactPhone)\r\n    });\r\n  };\r\n\r\n  validateEmail = () => {\r\n    var re = RegExp(\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    this.setState({\r\n      validEmail: re.test(String(this.state.contactEmail).toLowerCase())\r\n    });\r\n  };\r\n\r\n  validateZIP = () => {\r\n    let zipRegex = RegExp(\"^[0-9]{5}(?:-[0-9]{4})?$\");\r\n    this.setState({\r\n      validZIP: zipRegex.test(this.state.zip)\r\n    });\r\n  };\r\n\r\n  handleChange(date) {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n    this.setState({\r\n      validThru: moment(date)\r\n        .add(90, \"days\")\r\n        .format(\"YYYY-MM-DD\")\r\n    });\r\n    document.getElementById(\"validThru\").value = moment(\r\n      this.state.validThru\r\n    ).format(\"YYYY-MM-DD\");\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      requestedServiceRows: this.getServices()\r\n    });\r\n\r\n    var item = {\r\n      companyName: this.state.companyName,\r\n      startDate: this.state.startDate,\r\n      validThru: this.state.validThru,\r\n      paymentBy: this.state.paymentForTraining,\r\n      producer: this.state.producer,\r\n      contactPerson: this.state.contactName,\r\n      contactPhone: this.state.contactPhone,\r\n      contactCellPhone: this.state.contactCellPhone,\r\n      contactEmail: this.state.contactEmail,\r\n      contactState: this.state.contactState,\r\n      contactStreetAddress: this.state.contactStreetAddress,\r\n      contactCity: this.state.contactCity,\r\n      contactZip: this.state.contactZip,\r\n      contactCountry: this.state.country,\r\n      //Equipment needed at site\r\n      Laptop: this.state.Laptop,\r\n      projectorScreen: this.state.projectorScreen,\r\n      Table: this.state.Table,\r\n      trainingKit: this.state.trainingKit,\r\n      forkliftTrainingKit: this.state.forkliftTrainingKit,\r\n      CPRmannequins: this.state.CPRmannequins,\r\n      firstAidAEDKit: this.state.firstAidAEDKit,\r\n      RespiratorFitTestKit: this.state.RespiratorFitTestKit,\r\n      Handouts: this.state.Handouts,\r\n      quotationIssuedBy: this.state.quotationIssuedBy,\r\n      instructions: this.state.instructions\r\n    };\r\n    \r\n    API.postService(item)\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        quotationNumber: res.data.quoteNumber,\r\n        quotationIssuedBy: res.data.quotationIssuedBy\r\n      });\r\n      API.getServiceRequests()\r\n      .then(res1 => {\r\n          console.log(res.data.quotationIssuedBy);\r\n          console.log(res1);\r\n          API.addTask({\r\n            quotationNumber: this.state.quotationNumber,\r\n            service: \"Approve quote \" + this.state.quotationNumber,\r\n            client: this.state.companyName,\r\n            instructions: this.state.instructions,\r\n            startDate: this.state.startDate, //sort\r\n            validThru: this.state.validThru,\r\n            quotationIssuedBy: res.data.quotationIssuedBy\r\n          })\r\n          .then(res2 => {\r\n            console.log(res2.data);\r\n\r\n                if(res1.data.length > 0){\r\n                  for(let i = 0; i < res1.data.length; ++i ){\r\n                    API.addTask({\r\n                      quotationNumber: this.state.quotationNumber,\r\n                      service: res1.data[i].service,\r\n                      client: res1.data[i].companyName,\r\n                      instructions: this.state.instructions,\r\n                      startDate: this.state.startDate, //sort\r\n                      validThru: this.state.validThru,\r\n                      qty: res1.data[i].qty,\r\n                      serviceDescription: res1.data[i].serviceDescription,\r\n                      quotationIssuedBy: res.data.quotationIssuedBy\r\n                    })\r\n                    .then(res3 => {console.log(\"Added a task\")})\r\n                    .catch(err => console.log(err));\r\n                  }\r\n                }\r\n                console.log(\"Deleted rows\");\r\n                console.log(\"Added a task to accept quote as well!\");\r\n                document.getElementById(\"serviceRequestForm\").reset();\r\n                this.setState({\r\n              startDate: moment(),\r\n              validThru: moment()\r\n                .add(90, \"days\")\r\n                .format(\"YYYY-MM-DD\"),\r\n                newContractClient: false,\r\n              companyName: \"\",\r\n              newCompanyName: \"\",\r\n              companyNames: services.companyName,\r\n              country: \"United States\",\r\n              topic: \"\",\r\n              service: \"\",\r\n              producer: \"\",\r\n              sameLocAsTraining: false,\r\n              validCompanyName: false,\r\n              validPhone: false,\r\n              validEmail: false,\r\n              validCellPhone: false,\r\n              validZIP: false,\r\n              contactName: \"\",\r\n              contactPhone: \"\",\r\n              contactCellPhone: \"\",\r\n              contactEmail: \"\",\r\n              state: \"\",\r\n              streetAddress: \"\",\r\n              city: \"\",\r\n              zip: \"\",\r\n              contactStreetAddress: \"\",\r\n              contactZip: \"\",\r\n              contactCountry: \"United States\",\r\n              contactState: \"\",\r\n              contactCity: \"\",\r\n              //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\r\n              equipmentsSelectedSite: [],\r\n              equipmentsSelectedTraining: [],\r\n              //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\r\n              equipments: [\r\n                \"Laptop\",\r\n                \"Projector Screen\",\r\n                \"Table\",\r\n                \"Training Kit (Green Duffle Bag)\",\r\n                \"Forklift Training Kit (Grey Duffle Bag)\",\r\n                \"CPR mannequins\",\r\n                \"First Aid & AED Kit (Red Backpack)\",\r\n                \"Handouts\"\r\n              ],\r\n              Laptop: false,\r\n              projectorScreen: false,\r\n              Table: false,\r\n              trainingKit: false,\r\n              forkliftTrainingKit: false,\r\n              CPRmannequins: false,\r\n              firstAidAEDKit: false,\r\n              RespiratorFitTestKit: false,\r\n              Handouts: false,\r\n              active: true,\r\n              addOn: \"\",\r\n              error: {},\r\n              modal: false,\r\n              quotationIssuedBy: \"\",\r\n              instructions: \"\",\r\n              serviceModal: false,\r\n              billableService: true,\r\n              alternateName: \"\",\r\n              costForService: 0.0,\r\n              requestedServices: [],\r\n              requestedServiceRows: [],\r\n              viewServiceRows: [],\r\n              totalCost: 0,\r\n              viewServiceModal: false,\r\n              showTopics: false,\r\n              popoverOpen: false,\r\n              description: \"\",\r\n              companyMobileContacts: [],\r\n              companyOfficeContacts: [],\r\n              companyLocations: [],\r\n              listOfServices: [],\r\n              additionalEquipments: [],\r\n              quotationNumber: \"\"\r\n            });\r\n            API.deleteServiceRequests()\r\n          .then(() => {\r\n            console.log(\"Refresh services table\");\r\n          })\r\n          .catch(err => console.log(err));\r\n          })\r\n              .catch(err => console.log(err));\r\n            \r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n        \r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    this.validateEmail();\r\n    this.validateZIP();\r\n    this.validatePhone();\r\n    this.validateCellPhone();\r\n    this.handleCompanyName();\r\n    this.setState({\r\n      active: true\r\n      //((this.state.validCellPhone !== \"undefined\" && this.state.validCellPhone === true) || (this.state.validEmail !== \"undefined\" && this.state.validEmail === true) || (this.state.validPhone !== \"undefined\" && this.state.validPhone === true)) || this.state.validZIP && this.state.validCompanyName\r\n    });\r\n  };\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  toggleServiceModal() {\r\n    this.setState({\r\n      serviceModal: !this.state.serviceModal\r\n    });\r\n  }\r\n\r\n  toggleViewServicesModal = () => {\r\n    this.setState({\r\n      viewServiceModal: !this.state.viewServiceModal,\r\n      viewServiceRows: this.removeServices() != undefined ? this.removeServices() : []\r\n    });\r\n    \r\n  };\r\n\r\n  togglePopOver() {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen\r\n    });\r\n  }\r\n\r\n  viewServiceModal = () => {\r\n    this.setState({\r\n      viewServiceRows: this.removeServices() != undefined ? this.removeServices() : []\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img\r\n          src=\"./open3.jpg\"\r\n          alt=\"Construction workers\"\r\n          className=\"openingImage\"\r\n        />\r\n\r\n        <Container className=\"mt-3\">\r\n          <Form id=\"serviceRequestForm\">\r\n          <FormGroup>\r\n              <Label for=\"quotationIssuedBy\">Quotation Issued By</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"quotationIssuedBy\"\r\n                id=\"quotationIssuedBy\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option value=\"\">Choose Quotation Issued By</option>\r\n                {employees.map((x, index) => (\r\n                  <option key={\"emp\" + index} value={x}>\r\n                    {x}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"companyName\">Company Name</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"companyName\"\r\n                id=\"companyNameSelect\"\r\n                onChange={this.handleInputChange}\r\n                onClick={this.handleCompanyName}\r\n              >\r\n                <option>Select company name</option>\r\n                {services.companyNames.map(option => (\r\n                    <option>{option}</option>\r\n                  ))}\r\n              </Input>\r\n              <Label for=\"newCompanyName\">New Company?</Label>\r\n              <div>\r\n                <Button color=\"secondary\" onClick={this.toggleModal}>\r\n                  Add new company\r\n                </Button>\r\n                <Modal\r\n                  isOpen={this.state.modal}\r\n                  toggle={this.toggleModal}\r\n                  className={this.props.className}\r\n                >\r\n                  <ModalHeader toggle={this.toggleModal}>\r\n                    Enter new company details\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Label for=\"newCompanyName\">Company Name</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newCompanyName\"\r\n                          id=\"newCompanyName\"\r\n                          placeholder=\"Enter company name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n\r\n                        <Label for=\"newProducer\">Producer</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newProducer\"\r\n                          id=\"newProducer\"\r\n                          placeholder=\"Enter producer's name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n\r\n                        <Label for=\"newAgency\">Agency</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newAgency\"\r\n                          id=\"newAgency\"\r\n                          placeholder=\"Enter agency's name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n\r\n                        <Label for=\"newContractClient\">Contract Clients</Label>\r\n                        <br />\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"newContractClient\"\r\n                          name=\"newContractClient\"\r\n                          value={this.state.newContractClient}\r\n                          defaultChecked={this.state.newContractClient}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              newContractClient: !this.state.newContractClient\r\n                            })\r\n                          }\r\n                        />\r\n                        <br />\r\n                      </FormGroup>\r\n                      <hr />\r\n\r\n                      <Form id=\"newContactPhone\">\r\n                        <FormGroup>\r\n                          <Label for=\"newContactName\">Contact Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactName\"\r\n                            id=\"newContactName\"\r\n                            placeholder=\"Enter contact's name\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactEmail\">Contact Email ID</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactEmail\"\r\n                            id=\"newContactEmail\"\r\n                            placeholder=\"Enter contact's email ID\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactOfficeNumber\">\r\n                            Contact Office Number\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactOfficePhone\"\r\n                            id=\"newContactOfficePhone\"\r\n                            placeholder=\"Enter contact's office phone number\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactMobilePhone\">\r\n                            Contact Mobile Number\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactMobilePhone\"\r\n                            id=\"newContactMobilePhone\"\r\n                            placeholder=\"Enter contact's mobile number\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactMobileAlternate\">\r\n                            Contact Alternate Mobile Number\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactMobilePhoneAlternate\"\r\n                            id=\"newContactMobilePhoneAlternate\"\r\n                            placeholder=\"Enter contact's alternate mobile number\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"mainContact\">\r\n                            Is this the main contact?\r\n                          </Label>\r\n                          <br />\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id=\"check\"\r\n                            name=\"mainContact\"\r\n                            value={this.state.mainContact}\r\n                            defaultChecked={this.state.mainContact}\r\n                            onClick={() =>\r\n                              this.setState({\r\n                                mainContact: !this.state.mainContact\r\n                              })\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <br />\r\n                        <b style={styles.note}>\r\n                          Click on the plus icon to add more contacts\r\n                        </b>{\" \"}\r\n                        <br />\r\n                        <div style={styles.FaPlus}>\r\n                          <FaPlus onClick={this.addContact} />\r\n                        </div>\r\n                        <span>\r\n                          <div id=\"notifyContactAdded\" style={styles.notify}>\r\n                            New contact has been added!\r\n                          </div>\r\n                          <div\r\n                            id=\"removeContactNotification\"\r\n                            style={styles.removeContactNotification}\r\n                            onClick={() => {\r\n                              document.getElementById(\r\n                                \"removeContactNotification\"\r\n                              ).style.display = \"none\";\r\n                              document.getElementById(\r\n                                \"notifyContactAdded\"\r\n                              ).style.display = \"none\";\r\n                            }}\r\n                          >\r\n                            x\r\n                          </div>\r\n                        </span>\r\n                      </Form>\r\n\r\n                      <hr />\r\n\r\n                      <Form id=\"newContactLocation\">\r\n                        <Label>Company Locations</Label> <br />\r\n                        <Label for=\"mainLocation\">\r\n                          Is this the main office location?\r\n                        </Label>\r\n                        <br />\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"check\"\r\n                          name=\"mainLocation\"\r\n                          value={this.state.mainLocation}\r\n                          defaultChecked={this.state.mainLocation}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              mainLocation: !this.state.mainLocation\r\n                            })\r\n                          }\r\n                        />\r\n                        <br />\r\n                        <Label for=\"newContactStreetAddress\">\r\n                          Street Address\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactStreetAddress\"\r\n                          id=\"newContactStreetAddress\"\r\n                          placeholder=\"Enter street address\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactCity\">City</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactCity\"\r\n                          id=\"newContactCity\"\r\n                          placeholder=\"Enter name of city\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactState\">State</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactState\"\r\n                          id=\"newContactState\"\r\n                          placeholder=\"Enter name of state\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactZIP\">ZIP code</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactZIP\"\r\n                          id=\"newContactZIP\"\r\n                          placeholder=\"Enter ZIP code\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactCountry\">Country</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactCountry\"\r\n                          id=\"newContactCountry\"\r\n                          placeholder=\"Enter name of country\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <b style={styles.note}>\r\n                          Click on the plus icon to add more locations\r\n                        </b>\r\n                        <br />\r\n                        <div style={styles.FaPlus}>\r\n                          <FaPlus onClick={this.addLocation} />{\" \"}\r\n                        </div>\r\n                        <span>\r\n                          <div id=\"notifyLocationAdded\" style={styles.notify}>\r\n                            New location has been added!\r\n                          </div>\r\n                          <div\r\n                            id=\"removeLocationNotification\"\r\n                            style={styles.removeContactNotification}\r\n                            onClick={() => {\r\n                              document.getElementById(\r\n                                \"removeLocationNotification\"\r\n                              ).style.display = \"none\";\r\n                              document.getElementById(\r\n                                \"notifyLocationAdded\"\r\n                              ).style.display = \"none\";\r\n                            }}\r\n                          >\r\n                            x\r\n                          </div>\r\n                        </span>\r\n                      </Form>\r\n\r\n                      <hr />\r\n\r\n                      <Form id=\"equipmentsAlwaysAvailable\">\r\n                        <Label for=\"equipmentsAlwaysAvailable\">\r\n                          Equipments already available on site\r\n                        </Label>\r\n                        {equipmentsAlwaysOnSite.map((x, index) => (\r\n                          <div>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              id={equipmentIDs[index]}\r\n                              name={x}\r\n                              onClick={this.handleInputChange}\r\n                            />{\" \"}\r\n                            {x}\r\n                          </div>\r\n                        ))}\r\n                      </Form>\r\n                    </Form>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.saveCompany}>\r\n                      Save company\r\n                    </Button>\r\n                    <Button color=\"secondary\" onClick={this.toggleModal}>\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n\r\n              {this.state.validCompanyName ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"dateOfRequest\">Date of Request</Label>\r\n              <DatePicker\r\n                selected={this.state.startDate}\r\n                onChange={this.handleChange}\r\n                name=\"startDate\"\r\n                placeholder=\"Enter date of request\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"validThru\">Request valid until (YYYY-MM-DD)</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"validThru\"\r\n                id=\"validThru\"\r\n                placeholder=\"Quote valid till YYYY-MM-DD\"\r\n                value={this.state.validThru}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"paymentForTraining\">\r\n                Who is paying for the Service?\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"paymentForTraining\"\r\n                id=\"paymentForTraining\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option name=\"paymentForTraining\" value={\"\"}>\r\n                  Choose an option\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"Producer\"}>\r\n                  Producer\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"Contract\"}>\r\n                  Contract\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"Direct Sale\"}>\r\n                  Direct Sale\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"ARCA\"}>\r\n                  ARCA\r\n                </option>\r\n              </Input>\r\n              {this.state.paymentForTraining ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"producer\">Producer</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"producer\"\r\n                id=\"producer\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option>Choose producer</option>\r\n                {getCompanyDetails.map(x => (\r\n                  <option name=\"producer\" value={x.producer}>\r\n                    {x.producer}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <Label for=\"producer\">Producer not listed? Enter here</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"producer\"\r\n                id=\"producer\"\r\n                placeholder=\"Enter other producer's name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <Form>\r\n              <Label for=\"topic\">Add Services</Label>\r\n              <div>\r\n                <Button color=\"primary\" onClick={this.toggleServiceModal}>\r\n                  Add Services\r\n                </Button>\r\n                <Modal\r\n                  isOpen={this.state.serviceModal}\r\n                  toggle={this.toggleServiceModal}\r\n                  className={this.props.className}\r\n                >\r\n                  <ModalHeader toggle={this.toggleServiceModal}>\r\n                    Add Services\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Form id=\"addService\">\r\n                    <FormGroup>\r\n                      <Label for=\"service\">Services</Label>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"service\"\r\n                          id=\"service\"\r\n                          onChange={this.handleInputChange}\r\n                          onClick = {() => {\r\n                            if(this.state.service === \"Training\"){\r\n                              this.setState({\r\n                                showTopics: true\r\n                              });\r\n                            }\r\n                            else{\r\n                              this.setState({\r\n                                showTopics: false\r\n                              });\r\n                            }\r\n                            this.getPriceAndQuantity();\r\n                          }}\r\n                        >\r\n                          <option name=\"service\" value={\"\"}>\r\n                            Choose a service\r\n                          </option>\r\n                          <option name = \"Training\" value=\"Training\" onClick = {() => {\r\n                            this.setState({showTopics: true});\r\n                          }}>Training</option>\r\n                          {this.state.listOfServices.map(x => (\r\n                            <option value={x.service}>\r\n                              {x.service}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {(this.state.service === \"\") ? <div>\r\n                        <Label for=\"newService\">New Service? Enter it here</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"service\"\r\n                          id=\"service\"\r\n                          onChange={this.handleInputChange}\r\n                          placeholder = \"Enter New Service's Name\"\r\n                        />\r\n                        <Label for=\"newServiceDescription\">Enter new service's description</Label>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          name=\"description\"\r\n                          id=\"description\"\r\n                          onChange={this.handleInputChange}\r\n                          placeholder = \"Enter New Service's Description\"\r\n                        />\r\n                        <Label for=\"newServiceCostPerUnit\">Enter new service's cost per unit</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"costForService\"\r\n                          id=\"costForService\"\r\n                          onChange={this.handleInputChange}\r\n                          placeholder = \"Enter New Service's cost per unit\"\r\n                        />\r\n                        </div> : <div>\r\n                        <br/>\r\n                      <Button id=\"Popover1\" onClick={this.togglePopOver}>\r\n                        Read more about the Service\r\n                      </Button>\r\n                      <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.togglePopOver}>\r\n                        <PopoverHeader id = \"serviceName\">{this.state.service}</PopoverHeader>\r\n                        <PopoverBody id = \"description\">{this.state.description}</PopoverBody>\r\n                      </Popover>\r\n                      </div>}\r\n                        \r\n                    </FormGroup>\r\n                    {this.state.showTopics === true? <div>\r\n                      <FormGroup>\r\n                        <Label for=\"topic\">Topic</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"topic\"\r\n                          id=\"topic\"\r\n                          onChange={this.handleInputChange}\r\n                          onClick={this.getPriceAndQuantity}\r\n                        >\r\n                          <option name=\"topic\" value={\"\"}>\r\n                            Choose a topic\r\n                          </option>\r\n                          {this.state.topicsVsEquipments.map(x => (\r\n                            <option name=\"topic\" value={x.topic}>\r\n                              {x.topic}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {this.state.topic.length > 0 &&\r\n                        this.state.topic !== \"Other\" ? (\r\n                          <FaCheckCircle style={styles.FaCheck} />\r\n                        ) : (\r\n                          <FaTimesCircle style={styles.FaTimes} />\r\n                        )}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"newtopic\">\r\n                          New Topic? Enter the topic below\r\n                        </Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"topic\"\r\n                          id=\"newTopic\"\r\n                          placeholder=\"Enter new topic's name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n                      </div> : \"\"}\r\n                      <br/>\r\n                      <FormGroup>\r\n                        <Label for=\"billable\">Billable Service</Label> <br />\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"billable\"\r\n                          name=\"billableService\"\r\n                          value={this.state.billableService}\r\n                          defaultChecked\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              billableService: !this.state.billableService\r\n                            })\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"costForService\">Cost for Service</Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"costForService\"\r\n                          id=\"costForService\"\r\n                          placeholder=\"Enter the cost for the service\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"alternateNameForService\">\r\n                          Alternate Name For Service\r\n                        </Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"alternateName\"\r\n                          id=\"alternateNameForService\"\r\n                          placeholder=\"Enter alternate name for service\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"durationInMin\">\r\n                          Duration of Service in Minutes\r\n                        </Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"durationInMin\"\r\n                          id=\"durationInMin\"\r\n                          placeholder=\"Enter duration of service in minutes\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"quantity\">Number of Units of Service</Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"numServiceUnits\"\r\n                          id=\"numServiceUnits\"\r\n                          placeholder=\"Enter number of service units\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n                      <Button color=\"secondary\" onClick={this.addService}>\r\n                        Enter another service\r\n                      </Button>\r\n                    </Form>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.saveServices}>\r\n                      Save Services\r\n                    </Button>{\" \"}\r\n                    <Button color=\"secondary\" onClick={this.toggleServiceModal}>\r\n                      Close\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n              <br />\r\n            </Form>\r\n            {this.state.topic === \"Training\" ? (\r\n              <FormGroup className=\"training\" id=\"training\">\r\n                <Label for=\"address\">Address of Training</Label>\r\n                <br />\r\n                <Label for=\"streetAddress\">Street Address</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"streetAddress\"\r\n                  id=\"streetAddress\"\r\n                  placeholder=\"Street Address\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Label for=\"zip\">ZIP</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"zip\"\r\n                  id=\"zip\"\r\n                  placeholder=\"ZIP\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                {this.state.validZIP > 0 ? (\r\n                  <FaCheckCircle style={styles.FaCheck} />\r\n                ) : (\r\n                  <FaTimesCircle style={styles.FaTimes} />\r\n                )}\r\n                <br />\r\n                <Label for=\"country\">Country</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"country\"\r\n                  id=\"country\"\r\n                  onChange={this.handleInputChange}\r\n                >\r\n                  <option>United States</option>\r\n                  {Object.keys(cities).map(country => (\r\n                    <option>{country}</option>\r\n                  ))}\r\n                </Input>\r\n                <Label for=\"state\">State</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"state\"\r\n                  id=\"state\"\r\n                  onChange={this.handleInputChange}\r\n                >\r\n                  <option>Arizona</option>\r\n                  {us_states.map(state => (\r\n                    <option>{state}</option>\r\n                  ))}\r\n                </Input>\r\n                <Label for=\"city\">City</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  id=\"city\"\r\n                  placeholder=\"Enter City\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n\r\n                <Label for=\"langOfTraining\">Language of training</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"langTraining\"\r\n                  id=\"langTraining\"\r\n                  onChange={this.handleInputChange}\r\n                >\r\n                  <option name=\"langTraining\" value=\"\">\r\n                    Choose a language of training\r\n                  </option>\r\n                  <option name=\"langTraining\" value=\"English\">\r\n                    English\r\n                  </option>\r\n                  <option name=\"langTraining\" value=\"Spanish\">\r\n                    Spanish\r\n                  </option>\r\n                  <option name=\"langTraining\" value=\"Bilingual\">\r\n                    Bilingual\r\n                  </option>\r\n                </Input>\r\n\r\n                <Label for=\"numStudents\">Number of students</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"numStudents\"\r\n                  id=\"numStudents\"\r\n                  placeholder=\"Enter number of students\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </FormGroup>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <FormGroup>\r\n              <Label for=\"contactName\">Contact Person's Name</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactName\"\r\n                id=\"contactName\"\r\n                placeholder=\"Enter contact name\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option key={\"contactPerson\"} value={\"\"}>\r\n                  Choose contact person's name\r\n                </option>\r\n                {getCompanyContacts.map((x, index) => (\r\n                  <option key={\"contact person\" + index} value={x.contactName}>\r\n                    {x.contactName}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <Label for=\"contactName\">\r\n                Name of contact not listed? Enter it here\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactName\"\r\n                id=\"contactNameNew\"\r\n                placeholder=\"Enter other contact's name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"contactEmail\">Contact Person's Email</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactEmail\"\r\n                id=\"contactEmail\"\r\n                placeholder=\"Valid email format example@test.com\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option key={\"contactEmail\"} value={\"\"}>\r\n                  Choose contact person's email\r\n                </option>\r\n                {getCompanyContacts.map((x, index) => (\r\n                  <option\r\n                    key={\"contact_person_email\" + index}\r\n                    value={x.contactEmail}\r\n                  >\r\n                    {x.contactEmail}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <Label for=\"contactEmail\">Email not listed? Enter it here</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactEmail\"\r\n                id=\"contactEmailNew\"\r\n                placeholder=\"Enter other contact's email ID\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              {this.state.validEmail ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"contactPhone\">Contact Person's Contact Number</Label>\r\n              <br />\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactPhone\"\r\n                id=\"contactPhone\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option value=\"\">Choose Office Number</option>\r\n              {this.state.companyOfficeContacts.map(x => <option value={x.contactOfficePhone}>{x.contactOfficePhone}</option>)}\r\n              </Input>\r\n              <Label for=\"contactPhone\">Contact Person's Office Number not listed? Enter it here</Label>\r\n              <br />\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactPhone\"\r\n                id=\"contactPhoneNew\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              {this.state.validPhone ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"contactCell\">\r\n                Contact Person's Cell phone number\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactCellPhone\"\r\n                id=\"contactCellPhone\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option value=\"\">Choose Mobile Phone</option>\r\n              {this.state.companyMobileContacts.map(x => <option value={x.contactMobilePhone}>{x.contactMobilePhone}</option>)}\r\n              </Input>\r\n              <Label for=\"contactCell\">\r\n                Contact Person's Cell phone number not listed? Enter it here\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactCellPhone\"\r\n                id=\"contactCellPhone\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              {this.state.validCellPhone ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <div>\r\n              {this.state.topic === \"Training\" ? (\r\n                <div>\r\n                  <Label for=\"sameLocAsTraining\">\r\n                    Same Location as Training?{\" \"}\r\n                  </Label>\r\n                  <br />\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"check\"\r\n                    name=\"sameLocAsTraining\"\r\n                    value={this.state.sameLocAsTraining}\r\n                    defaultChecked = {false}\r\n                    onChange={this.handleInputChange}\r\n                    onClick={e => {\r\n                      this.setState({\r\n                        sameLocAsTraining: !this.state.sameLocAsTraining\r\n                      });\r\n                      if (this.state.sameLocAsTraining) {\r\n                        this.setState({\r\n                          contactStreetAddress: this.state.contactStreetAddress,\r\n                          contactZip: this.state.contactZip,\r\n                          contactCountry: this.state.contactCountry,\r\n                          contactState: this.state.contactState,\r\n                          contactCity: this.state.contactCity\r\n                        });\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <br />\r\n              {this.state.sameLocAsTraining ? (\r\n                \"\"\r\n              ) : (\r\n                <FormGroup className=\"training\" id=\"training\">\r\n                  <Label for=\"address\">Contact Address</Label>\r\n                  <br />\r\n                  <Label for=\"streetAddress\">Street Address</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactStreetAddress\"\r\n                    id=\"contactStreetAddress\"\r\n                    placeholder=\"Street Address\"\r\n                    onChange={this.handleInputChange}>\r\n                    <option value=\"\">Choose Street Address</option>\r\n                    {this.state.companyLocations.filter(x => x.contactStreetAddress !== undefined || x.contactStreetAddress.trim() !== \"\").map(\r\n                      y => <option value={y.contactStreetAddress}>{y.contactStreetAddress}</option>\r\n                    )}\r\n                  </Input>\r\n                  <Label for=\"streetAddress\">Contact Street Address not listed? Enter it here</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactStreetAddress\"\r\n                    id=\"contactStreetAddress\"\r\n                    placeholder=\"Street Address\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <Label for=\"contactZip\">ZIP</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactZip\"\r\n                    id=\"contactZip\"\r\n                    placeholder=\"ZIP code\"\r\n                    onChange={this.handleInputChange}>\r\n                    <option value=\"\">Choose ZIP</option>\r\n                    {this.state.companyLocations.filter(x => x.contactZIP !== undefined || x.contactZIP.trim() !== \"\").map(\r\n                      y => <option value={y.contactZIP}>{y.contactZIP}</option>\r\n                    )}\r\n                  </Input>\r\n                  <Label for=\"contactZip\">ZIP not listed? Enter it here</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactZip\"\r\n                    id=\"contactZip\"\r\n                    placeholder=\"ZIP code\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <Label for=\"contactCountry\">Country</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactCountry\"\r\n                    id=\"contactCountry\"\r\n                    onChange={this.handleInputChange}\r\n                  >\r\n                    <option>United States</option>\r\n                    {Object.keys(cities).map(country => (\r\n                      <option>{country}</option>\r\n                    ))}\r\n                  </Input>\r\n                  <Label for=\"contactState\">State</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactState\"\r\n                    id=\"contactState\"\r\n                    onChange={this.handleInputChange}\r\n                  >\r\n                    <option>Arizona</option>\r\n                    {us_states.map(state => (\r\n                      <option>{state}</option>\r\n                    ))}\r\n                  </Input>\r\n                  <Label for=\"contactCity\">City</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactCity\"\r\n                    id=\"contactCity\"\r\n                    placeholder=\"Enter City\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </FormGroup>\r\n              )}\r\n\r\n              <FormGroup>\r\n                <Label for=\"equipments\">Equipment needed</Label> <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"Laptop\"\r\n                  name=\"Laptop\"\r\n                  defaultChecked={this.state.Laptop}\r\n                />\r\n                Laptop <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"projectorScreen\"\r\n                  name=\"projectorScreen\"\r\n                  defaultChecked={this.state.projectorScreen}\r\n                />\r\n                Projector Screen\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"Table\"\r\n                  name=\"Table\"\r\n                  defaultChecked={this.state.Table}\r\n                />\r\n                Table\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"forkliftTrainingKit\"\r\n                  name=\"forkliftTrainingKit\"\r\n                  defaultChecked={this.state.forkliftTrainingKit}\r\n                />\r\n                Forklift Training Kit (Grey Duffle Bag)\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"trainingKit\"\r\n                  name=\"trainingKit\"\r\n                  defaultChecked={this.state.trainingKit}\r\n                />\r\n                Training Kit (Green Duffle Bag)\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"CPRmannequins\"\r\n                  name=\"CPRmannequins\"\r\n                  defaultChecked={this.state.CPRmannequins}\r\n                />\r\n                CPR Mannequins\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"firstAidAEDKit\"\r\n                  name=\"firstAidAEDKit\"\r\n                  defaultChecked={this.state.firstAidAEDKit}\r\n                />\r\n                First Aid AED Kit (Red bagpack)\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"RespiratorFitTestKit\"\r\n                  name=\"RespiratorFitTestKit\"\r\n                  defaultChecked={this.state.RespiratorFitTestKit}\r\n                />\r\n                Respirator Fit Test Kit\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"Handouts\"\r\n                  name=\"Handouts\"\r\n                  defaultChecked={this.state.Handouts}\r\n                />\r\n                Handouts\r\n                <br />\r\n                <Label for=\"additionalEquipment\">\r\n                  Need additional equipment? Add it here\r\n                </Label>\r\n                <div style={styles.FaPlus} id=\"clearText\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"addOn\"\r\n                    id=\"addOn\"\r\n                    value={this.state.addOn}\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <FaPlus\r\n                    onClick={() => {\r\n                      if (this.state.addOn.trim() !== \"\") {\r\n                        this.state.additionalEquipments.push(this.state.addOn.trim());\r\n                        document.getElementById('addEquipment').style.display = \"block\";\r\n                      }\r\n                      else{\r\n                        document.getElementById('addEquipment').style.display = \"none\";\r\n                      }\r\n                    }}\r\n                  />{\" \"}\r\n                </div>\r\n                <Alert color=\"success\" id=\"addEquipment\">New equipment added! <span style={{'float':'right'}} onClick = {() => {\r\n                  document.getElementById('addEquipment').style.display = \"none\";\r\n                }}><FaTimes /></span></Alert>\r\n              </FormGroup>\r\n            </div>\r\n            <FormGroup>\r\n              <Label for=\"instructions\">\r\n                Provide instructions to service provider\r\n              </Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"instructions\"\r\n                id=\"instructions\"\r\n                placeholder=\"Instructions\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <Button\r\n              name=\"active\"\r\n              onClick={this.handleSubmit}\r\n              disabled={!this.state.active}\r\n            >\r\n              Submit\r\n            </Button>{\" \"}\r\n            &nbsp;\r\n            <Button onClick={this.handlePDF}>Print</Button>\r\n          </Form>\r\n          <br />\r\n\r\n          <div>\r\n            <div id=\"capture\" style={styles.pdf}>\r\n              <div>\r\n                <div style={styles.info}>\r\n                  Insure Compliance, LLC\r\n                  <br />\r\n                  4406 E Main St 102-58\r\n                  <br />\r\n                  Mesa, AZ 85205 US\r\n                  <br />\r\n                  (866) 647-2373\r\n                  <br />\r\n                  insurecompliance.net\r\n                  <br />\r\n                </div>\r\n                <img\r\n                  src=\"./Capture.PNG\"\r\n                  alt=\"Company logo\"\r\n                  style={styles.logo}\r\n                />\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div style={styles.content}>\r\n                <h3 style={styles.quotation}>QUOTATION</h3>\r\n\r\n                <div>\r\n                  <div style={styles.billedTo}>\r\n                    <b>ADDRESS</b>\r\n                    <br />\r\n                    {this.state.companyName}\r\n                    <br />\r\n                    {this.state.contactStreetAddress}\r\n                    <br />\r\n                    {this.state.contactCity}{\" \"}\r\n                    {getInitial(this.state.contactState)}\r\n                    {this.state.contactZip}\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div style={styles.quote}>\r\n                    <b>QUOTATION</b> # 1023 &nbsp; <br />\r\n                    <b>DATE</b>{\" \"}\r\n                    <Moment format=\"YYYY/MM/DD\" date={this.state.startDate} />{\" \"}\r\n                    &nbsp; <br />\r\n                  </div>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <hr style={styles.quotation} />\r\n\r\n                <div>\r\n                  <div style={styles.billedTo}>\r\n                    <b>QUOTATION ISSUED BY</b> &nbsp;\r\n                    {this.state.quotationIssuedBy}\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div style={styles.quote}>\r\n                    <b>QUOTATION VALID THRU</b>&nbsp;\r\n                    <Moment\r\n                      format=\"YYYY/MM/DD\"\r\n                      date={this.state.validThru}\r\n                    />{\" \"}\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <table id=\"customers\">\r\n                  <tr>\r\n                    <th>ACTIVITY</th>\r\n                    <th>QTY</th>\r\n                    <th>RATE</th>\r\n                    <th>AMOUNT</th>\r\n                  </tr>\r\n                  <tbody>\r\n                    {this.state.requestedServices.length > 0\r\n                      ? this.state.requestedServiceRows\r\n                      : \"\"}\r\n                  </tbody>\r\n                </table>\r\n\r\n                <br />\r\n                <hr style={styles.quotation} />\r\n                <div style={styles.quote}>\r\n                  <span style={{ fontSize: \"1.25em\" }}>\r\n                    <b>TOTAL</b> <b>{\"$\" + this.state.totalCost.toFixed(2)}</b>\r\n                  </span>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div>\r\n                  <div style={styles.billedTo}>\r\n                    <b>Accepted by</b>\r\n                  </div>\r\n\r\n                  <div style={styles.quote}>\r\n                    <b>Accepted Date</b>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}