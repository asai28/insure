{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\anuhya\\\\Desktop\\\\ic\\\\insure\\\\client\\\\src\\\\Pages\\\\TaskList\\\\TaskList.js\";\nimport React from \"react\";\nimport { Jumbotron, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport \"./TaskList.scss\";\nimport { isNullOrUndefined } from \"util\";\nimport { Tooltip } from 'reactstrap'; // Import React Table\n\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskList, _React$Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.componentWillMount = function () {\n      API.getEmployees().then(function (res) {\n        _this.setState({\n          employee_data: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getTasks = function () {\n      if (_this.state.employee.length > 0) {\n        API.getEmployeeTasks(_this.state.employee.split(\" \").join(\"%20\")).then(function (res) {\n          console.log(res.data);\n\n          _this.setState({\n            tasks: res.data\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.state = {\n      employee_data: [],\n      tasks: [],\n      quoteApproved: false,\n      employee: \"\",\n      tooltipOpen: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTasks = _this.getTasks.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"employee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Employee Name\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"employee\",\n        id: \"employee\",\n        onChange: this.handleInputChange,\n        onClick: this.getTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Choose your name\"), this.state.employee_data.map(function (x) {\n        return React.createElement(\"option\", {\n          value: x.EMP_NAME,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, x.EMP_NAME);\n      }))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        style: {\n          'fontFamily': 'Noto Serif SC, serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Active Tasks\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        id: \"active\",\n        style: {\n          'text-align': 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"table-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"QUOTATION NUMBER\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"SERVICE\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"CLIENT\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"DATE ASSIGNED\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"DUE TIME\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"QTY\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"DATE COMPLETED (YYYY-MM-DD)\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"STATUS/NOTES/COMMENTS\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"SERVICE DESCRIPTION\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"QUOTE APPROVED\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"COMPLETED\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.tasks.filter(function (x) {\n        return isNullOrUndefined(x.dateCompleted) && x.quotationIssuedBy === _this2.state.employee;\n      }).map(function (x, index) {\n        return React.createElement(\"tr\", {\n          key: \"activeList\" + index,\n          className: \"table-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          key: \"activeList\" + index + \"quotationNumber\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, x.quotationNumber), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"service\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, x.service), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"client\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, x.client), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"dateAssigned\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, moment(x.dateAssigned).format(\"YYYY-MM-DD\")), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"dueTime\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, moment(x.dueDate).format(\"YYYY-MM-DD\")), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"serviceUnits\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, x.qty), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_dateOfCompletion\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          name: \"dateOfCompletion\",\n          id: \"dateOfCompletion\",\n          value: moment(x.createdAt).format(\"YYYY-MM-DD\"),\n          placeholder: \"Enter date of completion\",\n          onChange: _this2.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_notes_comments\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"textarea\",\n          name: \"comments\",\n          id: \"comments\",\n          value: x.status_notes_comments,\n          placeholder: \"Enter status/notes/comments\",\n          onChange: _this2.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"serviceDescription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, x.serviceDescription), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_quoteApproved\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          tag: \"fieldset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), ' ', \"Yes\")), React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), ' ', \"No\")))), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_completed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          tag: \"fieldset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), ' ', \"Completed\")), React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }), ' ', \"Not Completed\")))));\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        style: {\n          'fontFamily': 'Noto Serif SC, serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Completed Tasks\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        id: \"active\",\n        style: {\n          'text-align': 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"table-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"QUOTATION NUMBER\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"SERVICE\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"CLIENT\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"DATE ASSIGNED\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"DUE TIME\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"QTY\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"DATE COMPLETED (YYYY-MM-DD)\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"STATUS/NOTES/COMMENTS\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"SERVICE DESCRIPTION\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"QUOTE APPROVED\"), React.createElement(\"th\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"COMPLETED\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.state.tasks.filter(function (x) {\n        return !isNullOrUndefined(x.dateCompleted) && x.quotationIssuedBy === _this2.state.employee;\n      }).map(function (x, index) {\n        return React.createElement(\"tr\", {\n          key: \"activeList\" + index,\n          className: \"table-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          key: \"activeList\" + index + \"quotationNumber\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, x.quotationNumber), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"service\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, x.service), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"client\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, x.client), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"dateAssigned\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, moment(x.dateAssigned).format(\"YYYY-MM-DD\")), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"dueTime\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, moment(x.dueDate).format(\"YYYY-MM-DD\")), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"serviceUnits\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, x.qty), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_dateOfCompletion\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          name: \"dateOfCompletion\",\n          id: \"dateOfCompletion\",\n          value: moment(x.createdAt).format(\"YYYY-MM-DD\"),\n          placeholder: \"Enter date of completion\",\n          onChange: _this2.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_notes_comments\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"textarea\",\n          name: \"comments\",\n          id: \"comments\",\n          value: x.status_notes_comments,\n          placeholder: \"Enter status/notes/comments\",\n          onChange: _this2.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"serviceDescription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, x.serviceDescription), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_quoteApproved\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          tag: \"fieldset\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), ' ', \"Yes\")), React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }), ' ', \"No\")))), React.createElement(\"td\", {\n          key: \"activeList\" + index + \"_completed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, x.completed));\n      })))));\n    }\n  }]);\n\n  return TaskList;\n}(React.Component);\n\nexport default TaskList;","map":{"version":3,"sources":["C:\\Users\\anuhya\\Desktop\\ic\\insure\\client\\src\\Pages\\TaskList\\TaskList.js"],"names":["React","Jumbotron","Button","Form","FormGroup","Label","Input","Container","Row","Col","API","moment","isNullOrUndefined","Tooltip","ReactTable","TaskList","props","componentWillMount","getEmployees","then","res","setState","employee_data","data","catch","err","console","log","toggle","isOpen","state","handleInputChange","e","target","name","value","getTasks","employee","length","getEmployeeTasks","split","join","tasks","quoteApproved","tooltipOpen","bind","map","x","EMP_NAME","filter","dateCompleted","quotationIssuedBy","index","quotationNumber","service","client","dateAssigned","format","dueDate","qty","createdAt","status_notes_comments","serviceDescription","completed","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Jumbotron, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport API from \"../../utils/API\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport \"./TaskList.scss\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { Tooltip } from 'reactstrap';\r\n// Import React Table\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\n\r\nclass TaskList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employee_data: [],\r\n            tasks: [],\r\n            quoteApproved: false,\r\n            employee: \"\",\r\n            tooltipOpen: false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.getTasks = this.getTasks.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        API.getEmployees()\r\n        .then(res => {\r\n            this.setState({\r\n                employee_data: res.data \r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    getTasks = () => {\r\n        if(this.state.employee.length > 0){\r\n            API.getEmployeeTasks(this.state.employee.split(\" \").join(\"%20\"))\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    tasks: res.data\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div> \r\n            <Container>\r\n            <Jumbotron>\r\n            <FormGroup>\r\n                <Label for=\"employee\">Employee Name</Label>\r\n                <Input type=\"select\" name=\"employee\" id=\"employee\" onChange={this.handleInputChange} onClick={this.getTasks}>\r\n                    <option>Choose your name</option>\r\n                    {this.state.employee_data.map(x => <option value={x.EMP_NAME}>{x.EMP_NAME}</option>)}\r\n                </Input>\r\n            </FormGroup>\r\n            </Jumbotron>\r\n           \r\n            </Container>\r\n           <Container>\r\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>Active Tasks</h5>\r\n            <br/>\r\n            <table id=\"active\" style={{'text-align':'center'}}>\r\n            <thead className=\"table-header\">\r\n                <tr>\r\n                    <th className=\"col\">QUOTATION NUMBER</th>\r\n                    <th className=\"col\">SERVICE</th>\r\n                    <th className=\"col\">CLIENT</th>\r\n                    <th className=\"col\">DATE ASSIGNED</th>\r\n                    <th className=\"col\">DUE TIME</th>\r\n                    <th className=\"col\">QTY</th>\r\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD)</th>\r\n                    <th className=\"col\">STATUS/NOTES/COMMENTS</th>\r\n                    <th className=\"col\">SERVICE DESCRIPTION</th>\r\n                    <th className=\"col\">QUOTE APPROVED</th>\r\n                    <th className=\"col\">COMPLETED</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.tasks.filter(x => isNullOrUndefined(x.dateCompleted) && x.quotationIssuedBy === this.state.employee).map((x, index) => \r\n                <tr key={\"activeList\"+index} className=\"table-row\">\r\n                    <td key={\"activeList\"+index+\"quotationNumber\"}>{x.quotationNumber}</td>\r\n                    <td key={\"activeList\"+index+\"service\"}>{x.service}</td>\r\n                    <td key={\"activeList\"+index+\"client\"}>{x.client}</td>\r\n                    <td key={\"activeList\"+index+\"dateAssigned\"}>{moment(x.dateAssigned).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"dueTime\"}>{moment(x.dueDate).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"serviceUnits\"}>{x.qty}</td>\r\n                    <td key={\"activeList\"+index+\"_dateOfCompletion\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"dateOfCompletion\"}\r\n                          id=\"dateOfCompletion\"\r\n                          value={moment(x.createdAt).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter date of completion\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_notes_comments\"}>\r\n                    <Input\r\n                          type=\"textarea\"\r\n                          name=\"comments\"\r\n                          id=\"comments\"\r\n                          value={x.status_notes_comments}\r\n                          placeholder=\"Enter status/notes/comments\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\" + index + \"serviceDescription\"}>\r\n                     {x.serviceDescription}\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_quoteApproved\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_completed\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                            Completed\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                            Not Completed\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n            </table>\r\n            <br/><br/>\r\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>Completed Tasks</h5>\r\n            <br/>\r\n            <table id=\"active\" style={{'text-align':'center'}}>\r\n            <thead className=\"table-header\">\r\n                <tr>\r\n                    <th className=\"col\">QUOTATION NUMBER</th>\r\n                    <th className=\"col\">SERVICE</th>\r\n                    <th className=\"col\">CLIENT</th>\r\n                    <th className=\"col\">DATE ASSIGNED</th>\r\n                    <th className=\"col\">DUE TIME</th>\r\n                    <th className=\"col\">QTY</th>\r\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD)</th>\r\n                    <th className=\"col\">STATUS/NOTES/COMMENTS</th>\r\n                    <th className=\"col\">SERVICE DESCRIPTION</th>\r\n                    <th className=\"col\">QUOTE APPROVED</th>\r\n                    <th className=\"col\">COMPLETED</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.tasks.filter(x => !isNullOrUndefined(x.dateCompleted) && x.quotationIssuedBy === this.state.employee).map((x, index) => \r\n                <tr key={\"activeList\"+index} className=\"table-row\">\r\n                    <td key={\"activeList\"+index+\"quotationNumber\"}>{x.quotationNumber}</td>\r\n                    <td key={\"activeList\"+index+\"service\"}>{x.service}</td>\r\n                    <td key={\"activeList\"+index+\"client\"}>{x.client}</td>\r\n                    <td key={\"activeList\"+index+\"dateAssigned\"}>{moment(x.dateAssigned).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"dueTime\"}>{moment(x.dueDate).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"serviceUnits\"}>{x.qty}</td>\r\n                    <td key={\"activeList\"+index+\"_dateOfCompletion\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"dateOfCompletion\"}\r\n                          id=\"dateOfCompletion\"\r\n                          value={moment(x.createdAt).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter date of completion\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_notes_comments\"}>\r\n                    <Input\r\n                          type=\"textarea\"\r\n                          name=\"comments\"\r\n                          id=\"comments\"\r\n                          value={x.status_notes_comments}\r\n                          placeholder=\"Enter status/notes/comments\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\" + index + \"serviceDescription\"}>\r\n                    {x.serviceDescription}\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_quoteApproved\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_completed\"}>\r\n                    {x.completed}\r\n                    </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n            </table>\r\n           </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}